{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMfracMixin = void 0;\n\nfunction CommonMfracMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;\n\n      _this.bevel = null;\n      _this.pad = _this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace;\n\n      if (_this.node.attributes.get('bevelled')) {\n        var H = _this.getBevelData(_this.isDisplay()).H;\n\n        var bevel = _this.bevel = _this.createMo('/');\n\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(1);\n        bevel.getStretchedVariant([H], true);\n      }\n\n      return _this;\n    }\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      bbox.empty();\n\n      var _a = this.node.attributes.getList('linethickness', 'bevelled'),\n          linethickness = _a.linethickness,\n          bevelled = _a.bevelled;\n\n      var display = this.isDisplay();\n      var w = null;\n\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        var thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n\n        w += bbox.w;\n      }\n\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    };\n\n    class_1.prototype.getFractionBBox = function (bbox, display, t) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var tex = this.font.params;\n      var a = tex.axis_height;\n\n      var _a = this.getTUV(display, t),\n          T = _a.T,\n          u = _a.u,\n          v = _a.v;\n\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    };\n\n    class_1.prototype.getTUV = function (display, t) {\n      var tex = this.font.params;\n      var a = tex.axis_height;\n      var T = (display ? 3.5 : 1.5) * t;\n      return {\n        T: (display ? 3.5 : 1.5) * t,\n        u: (display ? tex.num1 : tex.num2) - a - T,\n        v: (display ? tex.denom1 : tex.denom2) + a - T\n      };\n    };\n\n    class_1.prototype.getAtopBBox = function (bbox, display) {\n      var _a = this.getUVQ(display),\n          u = _a.u,\n          v = _a.v,\n          nbox = _a.nbox,\n          dbox = _a.dbox;\n\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    };\n\n    class_1.prototype.getUVQ = function (display) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var tex = this.font.params;\n\n      var _a = __read(display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2], 2),\n          u = _a[0],\n          v = _a[1];\n\n      var p = (display ? 7 : 3) * tex.rule_thickness;\n      var q = u - nbox.d * nbox.scale - (dbox.h * dbox.scale - v);\n\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n\n      return {\n        u: u,\n        v: v,\n        q: q,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n\n    class_1.prototype.getBevelledBBox = function (bbox, display) {\n      var _a = this.getBevelData(display),\n          u = _a.u,\n          v = _a.v,\n          delta = _a.delta,\n          nbox = _a.nbox,\n          dbox = _a.dbox;\n\n      var lbox = this.bevel.getBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    };\n\n    class_1.prototype.getBevelData = function (display) {\n      var nbox = this.childNodes[0].getBBox();\n      var dbox = this.childNodes[1].getBBox();\n      var delta = display ? .4 : .15;\n      var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      var a = this.font.params.axis_height;\n      var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {\n        H: H,\n        delta: delta,\n        u: u,\n        v: v,\n        nbox: nbox,\n        dbox: dbox\n      };\n    };\n\n    class_1.prototype.canStretch = function (_direction) {\n      return false;\n    };\n\n    class_1.prototype.isDisplay = function () {\n      var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'),\n          displaystyle = _a.displaystyle,\n          scriptlevel = _a.scriptlevel;\n\n      return displaystyle && scriptlevel === 0;\n    };\n\n    class_1.prototype.getWrapWidth = function (i) {\n      var attributes = this.node.attributes;\n\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getBBox().w;\n      }\n\n      var w = this.getBBox().w;\n      var thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) - 2 * this.pad;\n    };\n\n    class_1.prototype.getChildAlign = function (i) {\n      var attributes = this.node.attributes;\n      return attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]);\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMfracMixin = CommonMfracMixin;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/output/common/Wrappers/mfrac.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMo} from './mo.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {DIRECTION} from '../FontData.js';\n\n/*****************************************************************/\n/**\n * The CommonMfrac interface\n */\nexport interface CommonMfrac extends AnyWrapper {\n  /**\n   * @param {BBox} bbox        The buonding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   */\n  getFractionBBox(bbox: BBox, display: boolean, t: number): void;\n\n  /**\n   * @param {boolean} display  True for display-mode fractions\n   * @param {number} t         The thickness of the line\n   * @return {Object}          The expanded rule thickness (T), and baseline offsets\n   *                             for numerator and denomunator (u and v)\n   */\n  getTUV(display: boolean, t: number): {T: number, u: number, v: number};\n\n  /**\n   * @param {BBox} bbox        The bounding box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getAtopBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for diplay-mode fractions\n   * @return {Object}\n   *    The vertical offsets of the numerator (u), the denominator (v),\n   *    the separation between the two, and the bboxes themselves.\n   */\n  getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @param {BBox} bbox        The boundng box to modify\n   * @param {boolean} display  True for display-mode fractions\n   */\n  getBevelledBBox(bbox: BBox, display: boolean): void;\n\n  /**\n   * @param {boolean} display  True for display-style fractions\n   * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n   *                             vertical offsets (u and v) of the parts, and\n   *                             bounding boxes of the parts.\n   */\n  getBevelData(display: boolean): {H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox};\n\n  /**\n   * @return {boolean}   True if in display mode, false otherwise\n   */\n  isDisplay(): boolean;\n}\n\n/**\n * Shorthand for the CommonMfrac constructor\n */\nexport type MfracConstructor = Constructor<CommonMfrac>;\n\n/*****************************************************************/\n/**\n * The CommonMfrac wrapper mixin for the MmlMfrac object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMfracMixin<T extends WrapperConstructor>(Base: T): MfracConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Wrapper for <mo> to use for bevelled fraction\n     */\n    public bevel: CommonMo = null;\n\n    /**\n     * Padding around fractions\n     */\n    public pad: number;\n\n    /************************************************/\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.pad = (this.node.getProperty('withDelims') as boolean ? 0 : this.font.params.nulldelimiterspace);\n      //\n      //  create internal bevel mo element\n      //\n      if (this.node.attributes.get('bevelled')) {\n        const {H} = this.getBevelData(this.isDisplay());\n        const bevel = this.bevel = this.createMo('/') as CommonMo;\n        bevel.node.attributes.set('symmetric', true);\n        bevel.canStretch(DIRECTION.Vertical);\n        bevel.getStretchedVariant([H], true);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      bbox.empty();\n      const {linethickness, bevelled} = this.node.attributes.getList('linethickness', 'bevelled');\n      const display = this.isDisplay();\n      let w = null as (number | null);\n      if (bevelled) {\n        this.getBevelledBBox(bbox, display);\n      } else {\n        const thickness = this.length2em(String(linethickness), .06);\n        w = -2 * this.pad;\n        if (thickness === 0) {\n          this.getAtopBBox(bbox, display);\n        } else {\n          this.getFractionBBox(bbox, display, thickness);\n          w -= .2;\n        }\n        w += bbox.w;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute, w);\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The buonding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     */\n    public getFractionBBox(bbox: BBox, display: boolean, t: number) {\n      const nbox = this.childNodes[0].getBBox();\n      const dbox = this.childNodes[1].getBBox();\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const {T, u, v} = this.getTUV(display, t);\n      bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));\n      bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));\n      bbox.w += 2 * this.pad + .2;\n    }\n\n    /**\n     * @param {boolean} display  True for display-mode fractions\n     * @param {number} t         The thickness of the line\n     * @return {Object}          The expanded rule thickness (T), and baseline offsets\n     *                             for numerator and denomunator (u and v)\n     */\n    public getTUV(display: boolean, t: number): {T: number, u: number, v: number} {\n      const tex = this.font.params;\n      const a = tex.axis_height;\n      const T = (display ? 3.5 : 1.5) * t;\n      return {T: (display ? 3.5 : 1.5) * t,\n              u: (display ? tex.num1 : tex.num2) - a - T,\n              v: (display ? tex.denom1 : tex.denom2) + a - T};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The bounding box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getAtopBBox(bbox: BBox, display: boolean) {\n      const {u, v, nbox, dbox} = this.getUVQ(display);\n      bbox.combine(nbox, 0, u);\n      bbox.combine(dbox, 0, -v);\n      bbox.w += 2 * this.pad;\n    }\n\n    /**\n     * @param {boolean} display  True for diplay-mode fractions\n     * @return {Object}\n     *    The vertical offsets of the numerator (u), the denominator (v),\n     *    the separation between the two, and the bboxes themselves.\n     */\n    public getUVQ(display: boolean): {u: number, v: number, q: number, nbox: BBox, dbox: BBox} {\n      const nbox = this.childNodes[0].getBBox() as BBox;\n      const dbox = this.childNodes[1].getBBox() as BBox;\n      const tex = this.font.params;\n      //\n      //  Initial offsets (u, v)\n      //  Minimum separation (p)\n      //  Actual separation with initial positions (q)\n      //\n      let [u, v] = (display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]);\n      let p = (display ? 7 : 3) * tex.rule_thickness;\n      let q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);\n      //\n      //  If actual separation is less than minimum, move them farther apart\n      //\n      if (q < p) {\n        u += (p - q) / 2;\n        v += (p - q) / 2;\n        q = p;\n      }\n      return {u, v, q, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @param {BBox} bbox        The boundng box to modify\n     * @param {boolean} display  True for display-mode fractions\n     */\n    public getBevelledBBox(bbox: BBox, display: boolean) {\n      const {u, v, delta, nbox, dbox} = this.getBevelData(display);\n      const lbox = this.bevel.getBBox();\n      bbox.combine(nbox, 0, u);\n      bbox.combine(lbox, bbox.w - delta / 2, 0);\n      bbox.combine(dbox, bbox.w - delta / 2, v);\n    }\n\n    /**\n     * @param {boolean} display  True for display-style fractions\n     * @return {Object}          The height (H) of the bevel, horizontal offest (delta)\n     *                             vertical offsets (u and v) of the parts, and\n     *                             bounding boxes of the parts.\n     */\n    public getBevelData(display: boolean): {\n      H: number, delta: number, u: number, v: number, nbox: BBox, dbox: BBox\n    } {\n      const nbox = this.childNodes[0].getBBox() as BBox;\n      const dbox = this.childNodes[1].getBBox() as BBox;\n      const delta = (display ? .4 : .15);\n      const H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;\n      const a = this.font.params.axis_height;\n      const u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;\n      const v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;\n      return {H, delta, u, v, nbox, dbox};\n    }\n\n    /************************************************/\n\n    /**\n     * @override\n     */\n    public canStretch(_direction: DIRECTION) {\n      return false;\n    }\n\n    /**\n     * @return {boolean}   True if in display mode, false otherwise\n     */\n    public isDisplay(): boolean {\n      const {displaystyle, scriptlevel} = this.node.attributes.getList('displaystyle', 'scriptlevel');\n      return displaystyle && scriptlevel === 0;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(i: number) {\n      const attributes = this.node.attributes;\n      if (attributes.get('bevelled')) {\n        return this.childNodes[i].getBBox().w;\n      }\n      const w = this.getBBox().w;\n      const thickness = this.length2em(attributes.get('linethickness'));\n      return w - (thickness ? .2 : 0) -  2 * this.pad;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(i: number) {\n      const attributes = this.node.attributes;\n      return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]) as string);\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}