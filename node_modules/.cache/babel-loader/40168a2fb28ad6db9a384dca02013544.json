{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindMathML = void 0;\n\nvar FindMath_js_1 = require(\"../../core/FindMath.js\");\n\nvar NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nvar FindMathML = function (_super) {\n  __extends(FindMathML, _super);\n\n  function FindMathML() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FindMathML.prototype.findMath = function (node) {\n    var set = new Set();\n    this.findMathNodes(node, set);\n    this.findMathPrefixed(node, set);\n    var html = this.adaptor.root(this.adaptor.document);\n\n    if (this.adaptor.kind(html) === 'html' && set.size === 0) {\n      this.findMathNS(node, set);\n    }\n\n    return this.processMath(set);\n  };\n\n  FindMathML.prototype.findMathNodes = function (node, set) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(this.adaptor.tags(node, 'math')), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var math = _c.value;\n        set.add(math);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  FindMathML.prototype.findMathPrefixed = function (node, set) {\n    var e_2, _a, e_3, _b;\n\n    var html = this.adaptor.root(this.adaptor.document);\n\n    try {\n      for (var _c = __values(this.adaptor.allAttributes(html)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var attr = _d.value;\n\n        if (attr.name.substr(0, 6) === 'xmlns:' && attr.value === NAMESPACE) {\n          var prefix = attr.name.substr(6);\n\n          try {\n            for (var _e = (e_3 = void 0, __values(this.adaptor.tags(node, prefix + ':math'))), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var math = _f.value;\n              set.add(math);\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  FindMathML.prototype.findMathNS = function (node, set) {\n    var e_4, _a;\n\n    try {\n      for (var _b = __values(this.adaptor.tags(node, 'math', NAMESPACE)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var math = _c.value;\n        set.add(math);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  FindMathML.prototype.processMath = function (set) {\n    var e_5, _a;\n\n    var math = [];\n\n    try {\n      for (var _b = __values(Array.from(set)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var mml = _c.value;\n        var display = this.adaptor.getAttribute(mml, 'display') === 'block' || this.adaptor.getAttribute(mml, 'mode') === 'display';\n        var start = {\n          node: mml,\n          n: 0,\n          delim: ''\n        };\n        var end = {\n          node: mml,\n          n: 0,\n          delim: ''\n        };\n        math.push({\n          math: this.adaptor.outerHTML(mml),\n          start: start,\n          end: end,\n          display: display\n        });\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return math;\n  };\n\n  FindMathML.OPTIONS = {};\n  return FindMathML;\n}(FindMath_js_1.AbstractFindMath);\n\nexports.FindMathML = FindMathML;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/input/mathml/FindMathML.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MathML version of the FindMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractFindMath} from '../../core/FindMath.js';\nimport {DOMAdaptor} from '../../core/DOMAdaptor.js';\nimport {OptionList} from '../../util/Options.js';\nimport {ProtoItem} from '../../core/MathItem.js';\n\n/**\n * The MathML namespace\n */\nconst NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\n\n/*****************************************************************/\n/**\n *  Implements the FindMathML object (extends AbstractFindMath)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class FindMathML<N, T, D> extends AbstractFindMath<N, T, D> {\n\n  /**\n   * @override\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The DOMAdaptor for the document being processed\n   */\n  public adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * Locates math nodes, possibly with namespace prefixes.\n   *  Store them in a set so that if found more than once, they will only\n   *  appear in the list once.\n   *\n   * @override\n   */\n  public findMath(node: N) {\n    let set = new Set<N>();\n    this.findMathNodes(node, set);\n    this.findMathPrefixed(node, set);\n    const html = this.adaptor.root(this.adaptor.document);\n    if (this.adaptor.kind(html) === 'html' &&  set.size === 0) {\n      this.findMathNS(node, set);\n    }\n    return this.processMath(set);\n  }\n\n  /**\n   * Find plain <math> tags\n   *\n   * @param {N} node       The container to seaerch for math\n   * @param {Set<N>} set   The set in which to store the math nodes\n   */\n  protected findMathNodes(node: N, set: Set<N>) {\n    for (const math of this.adaptor.tags(node, 'math')) {\n      set.add(math);\n    }\n  }\n\n  /**\n   * Find <m:math> tags (or whatever prefixes there are)\n   *\n   * @param {N} node  The container to seaerch for math\n   * @param {NodeSet} set   The set in which to store the math nodes\n   */\n  protected findMathPrefixed(node: N, set: Set<N>) {\n    let html = this.adaptor.root(this.adaptor.document);\n    for (const attr of this.adaptor.allAttributes(html)) {\n      if (attr.name.substr(0, 6) === 'xmlns:' && attr.value === NAMESPACE) {\n        let prefix = attr.name.substr(6);\n        for (const math of this.adaptor.tags(node, prefix + ':math')) {\n          set.add(math);\n        }\n      }\n    }\n  }\n\n  /**\n   * Find namespaced math in XHTML documents (is this really needed?)\n   *\n   * @param {N} node  The container to seaerch for math\n   * @param {NodeSet} set   The set in which to store the math nodes\n   */\n  protected findMathNS(node: N, set: Set<N>) {\n    for (const math of this.adaptor.tags(node, 'math', NAMESPACE)) {\n      set.add(math);\n    }\n  }\n\n  /**\n   *  Produce the array of proto math items from the node set\n   */\n  protected processMath(set: Set<N>) {\n    let math: ProtoItem<N, T>[] = [];\n    for (const mml of Array.from(set)) {\n      let display = (this.adaptor.getAttribute(mml, 'display') === 'block' ||\n                     this.adaptor.getAttribute(mml, 'mode') === 'display');\n      let start = {node: mml, n: 0, delim: ''};\n      let end   = {node: mml, n: 0, delim: ''};\n      math.push({math: this.adaptor.outerHTML(mml), start, end, display});\n    }\n    return math;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}