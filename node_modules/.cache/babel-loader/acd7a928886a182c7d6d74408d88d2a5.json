{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MathJax = exports.combineWithMathJax = exports.combineDefaults = exports.combineConfig = exports.isObject = void 0;\n\nfunction isObject(x) {\n  return typeof x === 'object' && x !== null;\n}\n\nexports.isObject = isObject;\n\nfunction combineConfig(dst, src) {\n  var e_1, _a;\n\n  try {\n    for (var _b = __values(Object.keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var id = _c.value;\n      if (id === '__esModule') continue;\n\n      if (isObject(dst[id]) && isObject(src[id]) && !(src[id] instanceof Promise)) {\n        combineConfig(dst[id], src[id]);\n      } else if (src[id] !== null && src[id] !== undefined) {\n        dst[id] = src[id];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return dst;\n}\n\nexports.combineConfig = combineConfig;\n\nfunction combineDefaults(dst, name, src) {\n  var e_2, _a;\n\n  if (!dst[name]) {\n    dst[name] = {};\n  }\n\n  dst = dst[name];\n\n  try {\n    for (var _b = __values(Object.keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var id = _c.value;\n\n      if (isObject(dst[id]) && isObject(src[id])) {\n        combineDefaults(dst, id, src[id]);\n      } else if (dst[id] == null && src[id] != null) {\n        dst[id] = src[id];\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  return dst;\n}\n\nexports.combineDefaults = combineDefaults;\n\nfunction combineWithMathJax(config) {\n  return combineConfig(exports.MathJax, config);\n}\n\nexports.combineWithMathJax = combineWithMathJax;\n\nif (typeof global.MathJax === 'undefined') {\n  global.MathJax = {};\n}\n\nif (!global.MathJax.version) {\n  global.MathJax = {\n    version: '3.2.0',\n    _: {},\n    config: global.MathJax\n  };\n}\n\nexports.MathJax = global.MathJax;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/components/global.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Handles using MathJax global as config object, and to hold\n *                methods and data to be available to the page author\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/**\n * The MathJax variable as a configuration object\n */\nexport interface MathJaxConfig {\n  [name: string]: any;\n}\n\n/**\n * The object used to store class and other definitions\n * from the various MathJax modules so that they can be shared\n * among the various component webpack files\n */\nexport interface MathJaxLibrary {\n  [name: string]: any;\n}\n\n/**\n * The MathJax global object structure\n */\nexport interface MathJaxObject {\n  version: string;\n  _: MathJaxLibrary;\n  config: MathJaxConfig;\n}\n\ndeclare const global: {MathJax: MathJaxObject | MathJaxConfig};\n\n/**\n * @param {any} x     An item to test if it is an object\n * @return {boolean}  True if the item is a non-null object\n */\nexport function isObject(x: any): boolean {\n  return typeof x === 'object' && x !== null;\n}\n\n/**\n * Combine user-produced configuration with existing defaults.  Values\n * from src will replace those in dst.\n *\n * @param {any} dst      The destination config object (to be merged into)\n * @param {any} src      The source configuration object (to replace defaul values in dst}\n * @return {any}         The resulting (modified) config object\n */\nexport function combineConfig(dst: any, src: any): any {\n  for (const id of Object.keys(src)) {\n    if (id === '__esModule') continue;\n    if (isObject(dst[id]) && isObject(src[id]) &&\n        !(src[id] instanceof Promise) /* needed for IE polyfill */) {\n      combineConfig(dst[id], src[id]);\n    } else if (src[id] !== null && src[id] !== undefined) {\n      dst[id] = src[id];\n    }\n  }\n  return dst;\n}\n\n/**\n * Combine defaults into a configuration that may already have\n * user-provided values.  Values in src only go into dst if\n * there is not already a value for that key.\n *\n * @param {any} dst      The destination config object (to be merged into)\n * @param {string} name  The id of the configuration block to modify (created if doesn't exist)\n * @param {any} src      The source configuration object (to replace defaul values in dst}\n * @return {any}         The resulting (modified) config object\n */\nexport function combineDefaults(dst: any, name: string, src: any): any {\n  if (!dst[name]) {\n    dst[name] = {};\n  }\n  dst = dst[name];\n  for (const id of Object.keys(src)) {\n    if (isObject(dst[id]) && isObject(src[id])) {\n      combineDefaults(dst, id, src[id]);\n    } else if (dst[id] == null && src[id] != null) {\n      dst[id] = src[id];\n    }\n  }\n  return dst;\n}\n\n/**\n * Combine configuration or data with the existing MathJax object\n *\n * @param {any} config   The data to be merged into the MathJax object\n */\nexport function combineWithMathJax(config: any): MathJaxObject {\n  return combineConfig(MathJax, config);\n}\n\n\n/**\n * Create the MathJax global, if it doesn't exist\n */\nif (typeof global.MathJax === 'undefined') {\n  global.MathJax = {} as MathJaxConfig;\n}\n\n/**\n * If the global is currently a config object, convert it to the\n * MathJaxObject containing the version, class library, and user\n * configuration.\n */\nif (!(global.MathJax as MathJaxObject).version) {\n  global.MathJax = {\n    version: '3.2.0',\n    _: {},\n    config: global.MathJax\n  };\n}\n\n/**\n * Export the global MathJax object for convenience\n */\nexport const MathJax = global.MathJax as MathJaxObject;\n"]},"metadata":{},"sourceType":"script"}