{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;\n\nvar MapHandler_js_1 = require(\"../MapHandler.js\");\n\nvar Entities_js_1 = require(\"../../../util/Entities.js\");\n\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\n\nvar TexError_js_1 = require(\"../TexError.js\");\n\nvar ParseUtil_js_1 = require(\"../ParseUtil.js\");\n\nvar NodeUtil_js_1 = require(\"../NodeUtil.js\");\n\nvar StackItem_js_1 = require(\"../StackItem.js\");\n\nvar StartItem = function (_super) {\n  __extends(StartItem, _super);\n\n  function StartItem(factory, global) {\n    var _this = _super.call(this, factory) || this;\n\n    _this.global = global;\n    return _this;\n  }\n\n  Object.defineProperty(StartItem.prototype, \"kind\", {\n    get: function () {\n      return 'start';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StartItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StartItem.prototype.checkItem = function (item) {\n    if (item.isKind('stop')) {\n      var node = this.toMml();\n\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n\n      return [[this.factory.create('mml', node)], true];\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  return StartItem;\n}(StackItem_js_1.BaseItem);\n\nexports.StartItem = StartItem;\n\nvar StopItem = function (_super) {\n  __extends(StopItem, _super);\n\n  function StopItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(StopItem.prototype, \"kind\", {\n    get: function () {\n      return 'stop';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StopItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StopItem;\n}(StackItem_js_1.BaseItem);\n\nexports.StopItem = StopItem;\n\nvar OpenItem = function (_super) {\n  __extends(OpenItem, _super);\n\n  function OpenItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(OpenItem.prototype, \"kind\", {\n    get: function () {\n      return 'open';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OpenItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  OpenItem.prototype.checkItem = function (item) {\n    if (item.isKind('close')) {\n      var mml = this.toMml();\n      var node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['ExtraOpenMissingClose', 'Extra open brace or missing close brace']\n  });\n  return OpenItem;\n}(StackItem_js_1.BaseItem);\n\nexports.OpenItem = OpenItem;\n\nvar CloseItem = function (_super) {\n  __extends(CloseItem, _super);\n\n  function CloseItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(CloseItem.prototype, \"kind\", {\n    get: function () {\n      return 'close';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CloseItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CloseItem;\n}(StackItem_js_1.BaseItem);\n\nexports.CloseItem = CloseItem;\n\nvar PrimeItem = function (_super) {\n  __extends(PrimeItem, _super);\n\n  function PrimeItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(PrimeItem.prototype, \"kind\", {\n    get: function () {\n      return 'prime';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PrimeItem.prototype.checkItem = function (item) {\n    var _a = __read(this.Peek(2), 2),\n        top0 = _a[0],\n        top1 = _a[1];\n\n    if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {\n      var node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n\n    NodeUtil_js_1.default.setChild(top0, top0.sup, top1);\n    return [[top0, item], true];\n  };\n\n  return PrimeItem;\n}(StackItem_js_1.BaseItem);\n\nexports.PrimeItem = PrimeItem;\n\nvar SubsupItem = function (_super) {\n  __extends(SubsupItem, _super);\n\n  function SubsupItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(SubsupItem.prototype, \"kind\", {\n    get: function () {\n      return 'subsup';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SubsupItem.prototype.checkItem = function (item) {\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n\n    var top = this.First;\n    var position = this.getProperty('position');\n\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));\n        } else {\n          NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);\n          var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);\n          item.First = node;\n        }\n      }\n\n      NodeUtil_js_1.default.setChild(top, position, item.First);\n\n      if (this.getProperty('movesupsub') != null) {\n        NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));\n      }\n\n      var result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n\n    if (_super.prototype.checkItem.call(this, item)[1]) {\n      var error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)))))();\n    }\n\n    return null;\n  };\n\n  SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['MissingScript', 'Missing superscript or subscript argument'],\n    'sup': ['MissingOpenForSup', 'Missing open brace for superscript'],\n    'sub': ['MissingOpenForSub', 'Missing open brace for subscript']\n  });\n  return SubsupItem;\n}(StackItem_js_1.BaseItem);\n\nexports.SubsupItem = SubsupItem;\n\nvar OverItem = function (_super) {\n  __extends(OverItem, _super);\n\n  function OverItem(factory) {\n    var _this = _super.call(this, factory) || this;\n\n    _this.setProperty('name', '\\\\over');\n\n    return _this;\n  }\n\n  Object.defineProperty(OverItem.prototype, \"kind\", {\n    get: function () {\n      return 'over';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(OverItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  OverItem.prototype.checkItem = function (item) {\n    if (item.isKind('over')) {\n      throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n\n    if (item.isClose) {\n      var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);\n\n      if (this.getProperty('thickness') != null) {\n        NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));\n      }\n\n      if (this.getProperty('open') || this.getProperty('close')) {\n        NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n      }\n\n      return [[this.factory.create('mml', mml), item], true];\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  OverItem.prototype.toString = function () {\n    return 'over[' + this.getProperty('num') + ' / ' + this.nodes.join('; ') + ']';\n  };\n\n  return OverItem;\n}(StackItem_js_1.BaseItem);\n\nexports.OverItem = OverItem;\n\nvar LeftItem = function (_super) {\n  __extends(LeftItem, _super);\n\n  function LeftItem(factory, delim) {\n    var _this = _super.call(this, factory) || this;\n\n    _this.setProperty('delim', delim);\n\n    return _this;\n  }\n\n  Object.defineProperty(LeftItem.prototype, \"kind\", {\n    get: function () {\n      return 'left';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LeftItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  LeftItem.prototype.checkItem = function (item) {\n    if (item.isKind('right')) {\n      return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];\n    }\n\n    if (item.isKind('middle')) {\n      var def = {\n        stretchy: true\n      };\n\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n\n      this.Push(this.create('node', 'TeXAtom', [], {\n        texClass: MmlNode_js_1.TEXCLASS.CLOSE\n      }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], {\n        texClass: MmlNode_js_1.TEXCLASS.OPEN\n      }));\n      this.env = {};\n      return [[this], true];\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n    'stop': ['ExtraLeftMissingRight', 'Extra \\\\left or missing \\\\right']\n  });\n  return LeftItem;\n}(StackItem_js_1.BaseItem);\n\nexports.LeftItem = LeftItem;\n\nvar Middle = function (_super) {\n  __extends(Middle, _super);\n\n  function Middle(factory, delim, color) {\n    var _this = _super.call(this, factory) || this;\n\n    _this.setProperty('delim', delim);\n\n    color && _this.setProperty('color', color);\n    return _this;\n  }\n\n  Object.defineProperty(Middle.prototype, \"kind\", {\n    get: function () {\n      return 'middle';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Middle.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Middle;\n}(StackItem_js_1.BaseItem);\n\nexports.Middle = Middle;\n\nvar RightItem = function (_super) {\n  __extends(RightItem, _super);\n\n  function RightItem(factory, delim, color) {\n    var _this = _super.call(this, factory) || this;\n\n    _this.setProperty('delim', delim);\n\n    color && _this.setProperty('color', color);\n    return _this;\n  }\n\n  Object.defineProperty(RightItem.prototype, \"kind\", {\n    get: function () {\n      return 'right';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RightItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return RightItem;\n}(StackItem_js_1.BaseItem);\n\nexports.RightItem = RightItem;\n\nvar BeginItem = function (_super) {\n  __extends(BeginItem, _super);\n\n  function BeginItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BeginItem.prototype, \"kind\", {\n    get: function () {\n      return 'begin';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BeginItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BeginItem.prototype.checkItem = function (item) {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        throw new TexError_js_1.default('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}', this.getName(), item.getName());\n      }\n\n      if (!this.getProperty('end')) {\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n\n      return StackItem_js_1.BaseItem.fail;\n    }\n\n    if (item.isKind('stop')) {\n      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  return BeginItem;\n}(StackItem_js_1.BaseItem);\n\nexports.BeginItem = BeginItem;\n\nvar EndItem = function (_super) {\n  __extends(EndItem, _super);\n\n  function EndItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(EndItem.prototype, \"kind\", {\n    get: function () {\n      return 'end';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EndItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EndItem;\n}(StackItem_js_1.BaseItem);\n\nexports.EndItem = EndItem;\n\nvar StyleItem = function (_super) {\n  __extends(StyleItem, _super);\n\n  function StyleItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(StyleItem.prototype, \"kind\", {\n    get: function () {\n      return 'style';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StyleItem.prototype.checkItem = function (item) {\n    if (!item.isClose) {\n      return _super.prototype.checkItem.call(this, item);\n    }\n\n    var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  };\n\n  return StyleItem;\n}(StackItem_js_1.BaseItem);\n\nexports.StyleItem = StyleItem;\n\nvar PositionItem = function (_super) {\n  __extends(PositionItem, _super);\n\n  function PositionItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(PositionItem.prototype, \"kind\", {\n    get: function () {\n      return 'position';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PositionItem.prototype.checkItem = function (item) {\n    if (item.isClose) {\n      throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n\n    if (item.isFinal) {\n      var mml = item.toMml();\n\n      switch (this.getProperty('move')) {\n        case 'vertical':\n          mml = this.create('node', 'mpadded', [mml], {\n            height: this.getProperty('dh'),\n            depth: this.getProperty('dd'),\n            voffset: this.getProperty('dh')\n          });\n          return [[this.factory.create('mml', mml)], true];\n\n        case 'horizontal':\n          return [[this.factory.create('mml', this.getProperty('left')), item, this.factory.create('mml', this.getProperty('right'))], true];\n      }\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  return PositionItem;\n}(StackItem_js_1.BaseItem);\n\nexports.PositionItem = PositionItem;\n\nvar CellItem = function (_super) {\n  __extends(CellItem, _super);\n\n  function CellItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(CellItem.prototype, \"kind\", {\n    get: function () {\n      return 'cell';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CellItem.prototype, \"isClose\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CellItem;\n}(StackItem_js_1.BaseItem);\n\nexports.CellItem = CellItem;\n\nvar MmlItem = function (_super) {\n  __extends(MmlItem, _super);\n\n  function MmlItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlItem.prototype, \"isFinal\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlItem.prototype, \"kind\", {\n    get: function () {\n      return 'mml';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return MmlItem;\n}(StackItem_js_1.BaseItem);\n\nexports.MmlItem = MmlItem;\n\nvar FnItem = function (_super) {\n  __extends(FnItem, _super);\n\n  function FnItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(FnItem.prototype, \"kind\", {\n    get: function () {\n      return 'fn';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FnItem.prototype.checkItem = function (item) {\n    var top = this.First;\n\n    if (top) {\n      if (item.isOpen) {\n        return StackItem_js_1.BaseItem.success;\n      }\n\n      if (!item.isKind('fn')) {\n        var mml = item.First;\n\n        if (!item.isKind('mml') || !mml) {\n          return [[top, item], true];\n        }\n\n        if (NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length && NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace') || NodeUtil_js_1.default.isType(mml, 'mspace')) {\n          return [[top, item], true];\n        }\n\n        if (NodeUtil_js_1.default.isEmbellished(mml)) {\n          mml = NodeUtil_js_1.default.getCoreMO(mml);\n        }\n\n        var form = NodeUtil_js_1.default.getForm(mml);\n\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          return [[top, item], true];\n        }\n      }\n\n      var node = this.create('token', 'mo', {\n        texClass: MmlNode_js_1.TEXCLASS.NONE\n      }, Entities_js_1.entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n\n    return _super.prototype.checkItem.apply(this, arguments);\n  };\n\n  return FnItem;\n}(StackItem_js_1.BaseItem);\n\nexports.FnItem = FnItem;\n\nvar NotItem = function (_super) {\n  __extends(NotItem, _super);\n\n  function NotItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');\n    return _this;\n  }\n\n  Object.defineProperty(NotItem.prototype, \"kind\", {\n    get: function () {\n      return 'not';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NotItem.prototype.checkItem = function (item) {\n    var mml;\n    var c;\n    var textNode;\n\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n\n    if (item.isKind('mml') && (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') || NodeUtil_js_1.default.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil_js_1.default.getText(mml);\n\n      if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') && NodeUtil_js_1.default.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          textNode = this.create('text', this.remap.lookup(c).char);\n          NodeUtil_js_1.default.setChild(mml, 0, textNode);\n        } else {\n          textNode = this.create('text', '\\u0338');\n          NodeUtil_js_1.default.appendChildren(mml, [textNode]);\n        }\n\n        return [[item], true];\n      }\n    }\n\n    textNode = this.create('text', '\\u29F8');\n    var mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    var paddedNode = this.create('node', 'mpadded', [mtextNode], {\n      width: 0\n    });\n    mml = this.create('node', 'TeXAtom', [paddedNode], {\n      texClass: MmlNode_js_1.TEXCLASS.REL\n    });\n    return [[mml, item], true];\n  };\n\n  return NotItem;\n}(StackItem_js_1.BaseItem);\n\nexports.NotItem = NotItem;\n\nvar NonscriptItem = function (_super) {\n  __extends(NonscriptItem, _super);\n\n  function NonscriptItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(NonscriptItem.prototype, \"kind\", {\n    get: function () {\n      return 'nonscript';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NonscriptItem.prototype.checkItem = function (item) {\n    if (item.isKind('mml') && item.Size() === 1) {\n      var mml = item.First;\n\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];\n      }\n\n      if (mml.isKind('mspace')) {\n        if (mml !== item.First) {\n          var mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n\n    return [[item], true];\n  };\n\n  return NonscriptItem;\n}(StackItem_js_1.BaseItem);\n\nexports.NonscriptItem = NonscriptItem;\n\nvar DotsItem = function (_super) {\n  __extends(DotsItem, _super);\n\n  function DotsItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(DotsItem.prototype, \"kind\", {\n    get: function () {\n      return 'dots';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DotsItem.prototype.checkItem = function (item) {\n    if (item.isKind('open') || item.isKind('left')) {\n      return StackItem_js_1.BaseItem.success;\n    }\n\n    var dots = this.getProperty('ldots');\n    var top = item.First;\n\n    if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {\n      var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));\n\n      if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {\n        dots = this.getProperty('cdots');\n      }\n    }\n\n    return [[dots, item], true];\n  };\n\n  return DotsItem;\n}(StackItem_js_1.BaseItem);\n\nexports.DotsItem = DotsItem;\n\nvar ArrayItem = function (_super) {\n  __extends(ArrayItem, _super);\n\n  function ArrayItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.table = [];\n    _this.row = [];\n    _this.frame = [];\n    _this.hfill = [];\n    _this.arraydef = {};\n    _this.dashed = false;\n    return _this;\n  }\n\n  Object.defineProperty(ArrayItem.prototype, \"kind\", {\n    get: function () {\n      return 'array';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArrayItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ArrayItem.prototype, \"copyEnv\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ArrayItem.prototype.checkItem = function (item) {\n    if (item.isClose && !item.isKind('over')) {\n      if (item.getProperty('isEntry')) {\n        this.EndEntry();\n        this.clearEnv();\n        return StackItem_js_1.BaseItem.fail;\n      }\n\n      if (item.getProperty('isCR')) {\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return StackItem_js_1.BaseItem.fail;\n      }\n\n      this.EndTable();\n      this.clearEnv();\n      var newItem = this.factory.create('mml', this.createMml());\n\n      if (this.getProperty('requireClose')) {\n        if (item.isKind('close')) {\n          return [[newItem], true];\n        }\n\n        throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n      }\n\n      return [[newItem, item], true];\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  ArrayItem.prototype.createMml = function () {\n    var scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    var mml = this.create('node', 'mtable', this.table, this.arraydef);\n\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n\n    if (this.frame.length === 4) {\n      NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      if (this.arraydef['rowlines']) {\n        this.arraydef['rowlines'] = this.arraydef['rowlines'].replace(/none( none)+$/, 'none');\n      }\n\n      NodeUtil_js_1.default.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {\n        notation: this.frame.join(' ')\n      });\n\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' || (this.arraydef['rowlines'] || 'none') !== 'none') {\n        NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n\n    if (this.getProperty('open') || this.getProperty('close')) {\n      mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n    }\n\n    return mml;\n  };\n\n  ArrayItem.prototype.EndEntry = function () {\n    var mtd = this.create('node', 'mtd', this.nodes);\n\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');\n      }\n\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  };\n\n  ArrayItem.prototype.EndRow = function () {\n    var node;\n\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      this.row.unshift(this.row.pop());\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      node = this.create('node', 'mtr', this.row);\n    }\n\n    this.table.push(node);\n    this.row = [];\n  };\n\n  ArrayItem.prototype.EndTable = function () {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n\n    this.checkLines();\n  };\n\n  ArrayItem.prototype.checkLines = function () {\n    if (this.arraydef['rowlines']) {\n      var lines = this.arraydef['rowlines'].split(/ /);\n\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n\n    if (this.getProperty('rowspacing')) {\n      var rows = this.arraydef['rowspacing'].split(/ /);\n\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  };\n\n  ArrayItem.prototype.addRowSpacing = function (spacing) {\n    if (this.arraydef['rowspacing']) {\n      var rows = this.arraydef['rowspacing'].split(/ /);\n\n      if (!this.getProperty('rowspacing')) {\n        var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n\n      var rowspacing = this.getProperty('rowspacing');\n\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil_js_1.default.Em(rowspacing));\n      }\n\n      rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  };\n\n  return ArrayItem;\n}(StackItem_js_1.BaseItem);\n\nexports.ArrayItem = ArrayItem;\n\nvar EqnArrayItem = function (_super) {\n  __extends(EqnArrayItem, _super);\n\n  function EqnArrayItem(factory) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, factory) || this;\n\n    _this.maxrow = 0;\n\n    _this.factory.configuration.tags.start(args[0], args[2], args[1]);\n\n    return _this;\n  }\n\n  Object.defineProperty(EqnArrayItem.prototype, \"kind\", {\n    get: function () {\n      return 'eqnarray';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  EqnArrayItem.prototype.EndEntry = function () {\n    if (this.row.length) {\n      ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n\n    var node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  };\n\n  EqnArrayItem.prototype.EndRow = function () {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n\n    var mtr = 'mtr';\n    var tag = this.factory.configuration.tags.getTag();\n\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n\n    this.factory.configuration.tags.clearTag();\n    var node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  };\n\n  EqnArrayItem.prototype.EndTable = function () {\n    _super.prototype.EndTable.call(this);\n\n    this.factory.configuration.tags.end();\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  };\n\n  EqnArrayItem.prototype.extendArray = function (name, max) {\n    if (!this.arraydef[name]) return;\n    var repeat = this.arraydef[name].split(/ /);\n\n    var columns = __spreadArray([], __read(repeat));\n\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push.apply(columns, __spreadArray([], __read(repeat)));\n      }\n\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  };\n\n  return EqnArrayItem;\n}(ArrayItem);\n\nexports.EqnArrayItem = EqnArrayItem;\n\nvar EquationItem = function (_super) {\n  __extends(EquationItem, _super);\n\n  function EquationItem(factory) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, factory) || this;\n\n    _this.factory.configuration.tags.start('equation', true, args[0]);\n\n    return _this;\n  }\n\n  Object.defineProperty(EquationItem.prototype, \"kind\", {\n    get: function () {\n      return 'equation';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EquationItem.prototype, \"isOpen\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  EquationItem.prototype.checkItem = function (item) {\n    if (item.isKind('end')) {\n      var mml = this.toMml();\n      var tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n\n    if (item.isKind('stop')) {\n      throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n\n    return _super.prototype.checkItem.call(this, item);\n  };\n\n  return EquationItem;\n}(StackItem_js_1.BaseItem);\n\nexports.EquationItem = EquationItem;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/input/tex/base/BaseItems.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for basic Tex parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {MapHandler} from '../MapHandler.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {entities} from '../../../util/Entities.js';\nimport {MmlNode, TextNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport StackItemFactory from '../StackItemFactory.js';\nimport {CheckType, BaseItem, StackItem, EnvList} from '../StackItem.js';\n\n\n/**\n * Initial item on the stack. It's pushed when parsing begins.\n */\nexport class StartItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, public global: EnvList) {\n    super(factory);\n  }\n\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'start';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('stop')) {\n      let node = this.toMml();\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Final item on the stack. Errors will be thrown if other items than the start\n * item are still on the stack.\n */\nexport class StopItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'stop';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an open brace.\n */\nexport class OpenItem extends BaseItem {\n\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraOpenMissingClose\n    'stop': ['ExtraOpenMissingClose',\n             'Extra open brace or missing close brace']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      // @test PrimeSup\n      let mml = this.toMml();\n      const node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a close brace. Collapses stack until an OpenItem is found.\n */\nexport class CloseItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'close';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with a prime mark.\n */\nexport class PrimeItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'prime';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let [top0, top1] = this.Peek(2);\n    if (!NodeUtil.isType(top0, 'msubsup') || NodeUtil.isType(top0, 'msup')) {\n      // @test Prime, Double Prime\n      const node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n    NodeUtil.setChild(top0, (top0 as MmlMsubsup).sup, top1);\n    return [[top0, item], true];\n  }\n}\n\n\n/**\n * Item indicating an we are currently dealing with a sub/superscript\n * expression.\n */\nexport class SubsupItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test MissingScript Sub, MissingScript Sup\n    'stop': ['MissingScript',\n             'Missing superscript or subscript argument'],\n    // @test MissingOpenForSup\n    'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n    // @test MissingOpenForSub\n    'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'subsup';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType | null {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    const top = this.First;\n    const position = this.getProperty('position') as number;\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          // @test Prime on Sub\n          NodeUtil.setChild(top, 2, this.getProperty('primes') as MmlNode);\n        } else {\n          // @test Prime on Prime\n          NodeUtil.setProperty(this.getProperty('primes') as MmlNode, 'variantForm', true);\n          const node = this.create('node', 'mrow', [this.getProperty('primes') as MmlNode, item.First]);\n          item.First = node;\n        }\n      }\n      NodeUtil.setChild(top, position, item.First);\n      if (this.getProperty('movesupsub') != null) {\n        // @test Limits Subsup (currently does not work! Check again!)\n        NodeUtil.setProperty(top, 'movesupsub', this.getProperty('movesupsub') as Property);\n      }\n      const result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n    if (super.checkItem(item)[1]) {\n      // @test Brace Superscript Error, MissingOpenForSup, MissingOpenForSub\n      const error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new TexError(error[0], error[1], ...error.splice(2));\n    }\n    return null;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with an \\\\over command.\n */\nexport class OverItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory) {\n    super(factory);\n    this.setProperty('name', '\\\\over');\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'over';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over')) {\n      // @test Double Over\n      throw new TexError(\n        'AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n    if (item.isClose) {\n      // @test Over\n      let mml = this.create('node',\n                            'mfrac', [this.getProperty('num') as MmlNode, this.toMml(false)]);\n      if (this.getProperty('thickness') != null) {\n        // @test Choose, Above, Above with Delims\n        NodeUtil.setAttribute(mml, 'linethickness',\n                              this.getProperty('thickness') as string);\n      }\n      if (this.getProperty('open') || this.getProperty('close')) {\n        // @test Choose\n        NodeUtil.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil.fixedFence(this.factory.configuration,\n                                   this.getProperty('open') as string, mml,\n                                   this.getProperty('close') as string);\n      }\n      return [[this.factory.create('mml', mml), item], true];\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'over[' + this.getProperty('num') +\n      ' / ' + this.nodes.join('; ') + ']';\n  }\n\n}\n\n\n/**\n * Item pushed when a \\\\left opening delimiter has been found.\n */\nexport class LeftItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraLeftMissingRight\n    'stop': ['ExtraLeftMissingRight',\n             'Extra \\\\left or missing \\\\right']\n  });\n\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'left';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Missing Right\n    if (item.isKind('right')) {\n      //\n      //  Create the fenced structure as an mrow\n      //\n      return [[this.factory.create('mml', ParseUtil.fenced(\n        this.factory.configuration,\n        this.getProperty('delim') as string, this.toMml(),\n        item.getProperty('delim') as string, '', item.getProperty('color') as string))], true];\n    }\n    if (item.isKind('middle')) {\n      //\n      //  Add the middle delimiter, with empty open and close elements around it for spacing\n      //\n      const def = {stretchy: true} as any;\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n      this.Push(\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE}),\n        this.create('token', 'mo', def, item.getProperty('delim')),\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN})\n      );\n      this.env = {};         // Since \\middle closes the group, clear the environment\n      return [[this], true]; // this will reset the environment to its initial state\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * Item pushed when a \\\\middle delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class Middle extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'middle';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n/**\n * Item pushed when a \\\\right closing delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class RightItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'right';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for opening an environment with \\\\begin{env}.\n */\nexport class BeginItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'begin';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        // @test EnvBadEnd\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                           this.getName(), item.getName());\n      }\n      if (!this.getProperty('end')) {\n        // @test Hfill\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n      return BaseItem.fail;  // TODO: This case could probably go!\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Array\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Item pushed for closing an environment with \\\\end{env}. Stack is collapsed\n * until a corresponding BeginItem for 'env' is found. Error is thrown in case\n * other open environments interfere.\n */\nexport class EndItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'end';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for remembering styling information.\n */\nexport class StyleItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'style';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (!item.isClose) {\n      return super.checkItem(item);\n    }\n    // @test Style\n    const mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  }\n\n}\n\n\n/**\n * Item pushed for remembering positioning information.\n */\nexport class PositionItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'position';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isClose) {\n      // @test MissingBoxFor\n      throw new TexError('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n    if (item.isFinal) {\n      let mml = item.toMml();\n      switch (this.getProperty('move')) {\n      case 'vertical':\n        // @test Raise, Lower, Raise Negative, Lower Negative\n        mml = this.create('node', 'mpadded', [mml],\n                          {height: this.getProperty('dh'),\n                           depth: this.getProperty('dd'),\n                           voffset: this.getProperty('dh')});\n        return [[this.factory.create('mml', mml)], true];\n      case 'horizontal':\n        // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n        return [[this.factory.create('mml', this.getProperty('left') as MmlNode), item,\n                 this.factory.create('mml', this.getProperty('right') as MmlNode)], true];\n      }\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a table cell.\n */\nexport class CellItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'cell';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n}\n\n\n/**\n * Final item for collating Nodes.\n */\nexport class MmlItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get isFinal() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mml';\n  }\n\n}\n\n\n/**\n * Item indicating a named function operator (e.g., \\\\sin) as been encountered.\n */\nexport class FnItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'fn';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    const top = this.First;\n    if (top) {\n      if (item.isOpen) {\n        // @test Fn Stretchy\n        return BaseItem.success;\n      }\n      if (!item.isKind('fn')) {\n        // @test Named Function\n        let mml = item.First;\n        if (!item.isKind('mml') || !mml) {\n          // @test Mathop Super\n          return [[top, item], true];\n        }\n        if ((NodeUtil.isType(mml, 'mstyle') && mml.childNodes.length &&\n             NodeUtil.isType(mml.childNodes[0].childNodes[0] as MmlNode, 'mspace')) ||\n             NodeUtil.isType(mml, 'mspace')) {\n          // @test Fn Pos Space, Fn Neg Space\n          return [[top, item], true];\n        }\n        if (NodeUtil.isEmbellished(mml)) {\n          // @test MultiInt with Limits\n          mml = NodeUtil.getCoreMO(mml);\n        }\n        const form = NodeUtil.getForm(mml);\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          // @test Fn Operator\n          return [[top, item], true];\n        }\n      }\n      // @test Named Function, Named Function Arg\n      const node = this.create('token', 'mo', {texClass: TEXCLASS.NONE},\n                               entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n    // @test Mathop Super, Mathop Sub\n    return super.checkItem.apply(this, arguments);\n  }\n}\n\n\n/**\n * Item indicating a \\\\not has been encountered and needs to be applied to the\n * next operator.\n */\nexport class NotItem extends BaseItem {\n\n  private remap = MapHandler.getMap('not_remap') as CharacterMap;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'not';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let mml: TextNode | MmlNode;\n    let c: string;\n    let textNode: TextNode;\n    if (item.isKind('open') || item.isKind('left')) {\n      // @test Negation Left Paren\n      return BaseItem.success;\n    }\n    if (item.isKind('mml') &&\n        (NodeUtil.isType(item.First, 'mo') || NodeUtil.isType(item.First, 'mi') ||\n         NodeUtil.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil.getText(mml as TextNode);\n      if (c.length === 1 && !NodeUtil.getProperty(mml, 'movesupsub') &&\n          NodeUtil.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          // @test Negation Simple, Negation Complex\n          textNode = this.create('text', this.remap.lookup(c).char) as TextNode;\n          NodeUtil.setChild(mml, 0, textNode);\n        } else {\n          // @test Negation Explicit\n          textNode = this.create('text', '\\u0338') as TextNode;\n          NodeUtil.appendChildren(mml, [textNode]);\n        }\n        return [[item], true];\n      }\n    }\n    // @test Negation Large\n    textNode = this.create('text', '\\u29F8') as TextNode;\n    const mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    const paddedNode = this.create('node', 'mpadded', [mtextNode], {width: 0});\n    mml = this.create('node', 'TeXAtom', [paddedNode], {texClass: TEXCLASS.REL});\n    return [[mml, item], true];\n  }\n}\n\n/**\n * A StackItem that removes an mspace that follows it (for \\nonscript).\n */\nexport class NonscriptItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'nonscript';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check if the next item is an mspace (or an mspace in an mstyle) and remove it.\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      let mml = item.First;\n      //\n      //  Space macros like \\, are wrapped with an mstyle to set scriptlevel=\"0\"\n      //    (so size is independent of level), we look at the contents of the mstyle for the mspace.\n      //\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil.getChildren(NodeUtil.getChildren(mml)[0])[0];\n      }\n      if (mml.isKind('mspace')) {\n        //\n        //  If the space is in an mstyle, wrap it in an mrow so we can test its scriptlevel\n        //    in the post-filter (the mrow will be removed in the filter).  We can't test\n        //    the mstyle's scriptlevel, since it is ecxplicitly setting it to 0.\n        //\n        if (mml !== item.First) {\n          const mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n        //\n        //  Save the mspace for later post-processing.\n        //\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n    return [[item], true];\n  }\n}\n\n/**\n * Item indicating a dots command has been encountered.\n */\nexport class DotsItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'dots';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    let dots = this.getProperty('ldots') as MmlNode;\n    let top = item.First;\n    // @test Operator Dots\n    if (item.isKind('mml') && NodeUtil.isEmbellished(top)) {\n      const tclass = NodeUtil.getTexClass(NodeUtil.getCoreMO(top));\n      if (tclass === TEXCLASS.BIN || tclass === TEXCLASS.REL) {\n        dots = this.getProperty('cdots') as MmlNode;\n      }\n    }\n    return [[dots, item], true];\n  }\n}\n\n\n/**\n * Item indicating an array is assembled. It collates cells, rows and\n * information about column/row separator and framing lines.\n */\nexport class ArrayItem extends BaseItem {\n\n  /**\n   * The table as a list of rows.\n   * @type {MmlNode[]}\n   */\n  public table: MmlNode[] = [];\n\n  /**\n   * The current row as a list of cells.\n   * @type {MmlNode[]}\n   */\n  public row: MmlNode[] = [];\n\n  /**\n   * Frame specification as a list of strings.\n   * @type {string[]}\n   */\n  public frame: string[] = [];\n\n  /**\n   * Hfill value.\n   * @type {number[]}\n   */\n  public hfill: number[] = [];\n\n  /**\n   * Properties for special array definitions.\n   * @type {{[key: string]: string|number|boolean}}\n   */\n  public arraydef: {[key: string]: string | number | boolean} = {};\n\n  /**\n   * True if separators are dashed.\n   * @type {boolean}\n   */\n  public dashed: boolean = false;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'array';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  get copyEnv() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Array Single\n    if (item.isClose && !item.isKind('over')) {\n      // @test Array Single\n      if (item.getProperty('isEntry')) {\n        // @test Array dashed column, Array solid column\n        this.EndEntry();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      if (item.getProperty('isCR')) {\n        // @test Enclosed bottom\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      this.EndTable();\n      this.clearEnv();\n      let newItem = this.factory.create('mml', this.createMml());\n      if (this.getProperty('requireClose')) {\n        // @test: Label\n        if (item.isKind('close')) {\n          // @test: Label\n          return [[newItem], true];\n        }\n        // @test MissingCloseBrace2\n        throw new TexError('MissingCloseBrace', 'Missing close brace');\n      }\n      return [[newItem, item], true];\n    }\n    return super.checkItem(item);\n  }\n\n  /**\n   * Create the MathML representation of the table.\n   *\n   * @return {MmlNode}\n   */\n  public createMml(): MmlNode {\n    const scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    let mml = this.create('node', 'mtable', this.table, this.arraydef);\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n    if (this.frame.length === 4) {\n      // @test Enclosed frame solid, Enclosed frame dashed\n      NodeUtil.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      // @test Enclosed left right\n      if (this.arraydef['rowlines']) {\n        // @test Enclosed dashed row, Enclosed solid row,\n        this.arraydef['rowlines'] =\n          (this.arraydef['rowlines'] as string).replace(/none( none)+$/, 'none');\n      }\n      // @test Enclosed left right\n      NodeUtil.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {notation: this.frame.join(' ')});\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n          (this.arraydef['rowlines'] || 'none') !== 'none') {\n        // @test Enclosed dashed row, Enclosed solid row\n        // @test Enclosed dashed column, Enclosed solid column\n        NodeUtil.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n    if (this.getProperty('open') || this.getProperty('close')) {\n      // @test Cross Product Formula\n      mml = ParseUtil.fenced(this.factory.configuration,\n                             this.getProperty('open') as string, mml,\n                             this.getProperty('close') as string);\n    }\n    return mml;\n  }\n\n  /**\n   * Finishes a single cell of the array.\n   */\n  public EndEntry() {\n    // @test Array1, Array2\n    const mtd = this.create('node', 'mtd', this.nodes);\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil.setAttribute(mtd, 'columnalign', 'right');\n      }\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil.setAttribute(\n          mtd, 'columnalign',\n          NodeUtil.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  }\n\n\n  /**\n   * Finishes a single row of the array.\n   */\n  public EndRow() {\n    let node: MmlNode;\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      // @test Label, Matrix Numbered\n      this.row.unshift(this.row.pop());  // move equation number to first\n      // position\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      // @test Array1, Array2\n      node = this.create('node', 'mtr', this.row);\n    }\n    this.table.push(node);\n    this.row = [];\n  }\n\n\n  /**\n   * Finishes the table layout.\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    this.checkLines();\n  }\n\n\n  /**\n   * Finishes line layout if not already given.\n   */\n  public checkLines() {\n    if (this.arraydef['rowlines']) {\n      const lines = (this.arraydef['rowlines'] as string).split(/ /);\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n    if (this.getProperty('rowspacing')) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n  /**\n   * Adds a row-spacing to the current row (padding out the rowspacing if needed to get there).\n   *\n   * @param {string} spacing   The rowspacing to use for the current row.\n   */\n  public addRowSpacing(spacing: string) {\n    if (this.arraydef['rowspacing']) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      if (!this.getProperty('rowspacing')) {\n        // @test Array Custom Linebreak\n        let dimem = ParseUtil.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n      const rowspacing = this.getProperty('rowspacing') as number;\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil.Em(rowspacing));\n      }\n      rows[this.table.length - 1] = ParseUtil.Em(\n        Math.max(0, rowspacing + ParseUtil.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n}\n\n\n/**\n * Item dealing with equation arrays as a special case of arrays. Handles\n * tagging information according to the given tagging style.\n */\nexport class EqnArrayItem extends ArrayItem {\n\n  /**\n   * The length of the longest row.\n   */\n  public maxrow: number = 0;\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start(args[0], args[2], args[1]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'eqnarray';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    // @test Cubic Binomial\n    if (this.row.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    // @test Cubic Binomial\n    let mtr = 'mtr';\n    let tag = this.factory.configuration.tags.getTag();\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n    this.factory.configuration.tags.clearTag();\n    const node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    // @test Cubic Binomial\n    super.EndTable();\n    this.factory.configuration.tags.end();\n    //\n    // Repeat the column align and width specifications\n    //   to match the number of columns\n    //\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  }\n\n  /**\n   * Extend a column specification to include a repeating set of values\n   *   so that it has enough to match the maximum row length.\n   */\n  protected extendArray(name: string, max: number) {\n    if (!this.arraydef[name]) return;\n    const repeat = (this.arraydef[name] as string).split(/ /);\n    const columns = [...repeat];\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push(...repeat);\n      }\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  }\n}\n\n\n/**\n * Item dealing with simple equation environments.  Handles tagging information\n * according to the given tagging style.\n */\nexport class EquationItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('equation', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'equation';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      let mml = this.toMml();\n      let tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Equation\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}