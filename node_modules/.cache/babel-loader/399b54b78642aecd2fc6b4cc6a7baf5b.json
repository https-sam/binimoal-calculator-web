{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar e_1, _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CONFIG = exports.MathJax = exports.Loader = exports.PathFilters = exports.PackageError = exports.Package = void 0;\n\nvar global_js_1 = require(\"./global.js\");\n\nvar package_js_1 = require(\"./package.js\");\n\nvar package_js_2 = require(\"./package.js\");\n\nObject.defineProperty(exports, \"Package\", {\n  enumerable: true,\n  get: function () {\n    return package_js_2.Package;\n  }\n});\nObject.defineProperty(exports, \"PackageError\", {\n  enumerable: true,\n  get: function () {\n    return package_js_2.PackageError;\n  }\n});\n\nvar FunctionList_js_1 = require(\"../util/FunctionList.js\");\n\nexports.PathFilters = {\n  source: function (data) {\n    if (exports.CONFIG.source.hasOwnProperty(data.name)) {\n      data.name = exports.CONFIG.source[data.name];\n    }\n\n    return true;\n  },\n  normalize: function (data) {\n    var name = data.name;\n\n    if (!name.match(/^(?:[a-z]+:\\/)?\\/|[a-z]:\\\\|\\[/i)) {\n      data.name = '[mathjax]/' + name.replace(/^\\.\\//, '');\n    }\n\n    if (data.addExtension && !name.match(/\\.[^\\/]+$/)) {\n      data.name += '.js';\n    }\n\n    return true;\n  },\n  prefix: function (data) {\n    var match;\n\n    while (match = data.name.match(/^\\[([^\\]]*)\\]/)) {\n      if (!exports.CONFIG.paths.hasOwnProperty(match[1])) break;\n      data.name = exports.CONFIG.paths[match[1]] + data.name.substr(match[0].length);\n    }\n\n    return true;\n  }\n};\nvar Loader;\n\n(function (Loader) {\n  function ready() {\n    var e_2, _a;\n\n    var names = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      names[_i] = arguments[_i];\n    }\n\n    if (names.length === 0) {\n      names = Array.from(package_js_1.Package.packages.keys());\n    }\n\n    var promises = [];\n\n    try {\n      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n        var name_1 = names_1_1.value;\n        var extension = package_js_1.Package.packages.get(name_1) || new package_js_1.Package(name_1, true);\n        promises.push(extension.promise);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return Promise.all(promises);\n  }\n\n  Loader.ready = ready;\n\n  function load() {\n    var e_3, _a;\n\n    var names = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      names[_i] = arguments[_i];\n    }\n\n    if (names.length === 0) {\n      return Promise.resolve();\n    }\n\n    var promises = [];\n\n    try {\n      for (var names_2 = __values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {\n        var name_2 = names_2_1.value;\n        var extension = package_js_1.Package.packages.get(name_2);\n\n        if (!extension) {\n          extension = new package_js_1.Package(name_2);\n          extension.provides(exports.CONFIG.provides[name_2]);\n        }\n\n        extension.checkNoLoad();\n        promises.push(extension.promise);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (names_2_1 && !names_2_1.done && (_a = names_2.return)) _a.call(names_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    package_js_1.Package.loadAll();\n    return Promise.all(promises);\n  }\n\n  Loader.load = load;\n\n  function preLoad() {\n    var e_4, _a;\n\n    var names = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      names[_i] = arguments[_i];\n    }\n\n    try {\n      for (var names_3 = __values(names), names_3_1 = names_3.next(); !names_3_1.done; names_3_1 = names_3.next()) {\n        var name_3 = names_3_1.value;\n        var extension = package_js_1.Package.packages.get(name_3);\n\n        if (!extension) {\n          extension = new package_js_1.Package(name_3, true);\n          extension.provides(exports.CONFIG.provides[name_3]);\n        }\n\n        extension.loaded();\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (names_3_1 && !names_3_1.done && (_a = names_3.return)) _a.call(names_3);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  }\n\n  Loader.preLoad = preLoad;\n\n  function defaultReady() {\n    if (typeof exports.MathJax.startup !== 'undefined') {\n      exports.MathJax.config.startup.ready();\n    }\n  }\n\n  Loader.defaultReady = defaultReady;\n\n  function getRoot() {\n    var root = __dirname + '/../../es5';\n\n    if (typeof document !== 'undefined') {\n      var script = document.currentScript || document.getElementById('MathJax-script');\n\n      if (script) {\n        root = script.src.replace(/\\/[^\\/]*$/, '');\n      }\n    }\n\n    return root;\n  }\n\n  Loader.getRoot = getRoot;\n  Loader.pathFilters = new FunctionList_js_1.FunctionList();\n  Loader.pathFilters.add(exports.PathFilters.source, 0);\n  Loader.pathFilters.add(exports.PathFilters.normalize, 10);\n  Loader.pathFilters.add(exports.PathFilters.prefix, 20);\n})(Loader = exports.Loader || (exports.Loader = {}));\n\nexports.MathJax = global_js_1.MathJax;\n\nif (typeof exports.MathJax.loader === 'undefined') {\n  global_js_1.combineDefaults(exports.MathJax.config, 'loader', {\n    paths: {\n      mathjax: Loader.getRoot()\n    },\n    source: {},\n    dependencies: {},\n    provides: {},\n    load: [],\n    ready: Loader.defaultReady.bind(Loader),\n    failed: function (error) {\n      return console.log(\"MathJax(\" + (error.package || '?') + \"): \" + error.message);\n    },\n    require: null,\n    pathFilters: []\n  });\n  global_js_1.combineWithMathJax({\n    loader: Loader\n  });\n\n  try {\n    for (var _b = __values(exports.MathJax.config.loader.pathFilters), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var filter = _c.value;\n\n      if (Array.isArray(filter)) {\n        Loader.pathFilters.add(filter[0], filter[1]);\n      } else {\n        Loader.pathFilters.add(filter);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n}\n\nexports.CONFIG = exports.MathJax.config.loader;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/components/loader.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  A dynamic loader for loading MathJax components based\n *                on a user configuration, while handling timing of\n *                dependencies properly\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathJax as MJGlobal, MathJaxObject as MJObject, MathJaxLibrary,\n        MathJaxConfig as MJConfig, combineWithMathJax, combineDefaults} from './global.js';\n\nimport {Package, PackageError, PackageReady, PackageFailed} from './package.js';\nexport {Package, PackageError, PackageReady, PackageFailed} from './package.js';\nexport {MathJaxLibrary} from './global.js';\n\nimport {FunctionList} from '../util/FunctionList.js';\n\n/*\n * The current directory (for webpack), and the browser document (if any)\n */\ndeclare var __dirname: string;\ndeclare var document: Document;\n\n/**\n * Function used to determine path to a given package.\n */\nexport type PathFilterFunction = (data: {name: string, original: string, addExtension: boolean}) => boolean;\nexport type PathFilterList = (PathFilterFunction | [PathFilterFunction, number])[];\n\n/**\n * Update the configuration structure to include the loader configuration\n */\nexport interface MathJaxConfig extends MJConfig {\n  loader?: {\n    paths?: {[name: string]: string};          // The path prefixes for use in locations\n    source?: {[name: string]: string};         // The URLs for the extensions, e.g., tex: [mathjax]/input/tex.js\n    dependencies?: {[name: string]: string[]}; // The dependencies for each package\n    provides?: {[name: string]: string[]};     // The sub-packages provided by each package\n    load?: string[];                           // The packages to load (found in locations or [mathjax]/name])\n    ready?: PackageReady;                      // A function to call when MathJax is ready\n    failed?: PackageFailed;                    // A function to call when MathJax fails to load\n    require?: (url: string) => any;            // A function for loading URLs\n    pathFilters?: PathFilterList;              // List of path filters (and optional priorities) to add\n    [name: string]: any;                       // Other configuration blocks\n  };\n}\n\n/**\n * Update the MathJax object to inclide the loader information\n */\nexport interface MathJaxObject extends MJObject {\n  _: MathJaxLibrary;\n  config: MathJaxConfig;\n  loader: {\n    ready: (...names: string[]) => Promise<string[]>; // Get a promise for when all the named packages are loaded\n    load: (...names: string[]) => Promise<string>;    // Load the packages and return a promise for when ready\n    preLoad: (...names: string[]) => void;            // Indicate that packages are already loaded by hand\n    defaultReady: () => void;                         // The function performed when all packages are loaded\n    getRoot: () => string;                            // Find the root URL for the MathJax files\n    pathFilters: FunctionList;                        // the filters to use for looking for package paths\n  };\n  startup?: any;\n}\n\n/**\n * Functions used to filter the path to a package\n */\nexport const PathFilters: {[name: string]: PathFilterFunction} = {\n  /**\n   * Look up the path in the configuration's source list\n   */\n  source: (data) => {\n    if (CONFIG.source.hasOwnProperty(data.name)) {\n      data.name = CONFIG.source[data.name];\n    }\n    return true;\n  },\n\n  /**\n   * Add [mathjax] before any relative path, and add .js if needed\n   */\n  normalize: (data) => {\n    const name = data.name;\n    if (!name.match(/^(?:[a-z]+:\\/)?\\/|[a-z]:\\\\|\\[/i)) {\n      data.name = '[mathjax]/' + name.replace(/^\\.\\//, '');\n    }\n    if (data.addExtension && !name.match(/\\.[^\\/]+$/)) {\n      data.name += '.js';\n    }\n    return true;\n  },\n\n  /**\n   * Recursively replace path prefixes (e.g., [mathjax], [tex], etc.)\n   */\n  prefix: (data) => {\n    let match;\n    while ((match = data.name.match(/^\\[([^\\]]*)\\]/))) {\n      if (!CONFIG.paths.hasOwnProperty(match[1])) break;\n      data.name = CONFIG.paths[match[1]] + data.name.substr(match[0].length);\n    }\n    return true;\n  }\n\n};\n\n\n/**\n * The implementation of the dynamic loader\n */\nexport namespace Loader {\n\n  /**\n   * Get a promise that is resolved when all the named packages have been loaded.\n   *\n   * @param {string[]} names  The packages to wait for\n   * @returns {Promise}       A promise that resolves when all the named packages are ready\n   */\n  export function ready(...names: string[]): Promise<string[]> {\n    if (names.length === 0) {\n      names = Array.from(Package.packages.keys());\n    }\n    const promises = [];\n    for (const name of names) {\n      const extension = Package.packages.get(name) || new Package(name, true);\n      promises.push(extension.promise);\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Load the named packages and return a promise that is resolved when they are all loaded\n   *\n   * @param {string[]} names  The packages to load\n   * @returns {Promise}       A promise that resolves when all the named packages are ready\n   */\n  export function load(...names: string[]): Promise<void | string[]> {\n    if (names.length === 0) {\n      return Promise.resolve();\n    }\n    const promises = [];\n    for (const name of names) {\n      let extension = Package.packages.get(name);\n      if (!extension) {\n        extension = new Package(name);\n        extension.provides(CONFIG.provides[name]);\n      }\n      extension.checkNoLoad();\n      promises.push(extension.promise);\n    }\n    Package.loadAll();\n    return Promise.all(promises);\n  }\n\n  /**\n   * Indicate that the named packages are being loaded by hand (e.g., as part of a larger package).\n   *\n   * @param {string[]} names  The packages to load\n   */\n  export function preLoad(...names: string[]) {\n    for (const name of names) {\n      let extension = Package.packages.get(name);\n      if (!extension) {\n        extension = new Package(name, true);\n        extension.provides(CONFIG.provides[name]);\n      }\n      extension.loaded();\n    }\n  }\n\n  /**\n   * The default function to perform when all the packages are loaded\n   */\n  export function defaultReady() {\n    if (typeof MathJax.startup !== 'undefined') {\n      MathJax.config.startup.ready();\n    }\n  }\n\n  /**\n   * Get the root location for where the MathJax package files are found\n   *\n   * @returns {string}   The root location (directory for node.js, URL for browser)\n   */\n  export function getRoot(): string {\n    let root = __dirname + '/../../es5';\n    if (typeof document !== 'undefined') {\n      const script = document.currentScript || document.getElementById('MathJax-script');\n      if (script) {\n        root = (script as HTMLScriptElement).src.replace(/\\/[^\\/]*$/, '');\n      }\n    }\n    return root;\n  }\n\n  /**\n   * The filters to use to modify the paths used to obtain the packages\n   */\n  export const pathFilters = new FunctionList();\n\n  /**\n   * The default filters to use.\n   */\n  pathFilters.add(PathFilters.source, 0);\n  pathFilters.add(PathFilters.normalize, 10);\n  pathFilters.add(PathFilters.prefix, 20);\n}\n\n/**\n * Export the global MathJax object for convenience\n */\nexport const MathJax = MJGlobal as MathJaxObject;\n\n/*\n * If the loader hasn't been added to the MathJax variable,\n *   Add the loader configuration, library, and data objects.\n *   Add any path filters from the configuration.\n */\nif (typeof MathJax.loader === 'undefined') {\n\n  combineDefaults(MathJax.config, 'loader', {\n    paths: {\n      mathjax: Loader.getRoot()\n    },\n    source: {},\n    dependencies: {},\n    provides: {},\n    load: [],\n    ready: Loader.defaultReady.bind(Loader),\n    failed: (error: PackageError) => console.log(`MathJax(${error.package || '?'}): ${error.message}`),\n    require: null,\n    pathFilters: [],\n  });\n  combineWithMathJax({\n    loader: Loader\n  });\n\n  //\n  // Add any path filters from the configuration\n  //\n  for (const filter of MathJax.config.loader.pathFilters) {\n    if (Array.isArray(filter)) {\n      Loader.pathFilters.add(filter[0], filter[1]);\n    } else {\n      Loader.pathFilters.add(filter);\n    }\n  }\n}\n\n/**\n * Export the loader configuration for convenience\n */\nexport const CONFIG = MathJax.config.loader;\n"]},"metadata":{},"sourceType":"script"}