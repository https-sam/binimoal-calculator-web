{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmglyph = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar mglyph_js_1 = require(\"../../common/Wrappers/mglyph.js\");\n\nvar mglyph_js_2 = require(\"../../../core/MmlTree/MmlNodes/mglyph.js\");\n\nvar SVGmglyph = function (_super) {\n  __extends(SVGmglyph, _super);\n\n  function SVGmglyph() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmglyph.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n\n    var _a = this.node.attributes.getList('src', 'alt'),\n        src = _a.src,\n        alt = _a.alt;\n\n    var h = this.fixed(this.height);\n    var w = this.fixed(this.width);\n    var y = this.fixed(this.height + (this.valign || 0));\n    var properties = {\n      width: w,\n      height: h,\n      transform: 'translate(0 ' + y + ') matrix(1 0 0 -1 0 0)',\n      preserveAspectRatio: 'none',\n      'aria-label': alt,\n      href: src\n    };\n    var img = this.svg('image', properties);\n    this.adaptor.append(svg, img);\n  };\n\n  SVGmglyph.kind = mglyph_js_2.MmlMglyph.prototype.kind;\n  return SVGmglyph;\n}(mglyph_js_1.CommonMglyphMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmglyph = SVGmglyph;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/output/svg/Wrappers/mglyph.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AAYA,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AACA,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AADA,WAAA,SAAA,GAAA;;AA4BC;;AAjBQ,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,MAAb,EAAsB;AACpB,QAAM,GAAG,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAZ;;AACM,QAAA,EAAA,GAAa,KAAK,IAAL,CAAU,UAAV,CAAqB,OAArB,CAA6B,KAA7B,EAAoC,KAApC,CAAb;AAAA,QAAC,GAAG,GAAA,EAAA,CAAA,GAAJ;AAAA,QAAM,GAAG,GAAA,EAAA,CAAA,GAAT;;AACN,QAAM,CAAC,GAAG,KAAK,KAAL,CAAW,KAAK,MAAhB,CAAV;AACA,QAAM,CAAC,GAAG,KAAK,KAAL,CAAW,KAAK,KAAhB,CAAV;AACA,QAAM,CAAC,GAAG,KAAK,KAAL,CAAW,KAAK,MAAL,IAAe,KAAK,MAAL,IAAe,CAA9B,CAAX,CAAV;AACA,QAAM,UAAU,GAAe;AAC7B,MAAA,KAAK,EAAE,CADsB;AACnB,MAAA,MAAM,EAAE,CADW;AAE7B,MAAA,SAAS,EAAE,iBAAiB,CAAjB,GAAqB,wBAFH;AAG7B,MAAA,mBAAmB,EAAE,MAHQ;AAI7B,oBAAc,GAJe;AAK7B,MAAA,IAAI,EAAE;AALuB,KAA/B;AAOA,QAAM,GAAG,GAAG,KAAK,GAAL,CAAS,OAAT,EAAkB,UAAlB,CAAZ;AACA,SAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,GAAzB;AACD,GAfM;;AALO,EAAA,SAAA,CAAA,IAAA,GAAO,WAAA,CAAA,SAAA,CAAU,SAAV,CAAoB,IAA3B;AAsBhB,SAAA,SAAA;AAAC,CA5BD,CACA,WAAA,CAAA,iBAAA,CAAiD,YAAA,CAAA,UAAjD,CADA,CAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmglyph wrapper for the MmlMglyph object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonMglyphMixin} from '../../common/Wrappers/mglyph.js';\nimport {MmlMglyph} from '../../../core/MmlTree/MmlNodes/mglyph.js';\nimport {OptionList} from '../../../util/Options.js';\n\n/*****************************************************************/\n/**\n * The SVGmglyph wrapper for the MmlMglyph object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmglyph<N, T, D> extends\nCommonMglyphMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mglyph wrapper\n   */\n  public static kind = MmlMglyph.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    const {src, alt} = this.node.attributes.getList('src', 'alt');\n    const h = this.fixed(this.height);\n    const w = this.fixed(this.width);\n    const y = this.fixed(this.height + (this.valign || 0));\n    const properties: OptionList = {\n      width: w, height: h,\n      transform: 'translate(0 ' + y + ') matrix(1 0 0 -1 0 0)',\n      preserveAspectRatio: 'none',\n      'aria-label': alt,\n      href: src\n    };\n    const img = this.svg('image', properties);\n    this.adaptor.append(svg, img);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}