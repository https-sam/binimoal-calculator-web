{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liteAdaptor = exports.LiteAdaptor = void 0;\n\nvar DOMAdaptor_js_1 = require(\"../core/DOMAdaptor.js\");\n\nvar Document_js_1 = require(\"./lite/Document.js\");\n\nvar Element_js_1 = require(\"./lite/Element.js\");\n\nvar Text_js_1 = require(\"./lite/Text.js\");\n\nvar Window_js_1 = require(\"./lite/Window.js\");\n\nvar Parser_js_1 = require(\"./lite/Parser.js\");\n\nvar Styles_js_1 = require(\"../util/Styles.js\");\n\nvar Options_js_1 = require(\"../util/Options.js\");\n\nvar LiteAdaptor = function (_super) {\n  __extends(LiteAdaptor, _super);\n\n  function LiteAdaptor(options) {\n    if (options === void 0) {\n      options = null;\n    }\n\n    var _this = _super.call(this) || this;\n\n    var CLASS = _this.constructor;\n    _this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);\n    _this.parser = new Parser_js_1.LiteParser();\n    _this.window = new Window_js_1.LiteWindow();\n    return _this;\n  }\n\n  LiteAdaptor.prototype.parse = function (text, format) {\n    return this.parser.parseFromString(text, format, this);\n  };\n\n  LiteAdaptor.prototype.create = function (kind, _ns) {\n    if (_ns === void 0) {\n      _ns = null;\n    }\n\n    return new Element_js_1.LiteElement(kind);\n  };\n\n  LiteAdaptor.prototype.text = function (text) {\n    return new Text_js_1.LiteText(text);\n  };\n\n  LiteAdaptor.prototype.comment = function (text) {\n    return new Text_js_1.LiteComment(text);\n  };\n\n  LiteAdaptor.prototype.createDocument = function () {\n    return new Document_js_1.LiteDocument();\n  };\n\n  LiteAdaptor.prototype.head = function (doc) {\n    return doc.head;\n  };\n\n  LiteAdaptor.prototype.body = function (doc) {\n    return doc.body;\n  };\n\n  LiteAdaptor.prototype.root = function (doc) {\n    return doc.root;\n  };\n\n  LiteAdaptor.prototype.doctype = function (doc) {\n    return doc.type;\n  };\n\n  LiteAdaptor.prototype.tags = function (node, name, ns) {\n    if (ns === void 0) {\n      ns = null;\n    }\n\n    var stack = [];\n    var tags = [];\n\n    if (ns) {\n      return tags;\n    }\n\n    var n = node;\n\n    while (n) {\n      var kind = n.kind;\n\n      if (kind !== '#text' && kind !== '#comment') {\n        n = n;\n\n        if (kind === name) {\n          tags.push(n);\n        }\n\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n\n      n = stack.shift();\n    }\n\n    return tags;\n  };\n\n  LiteAdaptor.prototype.elementById = function (node, id) {\n    var stack = [];\n    var n = node;\n\n    while (n) {\n      if (n.kind !== '#text' && n.kind !== '#comment') {\n        n = n;\n\n        if (n.attributes['id'] === id) {\n          return n;\n        }\n\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n\n      n = stack.shift();\n    }\n\n    return null;\n  };\n\n  LiteAdaptor.prototype.elementsByClass = function (node, name) {\n    var stack = [];\n    var tags = [];\n    var n = node;\n\n    while (n) {\n      if (n.kind !== '#text' && n.kind !== '#comment') {\n        n = n;\n        var classes = (n.attributes['class'] || '').trim().split(/ +/);\n\n        if (classes.includes(name)) {\n          tags.push(n);\n        }\n\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n\n      n = stack.shift();\n    }\n\n    return tags;\n  };\n\n  LiteAdaptor.prototype.getElements = function (nodes, document) {\n    var e_1, _a;\n\n    var containers = [];\n    var body = this.body(document);\n\n    try {\n      for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n        var node = nodes_1_1.value;\n\n        if (typeof node === 'string') {\n          if (node.charAt(0) === '#') {\n            var n = this.elementById(body, node.slice(1));\n\n            if (n) {\n              containers.push(n);\n            }\n          } else if (node.charAt(0) === '.') {\n            containers = containers.concat(this.elementsByClass(body, node.slice(1)));\n          } else if (node.match(/^[-a-z][-a-z0-9]*$/i)) {\n            containers = containers.concat(this.tags(body, node));\n          }\n        } else if (Array.isArray(node)) {\n          containers = containers.concat(node);\n        } else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {\n          containers = containers.concat(node.nodes);\n        } else {\n          containers.push(node);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return containers;\n  };\n\n  LiteAdaptor.prototype.contains = function (container, node) {\n    while (node && node !== container) {\n      node = this.parent(node);\n    }\n\n    return !!node;\n  };\n\n  LiteAdaptor.prototype.parent = function (node) {\n    return node.parent;\n  };\n\n  LiteAdaptor.prototype.childIndex = function (node) {\n    return node.parent ? node.parent.children.findIndex(function (n) {\n      return n === node;\n    }) : -1;\n  };\n\n  LiteAdaptor.prototype.append = function (node, child) {\n    if (child.parent) {\n      this.remove(child);\n    }\n\n    node.children.push(child);\n    child.parent = node;\n    return child;\n  };\n\n  LiteAdaptor.prototype.insert = function (nchild, ochild) {\n    if (nchild.parent) {\n      this.remove(nchild);\n    }\n\n    if (ochild && ochild.parent) {\n      var i = this.childIndex(ochild);\n      ochild.parent.children.splice(i, 0, nchild);\n      nchild.parent = ochild.parent;\n    }\n  };\n\n  LiteAdaptor.prototype.remove = function (child) {\n    var i = this.childIndex(child);\n\n    if (i >= 0) {\n      child.parent.children.splice(i, 1);\n    }\n\n    child.parent = null;\n    return child;\n  };\n\n  LiteAdaptor.prototype.replace = function (nnode, onode) {\n    var i = this.childIndex(onode);\n\n    if (i >= 0) {\n      onode.parent.children[i] = nnode;\n      nnode.parent = onode.parent;\n      onode.parent = null;\n    }\n\n    return onode;\n  };\n\n  LiteAdaptor.prototype.clone = function (node) {\n    var _this = this;\n\n    var nnode = new Element_js_1.LiteElement(node.kind);\n    nnode.attributes = __assign({}, node.attributes);\n    nnode.children = node.children.map(function (n) {\n      if (n.kind === '#text') {\n        return new Text_js_1.LiteText(n.value);\n      } else if (n.kind === '#comment') {\n        return new Text_js_1.LiteComment(n.value);\n      } else {\n        var m = _this.clone(n);\n\n        m.parent = nnode;\n        return m;\n      }\n    });\n    return nnode;\n  };\n\n  LiteAdaptor.prototype.split = function (node, n) {\n    var text = new Text_js_1.LiteText(node.value.slice(n));\n    node.value = node.value.slice(0, n);\n    node.parent.children.splice(this.childIndex(node) + 1, 0, text);\n    text.parent = node.parent;\n    return text;\n  };\n\n  LiteAdaptor.prototype.next = function (node) {\n    var parent = node.parent;\n    if (!parent) return null;\n    var i = this.childIndex(node) + 1;\n    return i >= 0 && i < parent.children.length ? parent.children[i] : null;\n  };\n\n  LiteAdaptor.prototype.previous = function (node) {\n    var parent = node.parent;\n    if (!parent) return null;\n    var i = this.childIndex(node) - 1;\n    return i >= 0 ? parent.children[i] : null;\n  };\n\n  LiteAdaptor.prototype.firstChild = function (node) {\n    return node.children[0];\n  };\n\n  LiteAdaptor.prototype.lastChild = function (node) {\n    return node.children[node.children.length - 1];\n  };\n\n  LiteAdaptor.prototype.childNodes = function (node) {\n    return __spreadArray([], __read(node.children));\n  };\n\n  LiteAdaptor.prototype.childNode = function (node, i) {\n    return node.children[i];\n  };\n\n  LiteAdaptor.prototype.kind = function (node) {\n    return node.kind;\n  };\n\n  LiteAdaptor.prototype.value = function (node) {\n    return node.kind === '#text' ? node.value : node.kind === '#comment' ? node.value.replace(/^<!(--)?((?:.|\\n)*)\\1>$/, '$2') : '';\n  };\n\n  LiteAdaptor.prototype.textContent = function (node) {\n    var _this = this;\n\n    return node.children.reduce(function (s, n) {\n      return s + (n.kind === '#text' ? n.value : n.kind === '#comment' ? '' : _this.textContent(n));\n    }, '');\n  };\n\n  LiteAdaptor.prototype.innerHTML = function (node) {\n    return this.parser.serializeInner(this, node);\n  };\n\n  LiteAdaptor.prototype.outerHTML = function (node) {\n    return this.parser.serialize(this, node);\n  };\n\n  LiteAdaptor.prototype.serializeXML = function (node) {\n    return this.parser.serialize(this, node, true);\n  };\n\n  LiteAdaptor.prototype.setAttribute = function (node, name, value, ns) {\n    if (ns === void 0) {\n      ns = null;\n    }\n\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    if (ns) {\n      name = ns.replace(/.*\\//, '') + ':' + name.replace(/^.*:/, '');\n    }\n\n    node.attributes[name] = value;\n\n    if (name === 'style') {\n      node.styles = null;\n    }\n  };\n\n  LiteAdaptor.prototype.getAttribute = function (node, name) {\n    return node.attributes[name];\n  };\n\n  LiteAdaptor.prototype.removeAttribute = function (node, name) {\n    delete node.attributes[name];\n  };\n\n  LiteAdaptor.prototype.hasAttribute = function (node, name) {\n    return node.attributes.hasOwnProperty(name);\n  };\n\n  LiteAdaptor.prototype.allAttributes = function (node) {\n    var e_2, _a;\n\n    var attributes = node.attributes;\n    var list = [];\n\n    try {\n      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        list.push({\n          name: name_1,\n          value: attributes[name_1]\n        });\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return list;\n  };\n\n  LiteAdaptor.prototype.addClass = function (node, name) {\n    var classes = (node.attributes['class'] || '').split(/ /);\n\n    if (!classes.find(function (n) {\n      return n === name;\n    })) {\n      classes.push(name);\n      node.attributes['class'] = classes.join(' ');\n    }\n  };\n\n  LiteAdaptor.prototype.removeClass = function (node, name) {\n    var classes = (node.attributes['class'] || '').split(/ /);\n    var i = classes.findIndex(function (n) {\n      return n === name;\n    });\n\n    if (i >= 0) {\n      classes.splice(i, 1);\n      node.attributes['class'] = classes.join(' ');\n    }\n  };\n\n  LiteAdaptor.prototype.hasClass = function (node, name) {\n    var classes = (node.attributes['class'] || '').split(/ /);\n    return !!classes.find(function (n) {\n      return n === name;\n    });\n  };\n\n  LiteAdaptor.prototype.setStyle = function (node, name, value) {\n    if (!node.styles) {\n      node.styles = new Styles_js_1.Styles(this.getAttribute(node, 'style'));\n    }\n\n    node.styles.set(name, value);\n    node.attributes['style'] = node.styles.cssText;\n  };\n\n  LiteAdaptor.prototype.getStyle = function (node, name) {\n    if (!node.styles) {\n      var style = this.getAttribute(node, 'style');\n\n      if (!style) {\n        return '';\n      }\n\n      node.styles = new Styles_js_1.Styles(style);\n    }\n\n    return node.styles.get(name);\n  };\n\n  LiteAdaptor.prototype.allStyles = function (node) {\n    return this.getAttribute(node, 'style');\n  };\n\n  LiteAdaptor.prototype.insertRules = function (node, rules) {\n    node.children = [this.text(rules.join('\\n\\n') + '\\n\\n' + this.textContent(node))];\n  };\n\n  LiteAdaptor.prototype.fontSize = function (_node) {\n    return this.options.fontSize;\n  };\n\n  LiteAdaptor.prototype.fontFamily = function (_node) {\n    return this.options.fontFamily;\n  };\n\n  LiteAdaptor.prototype.nodeSize = function (node, _em, _local) {\n    if (_em === void 0) {\n      _em = 1;\n    }\n\n    if (_local === void 0) {\n      _local = null;\n    }\n\n    var text = this.textContent(node);\n    var non = Array.from(text.replace(LiteAdaptor.cjkPattern, '')).length;\n    var CJK = Array.from(text).length - non;\n    return [CJK * this.options.cjkCharWidth + non * this.options.unknownCharWidth, this.options.unknownCharHeight];\n  };\n\n  LiteAdaptor.prototype.nodeBBox = function (_node) {\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n  };\n\n  LiteAdaptor.OPTIONS = {\n    fontSize: 16,\n    fontFamily: 'Times',\n    cjkCharWidth: 1,\n    unknownCharWidth: .6,\n    unknownCharHeight: .8\n  };\n  LiteAdaptor.cjkPattern = new RegExp(['[', '\\u1100-\\u115F', '\\u2329\\u232A', '\\u2E80-\\u303E', '\\u3040-\\u3247', '\\u3250-\\u4DBF', '\\u4E00-\\uA4C6', '\\uA960-\\uA97C', '\\uAC00-\\uD7A3', '\\uF900-\\uFAFF', '\\uFE10-\\uFE19', '\\uFE30-\\uFE6B', '\\uFF01-\\uFF60\\uFFE0-\\uFFE6', \"\\uD82C\\uDC00-\\uD82C\\uDC01\", \"\\uD83C\\uDE00-\\uD83C\\uDE51\", \"\\uD840\\uDC00-\\uD8BF\\uDFFD\", ']'].join(''), 'gu');\n  return LiteAdaptor;\n}(DOMAdaptor_js_1.AbstractDOMAdaptor);\n\nexports.LiteAdaptor = LiteAdaptor;\n\nfunction liteAdaptor(options) {\n  if (options === void 0) {\n    options = null;\n  }\n\n  return new LiteAdaptor(options);\n}\n\nexports.liteAdaptor = liteAdaptor;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/adaptors/liteAdaptor.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a lightweight DOM adaptor\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractDOMAdaptor} from '../core/DOMAdaptor.js';\nimport {LiteDocument} from './lite/Document.js';\nimport {LiteElement, LiteNode} from './lite/Element.js';\nimport {LiteText, LiteComment} from './lite/Text.js';\nimport {LiteList} from './lite/List.js';\nimport {LiteWindow} from './lite/Window.js';\nimport {LiteParser} from './lite/Parser.js';\nimport {Styles} from '../util/Styles.js';\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\n\n/************************************************************/\n/**\n * Implements a lightweight DOMAdaptor on liteweight HTML elements\n */\nexport class LiteAdaptor extends AbstractDOMAdaptor<LiteElement, LiteText, LiteDocument> {\n  /**\n   * The default options\n   */\n  public static OPTIONS: OptionList = {\n    fontSize: 16,          // We can't compute the font size, so always use this\n    fontFamily: 'Times',   // We can't compute the font family, so always use this\n    cjkCharWidth: 1,       // Width (in em units) of full width characters\n    unknownCharWidth: .6,  // Width (in em units) of unknown (non-full-width) characters\n    unknownCharHeight: .8, // Height (in em units) of unknown characters\n  };\n\n  /**\n   * Pattern to identify CJK (.i.e., full-width) characters\n   */\n  public static cjkPattern = new RegExp([\n    '[',\n    '\\u1100-\\u115F', // Hangul Jamo\n    '\\u2329\\u232A',  // LEFT-POINTING ANGLE BRACKET, RIGHT-POINTING ANGLE BRACKET\n    '\\u2E80-\\u303E', // CJK Radicals Supplement ... CJK Symbols and Punctuation\n    '\\u3040-\\u3247', // Hiragana ... Enclosed CJK Letters and Months\n    '\\u3250-\\u4DBF', // Enclosed CJK Letters and Months ... CJK Unified Ideographs Extension A\n    '\\u4E00-\\uA4C6', // CJK Unified Ideographs ... Yi Radicals\n    '\\uA960-\\uA97C', // Hangul Jamo Extended-A\n    '\\uAC00-\\uD7A3', // Hangul Syllables\n    '\\uF900-\\uFAFF', // CJK Compatibility Ideographs\n    '\\uFE10-\\uFE19', // Vertical Forms\n    '\\uFE30-\\uFE6B', // CJK Compatibility Forms ... Small Form Variants\n    '\\uFF01-\\uFF60\\uFFE0-\\uFFE6', // Halfwidth and Fullwidth Forms\n    '\\u{1B000}-\\u{1B001}', // Kana Supplement\n    '\\u{1F200}-\\u{1F251}', // Enclosed Ideographic Supplement\n    '\\u{20000}-\\u{3FFFD}', // CJK Unified Ideographs Extension B ... Tertiary Ideographic Plane\n    ']'\n  ].join(''), 'gu');\n\n  /**\n   * The options for the instance\n   */\n  public options: OptionList;\n\n  /**\n   * The document in which the HTML nodes will be created\n   */\n  public document: LiteDocument;\n\n  /**\n   * The window for the document\n   */\n  public window: LiteWindow;\n\n  /**\n   * The parser for serialized HTML\n   */\n  public parser: LiteParser;\n\n  /**\n   * @param {OptionList} options  The options for the lite adaptor (e.g., fontSize)\n   * @constructor\n   */\n  constructor(options: OptionList = null) {\n    super();\n    let CLASS = this.constructor as typeof LiteAdaptor;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.parser = new LiteParser();\n    this.window = new LiteWindow();\n  }\n\n  /**\n   * @override\n   */\n  public parse(text: string, format?: string) {\n    return this.parser.parseFromString(text, format, this);\n  }\n\n  /**\n   * @override\n   */\n  protected create(kind: string, _ns: string = null) {\n    return new LiteElement(kind);\n  }\n\n  /**\n   * @override\n   */\n  public text(text: string) {\n    return new LiteText(text);\n  }\n\n  /**\n   * @param {string} text   The text of the comment\n   * @return {LiteComment}  The comment node\n   */\n  public comment(text: string): LiteComment {\n    return new LiteComment(text);\n  }\n\n  /**\n   * @return {LiteDocument}  A new document element\n   */\n  public createDocument(): LiteDocument {\n    return new LiteDocument();\n  }\n\n  /**\n   * @override\n   */\n  public head(doc: LiteDocument) {\n    return doc.head;\n  }\n\n  /**\n   * @override\n   */\n  public body(doc: LiteDocument) {\n    return doc.body;\n  }\n\n  /**\n   * @override\n   */\n  public root(doc: LiteDocument) {\n    return doc.root;\n  }\n\n  /**\n   * @override\n   */\n  public doctype(doc: LiteDocument) {\n    return doc.type;\n  }\n\n  /**\n   * @override\n   */\n  public tags(node: LiteElement, name: string, ns: string = null) {\n    let stack = [] as LiteNode[];\n    let tags = [] as LiteElement[];\n    if (ns) {\n      return tags;  // we don't have namespaces\n    }\n    let n: LiteNode = node;\n    while (n) {\n      let kind = n.kind;\n      if (kind !== '#text' && kind !== '#comment') {\n        n = n as LiteElement;\n        if (kind === name) {\n          tags.push(n);\n        }\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n      n = stack.shift();\n    }\n    return tags;\n  }\n\n  /**\n   * @param {LiteElement} node   The node to be searched\n   * @param {string} id          The id of the node to look for\n   * @return {LiteElement}       The child node having the given id\n   */\n  public elementById(node: LiteElement, id: string): LiteElement {\n    let stack = [] as LiteNode[];\n    let n = node as LiteNode;\n    while (n) {\n      if (n.kind !== '#text' && n.kind !== '#comment') {\n        n = n as LiteElement;\n        if (n.attributes['id'] === id) {\n          return n;\n        }\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n      n = stack.shift();\n    }\n    return null;\n  }\n\n  /**\n   * @param {LiteElement} node   The node to be searched\n   * @param {string} name        The name of the class to find\n   * @return {LiteElement[]}     The nodes with the given class\n   */\n  public elementsByClass(node: LiteElement, name: string): LiteElement[] {\n    let stack = [] as LiteNode[];\n    let tags = [] as LiteElement[];\n    let n: LiteNode = node;\n    while (n) {\n      if (n.kind !== '#text' && n.kind !== '#comment') {\n        n = n as LiteElement;\n        const classes = (n.attributes['class'] || '').trim().split(/ +/);\n        if (classes.includes(name)) {\n          tags.push(n);\n        }\n        if (n.children.length) {\n          stack = n.children.concat(stack);\n        }\n      }\n      n = stack.shift();\n    }\n    return tags;\n  }\n\n  /**\n   * @override\n   */\n  public getElements(nodes: (string | LiteElement | LiteElement[])[], document: LiteDocument) {\n    let containers = [] as LiteElement[];\n    const body = this.body(document);\n    for (const node of nodes) {\n      if (typeof(node) === 'string') {\n        if (node.charAt(0) === '#') {\n          const n = this.elementById(body, node.slice(1));\n          if (n) {\n            containers.push(n);\n          }\n        } else if (node.charAt(0) === '.') {\n          containers = containers.concat(this.elementsByClass(body, node.slice(1)));\n        } else if (node.match(/^[-a-z][-a-z0-9]*$/i)) {\n          containers = containers.concat(this.tags(body, node));\n        }\n      } else if (Array.isArray(node)) {\n        containers = containers.concat(node);\n      } else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {\n        containers = containers.concat((node as LiteList<LiteElement>).nodes);\n      } else {\n        containers.push(node);\n      }\n    }\n    return containers;\n  }\n\n  /**\n   * @override\n   */\n  public contains(container: LiteNode, node: LiteNode | LiteText) {\n    while (node && node !== container) {\n      node = this.parent(node);\n    }\n    return !!node;\n  }\n\n  /**\n   * @override\n   */\n  public parent(node: LiteNode) {\n    return node.parent;\n  }\n\n  /**\n   * @param {LiteNode} node  The node whose index is needed\n   * @return {number}        The index of the node it its parent's children array\n   */\n  public childIndex(node: LiteNode): number {\n    return (node.parent ? node.parent.children.findIndex(n => n === node) : -1);\n  }\n\n  /**\n   * @override\n   */\n  public append(node: LiteElement, child: LiteNode) {\n    if (child.parent) {\n      this.remove(child);\n    }\n    node.children.push(child);\n    child.parent = node;\n    return child;\n  }\n\n  /**\n   * @override\n   */\n  public insert(nchild: LiteNode, ochild: LiteNode) {\n    if (nchild.parent) {\n      this.remove(nchild);\n    }\n    if (ochild && ochild.parent) {\n      const i = this.childIndex(ochild);\n      ochild.parent.children.splice(i, 0, nchild);\n      nchild.parent = ochild.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public remove(child: LiteNode) {\n    const i = this.childIndex(child);\n    if (i >= 0) {\n      child.parent.children.splice(i, 1);\n    }\n    child.parent = null;\n    return child;\n  }\n\n  /**\n   * @override\n   */\n  public replace(nnode: LiteNode, onode: LiteNode) {\n    const i = this.childIndex(onode);\n    if (i >= 0) {\n      onode.parent.children[i] = nnode;\n      nnode.parent = onode.parent;\n      onode.parent = null;\n    }\n    return onode;\n  }\n\n  /**\n   * @override\n   */\n  public clone(node: LiteElement) {\n    const nnode = new LiteElement(node.kind);\n    nnode.attributes = {...node.attributes};\n    nnode.children = node.children.map(n => {\n      if (n.kind === '#text') {\n        return new LiteText((n as LiteText).value);\n      } else if (n.kind === '#comment') {\n        return new LiteComment((n as LiteComment).value);\n      } else {\n        const m = this.clone(n as LiteElement);\n        m.parent = nnode;\n        return m;\n      }\n    });\n    return nnode;\n  }\n\n  /**\n   * @override\n   */\n  public split(node: LiteText, n: number) {\n    const text = new LiteText(node.value.slice(n));\n    node.value = node.value.slice(0, n);\n    node.parent.children.splice(this.childIndex(node) + 1, 0, text);\n    text.parent = node.parent;\n    return text;\n  }\n\n  /**\n   * @override\n   */\n  public next(node: LiteNode) {\n    const parent = node.parent;\n    if (!parent) return null;\n    const i = this.childIndex(node) + 1;\n    return (i >= 0 && i < parent.children.length ? parent.children[i] : null);\n  }\n\n  /**\n   * @override\n   */\n  public previous(node: LiteNode) {\n    const parent = node.parent;\n    if (!parent) return null;\n    const i = this.childIndex(node) - 1;\n    return (i >= 0 ? parent.children[i] : null);\n  }\n\n  /**\n   * @override\n   */\n  public firstChild(node: LiteElement) {\n    return node.children[0];\n  }\n\n  /**\n   * @override\n   */\n  public lastChild(node: LiteElement) {\n    return node.children[node.children.length - 1];\n  }\n\n  /**\n   * @override\n   */\n  public childNodes(node: LiteElement) {\n    return [...node.children];\n  }\n\n  /**\n   * @override\n   */\n  public childNode(node: LiteElement, i: number) {\n    return node.children[i];\n  }\n\n  /**\n   * @override\n   */\n  public kind(node: LiteNode) {\n    return node.kind;\n  }\n\n  /**\n   * @override\n   */\n  public value(node: LiteNode | LiteText) {\n    return (node.kind === '#text' ? (node as LiteText).value :\n            node.kind === '#comment' ? (node as LiteComment).value.replace(/^<!(--)?((?:.|\\n)*)\\1>$/, '$2') : '');\n  }\n\n  /**\n   * @override\n   */\n  public textContent(node: LiteElement): string {\n    return node.children.reduce((s: string, n: LiteNode) => {\n      return s + (n.kind === '#text' ? (n as LiteText).value :\n                  n.kind === '#comment' ? '' : this.textContent(n as LiteElement));\n    }, '');\n  }\n\n  /**\n   * @override\n   */\n  public innerHTML(node: LiteElement) {\n    return this.parser.serializeInner(this, node);\n  }\n\n  /**\n   * @override\n   */\n  public outerHTML(node: LiteElement) {\n    return this.parser.serialize(this, node);\n  }\n\n  /**\n   * @override\n   */\n  public serializeXML(node: LiteElement) {\n    return this.parser.serialize(this, node, true);\n  }\n\n  /**\n   * @override\n   */\n  public setAttribute(node: LiteElement, name: string, value: string | number, ns: string = null) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    if (ns) {\n      name = ns.replace(/.*\\//, '') + ':' + name.replace(/^.*:/, '');\n    }\n    node.attributes[name] = value;\n    if (name === 'style') {\n      node.styles = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public getAttribute(node: LiteElement, name: string) {\n    return node.attributes[name];\n  }\n\n  /**\n   * @override\n   */\n  public removeAttribute(node: LiteElement, name: string) {\n    delete node.attributes[name];\n  }\n\n  /**\n   * @override\n   */\n  public hasAttribute(node: LiteElement, name: string) {\n    return node.attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * @override\n   */\n  public allAttributes(node: LiteElement) {\n    const attributes = node.attributes;\n    const list = [];\n    for (const name of Object.keys(attributes)) {\n      list.push({name: name, value: attributes[name] as string});\n    }\n    return list;\n  }\n\n  /**\n   * @override\n   */\n  public addClass(node: LiteElement, name: string) {\n    const classes = (node.attributes['class'] as string || '').split(/ /);\n    if (!classes.find(n => n === name)) {\n      classes.push(name);\n      node.attributes['class'] = classes.join(' ');\n    }\n  }\n\n  /**\n   * @override\n   */\n  public removeClass(node: LiteElement, name: string) {\n    const classes = (node.attributes['class'] as string || '').split(/ /);\n    const i = classes.findIndex(n => n === name);\n    if (i >= 0) {\n      classes.splice(i, 1);\n      node.attributes['class'] = classes.join(' ');\n    }\n  }\n\n  /**\n   * @override\n   */\n  public hasClass(node: LiteElement, name: string) {\n    const classes = (node.attributes['class'] as string || '').split(/ /);\n    return !!classes.find(n => n === name);\n  }\n\n  /**\n   * @override\n   */\n  public setStyle(node: LiteElement, name: string, value: string) {\n    if (!node.styles) {\n      node.styles = new Styles(this.getAttribute(node, 'style'));\n    }\n    node.styles.set(name, value);\n    node.attributes['style'] = node.styles.cssText;\n  }\n\n  /**\n   * @override\n   */\n  public getStyle(node: LiteElement, name: string) {\n    if (!node.styles) {\n      const style = this.getAttribute(node, 'style');\n      if (!style) {\n        return '';\n      }\n      node.styles = new Styles(style);\n    }\n    return node.styles.get(name);\n  }\n\n  /**\n   * @override\n   */\n  public allStyles(node: LiteElement) {\n    return this.getAttribute(node, 'style');\n  }\n\n  /**\n   * @override\n   */\n  public insertRules(node: LiteElement, rules: string[]) {\n    node.children = [this.text(rules.join('\\n\\n') + '\\n\\n' + this.textContent(node))];\n  }\n\n  /**\n   * @override\n   */\n  public fontSize(_node: LiteElement) {\n    return this.options.fontSize;\n  }\n\n  /**\n   * @override\n   */\n  public fontFamily(_node: LiteElement) {\n    return this.options.fontFamily;\n  }\n\n  /**\n   * @override\n   */\n  public nodeSize(node: LiteElement, _em: number = 1, _local: boolean = null) {\n    const text = this.textContent(node);\n    const non = Array.from(text.replace(LiteAdaptor.cjkPattern, '')).length; // # of non-CJK chars\n    const CJK = Array.from(text).length - non;                               // # of cjk chars\n    return [\n      CJK * this.options.cjkCharWidth + non * this.options.unknownCharWidth,\n      this.options.unknownCharHeight\n    ] as [number, number];\n  }\n\n  /**\n   * @override\n   */\n  public nodeBBox(_node: LiteElement) {\n    return {left: 0, right: 0, top: 0, bottom: 0};\n  }\n}\n\n/************************************************************/\n/**\n * The function to call to obtain a LiteAdaptor\n *\n * @param {OptionList} options  The options for the adaptor\n * @return {LiteAdaptor}        The newly created adaptor\n */\nexport function liteAdaptor(options: OptionList = null): LiteAdaptor {\n  return new LiteAdaptor(options);\n}\n"]},"metadata":{},"sourceType":"script"}