{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmlabeledtr = exports.SVGmtr = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar mtr_js_1 = require(\"../../common/Wrappers/mtr.js\");\n\nvar mtr_js_2 = require(\"../../common/Wrappers/mtr.js\");\n\nvar mtr_js_3 = require(\"../../../core/MmlTree/MmlNodes/mtr.js\");\n\nvar SVGmtr = function (_super) {\n  __extends(SVGmtr, _super);\n\n  function SVGmtr() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmtr.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    this.placeCells(svg);\n    this.placeColor();\n  };\n\n  SVGmtr.prototype.placeCells = function (svg) {\n    var cSpace = this.parent.getColumnHalfSpacing();\n\n    var cLines = __spreadArray(__spreadArray([this.parent.fLine], __read(this.parent.cLines)), [this.parent.fLine]);\n\n    var cWidth = this.parent.getComputedWidths();\n    var scale = 1 / this.getBBox().rscale;\n    var x = cLines[0];\n\n    for (var i = 0; i < this.numCells; i++) {\n      var child = this.getChild(i);\n      child.toSVG(svg);\n      x += this.placeCell(child, {\n        x: x,\n        y: 0,\n        lSpace: cSpace[i] * scale,\n        rSpace: cSpace[i + 1] * scale,\n        w: cWidth[i] * scale,\n        lLine: cLines[i] * scale,\n        rLine: cLines[i + 1] * scale\n      });\n    }\n  };\n\n  SVGmtr.prototype.placeCell = function (cell, sizes) {\n    var x = sizes.x,\n        y = sizes.y,\n        lSpace = sizes.lSpace,\n        w = sizes.w,\n        rSpace = sizes.rSpace,\n        lLine = sizes.lLine,\n        rLine = sizes.rLine;\n    var scale = 1 / this.getBBox().rscale;\n\n    var _a = __read([this.H * scale, this.D * scale], 2),\n        h = _a[0],\n        d = _a[1];\n\n    var _b = __read([this.tSpace * scale, this.bSpace * scale], 2),\n        t = _b[0],\n        b = _b[1];\n\n    var _c = __read(cell.placeCell(x + lSpace, y, w, h, d), 2),\n        dx = _c[0],\n        dy = _c[1];\n\n    var W = lSpace + w + rSpace;\n    cell.placeColor(-(dx + lSpace + lLine / 2), -(d + b + dy), W + (lLine + rLine) / 2, h + d + t + b);\n    return W + rLine;\n  };\n\n  SVGmtr.prototype.placeColor = function () {\n    var scale = 1 / this.getBBox().rscale;\n    var adaptor = this.adaptor;\n    var child = this.firstChild();\n\n    if (child && adaptor.kind(child) === 'rect' && adaptor.getAttribute(child, 'data-bgcolor')) {\n      var _a = __read([this.tLine / 2 * scale, this.bLine / 2 * scale], 2),\n          TL = _a[0],\n          BL = _a[1];\n\n      var _b = __read([this.tSpace * scale, this.bSpace * scale], 2),\n          TS = _b[0],\n          BS = _b[1];\n\n      var _c = __read([this.H * scale, this.D * scale], 2),\n          H = _c[0],\n          D = _c[1];\n\n      adaptor.setAttribute(child, 'y', this.fixed(-(D + BS + BL)));\n      adaptor.setAttribute(child, 'width', this.fixed(this.parent.getWidth() * scale));\n      adaptor.setAttribute(child, 'height', this.fixed(TL + TS + H + D + BS + BL));\n    }\n  };\n\n  SVGmtr.kind = mtr_js_3.MmlMtr.prototype.kind;\n  return SVGmtr;\n}(mtr_js_1.CommonMtrMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmtr = SVGmtr;\n\nvar SVGmlabeledtr = function (_super) {\n  __extends(SVGmlabeledtr, _super);\n\n  function SVGmlabeledtr() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmlabeledtr.prototype.toSVG = function (parent) {\n    _super.prototype.toSVG.call(this, parent);\n\n    var child = this.childNodes[0];\n\n    if (child) {\n      child.toSVG(this.parent.labels);\n    }\n  };\n\n  SVGmlabeledtr.kind = mtr_js_3.MmlMlabeledtr.prototype.kind;\n  return SVGmlabeledtr;\n}(mtr_js_2.CommonMlabeledtrMixin(SVGmtr));\n\nexports.SVGmlabeledtr = SVGmlabeledtr;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/output/svg/Wrappers/mtr.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmtr wrapper for the MmlMtr object\n *                and SVGmlabeledtr for MmlMlabeledtr\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMtrMixin} from '../../common/Wrappers/mtr.js';\nimport {CommonMlabeledtrMixin} from '../../common/Wrappers/mtr.js';\nimport {SVGmtd} from './mtd.js';\nimport {MmlMtr, MmlMlabeledtr} from '../../../core/MmlTree/MmlNodes/mtr.js';\n\n\n/**\n * The data needed for placeCell()\n */\nexport type SizeData = {\n  x: number,\n  y: number,\n  w: number,\n  lSpace: number,\n  rSpace: number,\n  lLine: number,\n  rLine: number\n};\n\n/*****************************************************************/\n/**\n * The SVGmtr wrapper for the MmlMtr object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmtr<N, T, D> extends\nCommonMtrMixin<SVGmtd<any, any, any>, SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mtr wrapper\n   */\n  public static kind = MmlMtr.prototype.kind;\n\n  /**\n   * The height of the row\n   */\n  public H: number;\n  /**\n   * The depth of the row\n   */\n  public D: number;\n  /**\n   * The space above the row\n   */\n  public tSpace: number;\n  /**\n   * The space below the row\n   */\n  public bSpace: number;\n  /**\n   * The line space above the row\n   */\n  public tLine: number;\n  /**\n   * The line space below the row\n   */\n  public bLine: number;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    this.placeCells(svg);\n    this.placeColor();\n  }\n\n  /**\n   * Set the location of the cell contents in the row and expand the cell background colors\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected placeCells(svg: N) {\n    const cSpace = this.parent.getColumnHalfSpacing();\n    const cLines = [this.parent.fLine, ...this.parent.cLines, this.parent.fLine];\n    const cWidth = this.parent.getComputedWidths();\n    const scale = 1 / this.getBBox().rscale;\n    let x = cLines[0];\n    for (let i = 0; i < this.numCells; i++) {\n      const child = this.getChild(i);\n      child.toSVG(svg);\n      x += this.placeCell(child, {\n        x: x, y: 0, lSpace: cSpace[i] * scale, rSpace: cSpace[i + 1] * scale, w: cWidth[i] * scale,\n        lLine: cLines[i] * scale, rLine: cLines[i + 1] * scale\n      });\n    }\n  }\n\n  /**\n   * @param {SVGmtd} cell      The cell to place\n   * @param {SizeData} sizes   The positioning information\n   * @return {number}          The new x position\n   */\n  public placeCell(cell: SVGmtd<N, T, D>, sizes: SizeData): number {\n    const {x, y, lSpace, w, rSpace, lLine, rLine} = sizes;\n    const scale = 1 / this.getBBox().rscale;\n    const [h, d] = [this.H * scale, this.D * scale];\n    const [t, b] = [this.tSpace * scale, this.bSpace * scale];\n    const [dx, dy] = cell.placeCell(x + lSpace, y, w, h, d);\n    const W = lSpace + w + rSpace;\n    cell.placeColor(-(dx + lSpace + lLine / 2), -(d + b + dy), W + (lLine + rLine) / 2, h + d + t + b);\n    return W + rLine;\n  }\n\n  /**\n   * Expand the backgound color to fill the entire row\n   */\n  protected placeColor() {\n    const scale = 1 / this.getBBox().rscale;\n    const adaptor = this.adaptor;\n    const child = this.firstChild();\n    if (child && adaptor.kind(child) === 'rect' && adaptor.getAttribute(child, 'data-bgcolor')) {\n      const [TL, BL] = [(this.tLine / 2) * scale, (this.bLine / 2) * scale];\n      const [TS, BS] = [this.tSpace * scale, this.bSpace * scale];\n      const [H, D] = [this.H * scale, this.D * scale];\n      adaptor.setAttribute(child, 'y', this.fixed(-(D + BS + BL)));\n      adaptor.setAttribute(child, 'width', this.fixed(this.parent.getWidth() * scale));\n      adaptor.setAttribute(child, 'height', this.fixed(TL + TS + H + D + BS + BL));\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The SVGlabeledmtr wrapper for the MmlMlabeledtr object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmlabeledtr<N, T, D> extends\nCommonMlabeledtrMixin<SVGmtd<any, any, any>, Constructor<SVGmtr<any, any, any>>>(SVGmtr) {\n\n  /**\n   * The mlabeledtr wrapper\n   */\n  public static kind = MmlMlabeledtr.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    super.toSVG(parent);\n    const child = this.childNodes[0];\n    if (child) {\n      child.toSVG(this.parent.labels);\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}