{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMmultiscriptsMixin = exports.ScriptNames = exports.NextScript = void 0;\n\nvar BBox_js_1 = require(\"../../../util/BBox.js\");\n\nexports.NextScript = {\n  base: 'subList',\n  subList: 'supList',\n  supList: 'subList',\n  psubList: 'psupList',\n  psupList: 'psubList'\n};\nexports.ScriptNames = ['sup', 'sup', 'psup', 'psub'];\n\nfunction CommonMmultiscriptsMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spreadArray([], __read(args))) || this;\n\n      _this.scriptData = null;\n      _this.firstPrescript = 0;\n\n      _this.getScriptData();\n\n      return _this;\n    }\n\n    class_1.prototype.combinePrePost = function (pre, post) {\n      var bbox = new BBox_js_1.BBox(pre);\n      bbox.combine(post, 0, 0);\n      return bbox;\n    };\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      var scriptspace = this.font.params.scriptspace;\n      var data = this.scriptData;\n      var sub = this.combinePrePost(data.sub, data.psub);\n      var sup = this.combinePrePost(data.sup, data.psup);\n\n      var _a = __read(this.getUVQ(sub, sup), 2),\n          u = _a[0],\n          v = _a[1];\n\n      bbox.empty();\n\n      if (data.numPrescripts) {\n        bbox.combine(data.psup, scriptspace, u);\n        bbox.combine(data.psub, scriptspace, v);\n      }\n\n      bbox.append(data.base);\n\n      if (data.numScripts) {\n        var w = bbox.w;\n        bbox.combine(data.sup, w, u);\n        bbox.combine(data.sub, w, v);\n        bbox.w += scriptspace;\n      }\n\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    };\n\n    class_1.prototype.getScriptData = function () {\n      var data = this.scriptData = {\n        base: null,\n        sub: BBox_js_1.BBox.empty(),\n        sup: BBox_js_1.BBox.empty(),\n        psub: BBox_js_1.BBox.empty(),\n        psup: BBox_js_1.BBox.empty(),\n        numPrescripts: 0,\n        numScripts: 0\n      };\n      var lists = this.getScriptBBoxLists();\n      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);\n      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);\n      data.base = lists.base[0];\n      data.numPrescripts = lists.psubList.length;\n      data.numScripts = lists.subList.length;\n    };\n\n    class_1.prototype.getScriptBBoxLists = function () {\n      var e_1, _a;\n\n      var lists = {\n        base: [],\n        subList: [],\n        supList: [],\n        psubList: [],\n        psupList: []\n      };\n      var script = 'base';\n\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (child.node.isKind('mprescripts')) {\n            script = 'psubList';\n          } else {\n            lists[script].push(child.getBBox());\n            script = exports.NextScript[script];\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      this.firstPrescript = lists.subList.length + lists.supList.length + 2;\n      this.padLists(lists.subList, lists.supList);\n      this.padLists(lists.psubList, lists.psupList);\n      return lists;\n    };\n\n    class_1.prototype.padLists = function (list1, list2) {\n      if (list1.length > list2.length) {\n        list2.push(BBox_js_1.BBox.empty());\n      }\n    };\n\n    class_1.prototype.combineBBoxLists = function (bbox1, bbox2, list1, list2) {\n      for (var i = 0; i < list1.length; i++) {\n        var _a = __read(this.getScaledWHD(list1[i]), 3),\n            w1 = _a[0],\n            h1 = _a[1],\n            d1 = _a[2];\n\n        var _b = __read(this.getScaledWHD(list2[i]), 3),\n            w2 = _b[0],\n            h2 = _b[1],\n            d2 = _b[2];\n\n        var w = Math.max(w1, w2);\n        bbox1.w += w;\n        bbox2.w += w;\n        if (h1 > bbox1.h) bbox1.h = h1;\n        if (d1 > bbox1.d) bbox1.d = d1;\n        if (h2 > bbox2.h) bbox2.h = h2;\n        if (d2 > bbox2.d) bbox2.d = d2;\n      }\n    };\n\n    class_1.prototype.getScaledWHD = function (bbox) {\n      var w = bbox.w,\n          h = bbox.h,\n          d = bbox.d,\n          rscale = bbox.rscale;\n      return [w * rscale, h * rscale, d * rscale];\n    };\n\n    class_1.prototype.getUVQ = function (subbox, supbox) {\n      var _a;\n\n      if (!this.UVQ) {\n        var _b = __read([0, 0, 0], 3),\n            u = _b[0],\n            v = _b[1],\n            q = _b[2];\n\n        if (subbox.h === 0 && subbox.d === 0) {\n          u = this.getU();\n        } else if (supbox.h === 0 && supbox.d === 0) {\n          u = -this.getV();\n        } else {\n          _a = __read(_super.prototype.getUVQ.call(this, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];\n        }\n\n        this.UVQ = [u, v, q];\n      }\n\n      return this.UVQ;\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/output/common/Wrappers/mmultiscripts.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, Constructor} from '../Wrapper.js';\nimport {CommonMsubsup, MsubsupConstructor} from './msubsup.js';\nimport {BBox} from '../../../util/BBox.js';\n\n/*****************************************************************/\n\n/**\n * The data about the scripts and base\n */\nexport type ScriptData = {\n  base: BBox;\n  sub: BBox;   // combined bbox for all subscripts\n  sup: BBox;   // combined bbox for all superscripts\n  psub: BBox;  // combined bbox for all presubscripts\n  psup: BBox;  // combined bbox for all presuperscripts\n  numPrescripts: number;\n  numScripts: number;\n};\nexport type ScriptDataName = keyof ScriptData;\n\n/**\n * The lists of all the individual script bboxes\n */\nexport type ScriptLists = {\n  base: BBox[];\n  subList: BBox[];\n  supList: BBox[];\n  psubList: BBox[];\n  psupList: BBox[];\n};\nexport type ScriptListName = keyof ScriptLists;\n\n/**\n * The type of script that follows the given type\n */\nexport const NextScript: {[key: string]: ScriptListName} = {\n  base: 'subList',\n  subList: 'supList',\n  supList: 'subList',\n  psubList: 'psupList',\n  psupList: 'psubList',\n};\n\n/**\n * The names of the scripts (for looping)\n */\nexport const ScriptNames = ['sup', 'sup', 'psup', 'psub'] as ScriptDataName[];\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts interface\n *\n * @template W  The child-node Wrapper class\n */\nexport interface CommonMmultiscripts<W extends AnyWrapper> extends CommonMsubsup<W> {\n\n  /**\n   *  The cached data for the various bounding boxes\n   */\n  scriptData: ScriptData;\n\n  /**\n   *  The index of the child following the <mprescripts/> tag\n   */\n  firstPrescript: number;\n\n  /**\n   * @param {BBox} pre   The prescript bounding box\n   * @param {BBox} post  The postcript bounding box\n   * @return {BBox}      The combined bounding box\n   */\n  combinePrePost(pre: BBox, post: BBox): BBox;\n\n  /**\n   * Compute the bounding box information about all the scripts\n   */\n  getScriptData(): void;\n\n  /**\n   * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n   */\n  getScriptBBoxLists(): ScriptLists;\n\n  /**\n   * Pad the second list, if it is one short\n   *\n   * @param {BBox[]} list1   The first list\n   * @param {BBox[]} list2   The second list\n   */\n  padLists(list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox1    The bbox for the combined subscripts\n   * @param {BBox} bbox2    The bbox for the combined superscripts\n   * @param {BBox[]} list1  The list of subscripts to combine\n   * @param {BBox[]} list2  The list of superscripts to combine\n   */\n  combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]): void;\n\n  /**\n   * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n   */\n  getScaledWHD(bbox: BBox): void;\n\n}\n\n/**\n * Shorthand for the CommonMmultiscripts constructor\n *\n * @template W  The child-node Wrapper class\n */\nexport type MmultiscriptsConstructor<W extends AnyWrapper> = Constructor<CommonMmultiscripts<W>>;\n\n/*****************************************************************/\n/**\n * The CommonMmultiscripts wrapper mixin for the MmlMmultiscripts object\n *\n * @template W  The child-node Wrapper class\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMmultiscriptsMixin<\n  W extends AnyWrapper,\n  T extends MsubsupConstructor<W>\n>(Base: T): MmultiscriptsConstructor<W> & T {\n\n  return class extends Base {\n\n    /**\n     *  The cached data for the various bounding boxes\n     */\n    public scriptData: ScriptData = null;\n\n    /**\n     *  The index of the child following the <mprescripts/> tag\n     */\n    public firstPrescript = 0;\n\n    /**\n     * @override\n     */\n    constructor(...args: any[]) {\n      super(...args);\n      this.getScriptData();\n    }\n\n    /*************************************************************/\n\n    /**\n     * @param {BBox} pre   The prescript bounding box\n     * @param {BBox} post  The postcript bounding box\n     * @return {BBox}      The combined bounding box\n     */\n    public combinePrePost(pre: BBox, post: BBox): BBox {\n      const bbox = new BBox(pre);\n      bbox.combine(post, 0, 0);\n      return bbox;\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      //\n      // Get the bounding boxes, and combine the pre- and post-scripts\n      //  to get a common offset for both\n      //\n      const scriptspace = this.font.params.scriptspace;\n      const data = this.scriptData;\n      const sub = this.combinePrePost(data.sub, data.psub);\n      const sup = this.combinePrePost(data.sup, data.psup);\n      const [u, v] = this.getUVQ(sub, sup);\n      //\n      //  Lay out the pre-scripts, then the base, then the post-scripts\n      //\n      bbox.empty();\n      if (data.numPrescripts) {\n        bbox.combine(data.psup, scriptspace, u);\n        bbox.combine(data.psub, scriptspace, v);\n      }\n      bbox.append(data.base);\n      if (data.numScripts) {\n        const w = bbox.w;\n        bbox.combine(data.sup, w, u);\n        bbox.combine(data.sub, w, v);\n        bbox.w += scriptspace;\n      }\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    }\n\n    /**\n     * Compute the bounding box information about all the scripts\n     */\n    public getScriptData() {\n      //\n      //  Initialize the bounding box data\n      //\n      const data: ScriptData = this.scriptData = {\n        base: null, sub: BBox.empty(), sup: BBox.empty(), psub: BBox.empty(), psup: BBox.empty(),\n        numPrescripts: 0, numScripts: 0\n      };\n      //\n      //  Get the bboxes for all the scripts and combine them into the scriptData\n      //\n      const lists = this.getScriptBBoxLists();\n      this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);\n      this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);\n      data.base = lists.base[0];\n      //\n      //  Save the lengths and return the data\n      //\n      data.numPrescripts = lists.psubList.length;\n      data.numScripts = lists.subList.length;\n    }\n\n    /**\n     * @return {ScriptLists}  The bounding boxes for all the scripts divided into lists by position\n     */\n    public getScriptBBoxLists(): ScriptLists {\n      const lists: ScriptLists = {\n        base: [], subList: [], supList: [], psubList: [], psupList: []\n      };\n      //\n      // The first entry is the base, and then they altername sub- and superscripts.\n      // Once we find the <mprescripts/> element, switch to presub- and presuperscript lists.\n      //\n      let script: ScriptListName = 'base';\n      for (const child of this.childNodes) {\n        if (child.node.isKind('mprescripts')) {\n          script = 'psubList';\n        } else {\n          lists[script].push(child.getBBox());\n          script = NextScript[script];\n        }\n      }\n      //\n      //  The index of the first prescript (skip over base, sub- and superscripts, and mprescripts)\n      //\n      this.firstPrescript = lists.subList.length + lists.supList.length + 2;\n      //\n      //  Make sure the lists are the same length\n      //\n      this.padLists(lists.subList, lists.supList);\n      this.padLists(lists.psubList, lists.psupList);\n      return lists;\n    }\n\n    /**\n     * Pad the second list, if it is one short\n     *\n     * @param {BBox[]} list1   The first list\n     * @param {BBox[]} list2   The second list\n     */\n    public padLists(list1: BBox[], list2: BBox[]) {\n      if (list1.length > list2.length) {\n        list2.push(BBox.empty());\n      }\n    }\n\n    /**\n     * @param {BBox} bbox1    The bbox for the combined subscripts\n     * @param {BBox} bbox2    The bbox for the combined superscripts\n     * @param {BBox[]} list1  The list of subscripts to combine\n     * @param {BBox[]} list2  The list of superscripts to combine\n     */\n    public combineBBoxLists(bbox1: BBox, bbox2: BBox, list1: BBox[], list2: BBox[]) {\n      for (let i = 0; i < list1.length; i++) {\n        const [w1, h1, d1] = this.getScaledWHD(list1[i]);\n        const [w2, h2, d2] = this.getScaledWHD(list2[i]);\n        const w = Math.max(w1, w2);\n        bbox1.w += w;\n        bbox2.w += w;\n        if (h1 > bbox1.h) bbox1.h = h1;\n        if (d1 > bbox1.d) bbox1.d = d1;\n        if (h2 > bbox2.h) bbox2.h = h2;\n        if (d2 > bbox2.d) bbox2.d = d2;\n      }\n    }\n\n    /**\n     * @param {BBox} bbox  The bounding box from which to get the (scaled) width, height, and depth\n     */\n    public getScaledWHD(bbox: BBox) {\n      const {w, h, d, rscale} = bbox;\n      return [w * rscale, h * rscale, d * rscale];\n    }\n\n    /*************************************************************/\n\n    /**\n     * @override\n     */\n    public getUVQ(subbox: BBox, supbox: BBox) {\n      if (!this.UVQ) {\n        let [u, v, q] = [0, 0, 0];\n        if (subbox.h === 0 && subbox.d === 0) {\n          //\n          //  Use placement for superscript only\n          //\n          u = this.getU();\n        } else if (supbox.h === 0 && supbox.d === 0) {\n          //\n          //  Use placement for subsccript only\n          //\n          u = -this.getV();\n        } else {\n          //\n          //  Use placement for both\n          //\n          [u, v, q] = super.getUVQ(subbox, supbox);\n        }\n        this.UVQ = [u, v, q];\n      }\n      return this.UVQ;\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}