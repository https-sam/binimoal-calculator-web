{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMpaddedMixin = void 0;\n\nfunction CommonMpaddedMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.getDimens = function () {\n      var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');\n      var bbox = this.childNodes[0].getBBox();\n      var w = bbox.w,\n          h = bbox.h,\n          d = bbox.d;\n      var W = w,\n          H = h,\n          D = d,\n          x = 0,\n          y = 0,\n          dx = 0;\n      if (values.width !== '') w = this.dimen(values.width, bbox, 'w', 0);\n      if (values.height !== '') h = this.dimen(values.height, bbox, 'h', 0);\n      if (values.depth !== '') d = this.dimen(values.depth, bbox, 'd', 0);\n      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);\n      if (values.lspace !== '') x = this.dimen(values.lspace, bbox);\n      var align = this.node.attributes.get('data-align');\n\n      if (align) {\n        dx = this.getAlignX(w, bbox, align);\n      }\n\n      return [H, D, W, h - H, d - D, w - W, x, y, dx];\n    };\n\n    class_1.prototype.dimen = function (length, bbox, d, m) {\n      if (d === void 0) {\n        d = '';\n      }\n\n      if (m === void 0) {\n        m = null;\n      }\n\n      length = String(length);\n      var match = length.match(/width|height|depth/);\n      var size = match ? bbox[match[0].charAt(0)] : d ? bbox[d] : 0;\n      var dimen = this.length2em(length, size) || 0;\n\n      if (length.match(/^[-+]/) && d) {\n        dimen += size;\n      }\n\n      if (m != null) {\n        dimen = Math.max(m, dimen);\n      }\n\n      return dimen;\n    };\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      var _a = __read(this.getDimens(), 6),\n          H = _a[0],\n          D = _a[1],\n          W = _a[2],\n          dh = _a[3],\n          dd = _a[4],\n          dw = _a[5];\n\n      bbox.w = W + dw;\n      bbox.h = H + dh;\n      bbox.d = D + dd;\n      this.setChildPWidths(recompute, bbox.w);\n    };\n\n    class_1.prototype.getWrapWidth = function (_i) {\n      return this.getBBox().w;\n    };\n\n    class_1.prototype.getChildAlign = function (_i) {\n      return this.node.attributes.get('data-align') || 'left';\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMpaddedMixin = CommonMpaddedMixin;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/output/common/Wrappers/mpadded.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMpadded wrapper mixin for the MmlMpadded object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {Property} from '../../../core/Tree/Node.js';\n\n/*****************************************************************/\n/**\n * The CommonMpadded interface\n */\nexport interface CommonMpadded extends AnyWrapper {\n  /**\n   * Get the content bounding box, and the change in size and offsets\n   *   as specified by the parameters\n   *\n   * @return {number[]}  The original height, depth, width, the changes in height, depth,\n   *                    and width, and the horizontal and vertical offsets of the content\n   */\n  getDimens(): number[];\n\n  /**\n   * Get a particular dimension, which can be relative to any of the BBox dimensions,\n   *   and can be an offset from the default size of the given dimension.\n   *\n   * @param {Property} length   The value to be converted to a length in ems\n   * @param {BBox} bbox         The bbox of the mpadded content\n   * @param {string=} d         The default dimension to use for relative sizes ('w', 'h', or 'd')\n   * @param {number=} m         The minimum value allowed for the dimension\n   * @return {number}           The final dimension in ems\n   */\n  dimen(length: Property, bbox: BBox, d?: string, m?: number): number;\n}\n\n/**\n * Shorthand for the CommonMpadded constructor\n */\nexport type MpaddedConstructor = Constructor<CommonMpadded>;\n\n/*****************************************************************/\n/**\n * The CommomMpadded wrapper for the MmlMpadded object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMpaddedMixin<T extends WrapperConstructor>(Base: T): MpaddedConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * Get the content bounding box, and the change in size and offsets\n     *   as specified by the parameters\n     *\n     * @return {number[]}  The original height, depth, width, the changes in height, depth,\n     *                    and width, and the horizontal and vertical offsets of the content\n     */\n    public getDimens(): number[] {\n      const values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');\n      const bbox = this.childNodes[0].getBBox();  // get unmodified bbox of children\n      let {w, h, d} = bbox;\n      let W = w, H = h, D = d, x = 0, y = 0, dx = 0;\n      if (values.width !== '')   w = this.dimen(values.width, bbox, 'w', 0);\n      if (values.height !== '')  h = this.dimen(values.height, bbox, 'h', 0);\n      if (values.depth !== '')   d = this.dimen(values.depth, bbox, 'd', 0);\n      if (values.voffset !== '') y = this.dimen(values.voffset, bbox);\n      if (values.lspace !== '')  x = this.dimen(values.lspace, bbox);\n      const align = this.node.attributes.get('data-align') as string;\n      if (align) {\n        dx = this.getAlignX(w, bbox, align);\n      }\n      return [H, D, W, h - H, d - D, w - W, x, y, dx];\n    }\n\n    /**\n     * Get a particular dimension, which can be relative to any of the BBox dimensions,\n     *   and can be an offset from the default size of the given dimension.\n     *\n     * @param {Property} length   The value to be converted to a length in ems\n     * @param {BBox} bbox         The bbox of the mpadded content\n     * @param {string} d          The default dimension to use for relative sizes ('w', 'h', or 'd')\n     * @param {number} m          The minimum value allowed for the dimension\n     * @return {number}           The final dimension in ems\n     */\n    public dimen(length: Property, bbox: BBox, d: string = '', m: number = null): number {\n      length = String(length);\n      const match = length.match(/width|height|depth/);\n      const size = (match ? bbox[match[0].charAt(0) as (keyof BBox)] :\n                    (d ? bbox[d as (keyof BBox)] : 0)) as number;\n      let dimen = (this.length2em(length, size) || 0);\n      if (length.match(/^[-+]/) && d) {\n        dimen += size;\n      }\n      if (m != null) {\n        dimen = Math.max(m, dimen);\n      }\n      return dimen;\n    }\n\n    /**\n     * @override\n     */\n    public computeBBox(bbox: BBox, recompute: boolean = false) {\n      const [H, D, W, dh, dd, dw] = this.getDimens();\n      bbox.w = W + dw;\n      bbox.h = H + dh;\n      bbox.d = D + dd;\n      this.setChildPWidths(recompute, bbox.w);\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_i: number) {\n      return this.getBBox().w;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(_i: number) {\n      return this.node.attributes.get('data-align') as string || 'left';\n    }\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}