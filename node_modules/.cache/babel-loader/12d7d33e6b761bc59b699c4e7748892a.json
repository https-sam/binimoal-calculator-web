{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BBox = exports.BBoxStyleAdjust = void 0;\n\nvar lengths_js_1 = require(\"./lengths.js\");\n\nexports.BBoxStyleAdjust = [['borderTopWidth', 'h'], ['borderRightWidth', 'w'], ['borderBottomWidth', 'd'], ['borderLeftWidth', 'w', 0], ['paddingTop', 'h'], ['paddingRight', 'w'], ['paddingBottom', 'd'], ['paddingLeft', 'w', 0]];\n\nvar BBox = function () {\n  function BBox(def) {\n    if (def === void 0) {\n      def = {\n        w: 0,\n        h: -lengths_js_1.BIGDIMEN,\n        d: -lengths_js_1.BIGDIMEN\n      };\n    }\n\n    this.w = def.w || 0;\n    this.h = 'h' in def ? def.h : -lengths_js_1.BIGDIMEN;\n    this.d = 'd' in def ? def.d : -lengths_js_1.BIGDIMEN;\n    this.L = this.R = this.ic = this.sk = this.dx = 0;\n    this.scale = this.rscale = 1;\n    this.pwidth = '';\n  }\n\n  BBox.zero = function () {\n    return new BBox({\n      h: 0,\n      d: 0,\n      w: 0\n    });\n  };\n\n  BBox.empty = function () {\n    return new BBox();\n  };\n\n  BBox.prototype.empty = function () {\n    this.w = 0;\n    this.h = this.d = -lengths_js_1.BIGDIMEN;\n    return this;\n  };\n\n  BBox.prototype.clean = function () {\n    if (this.w === -lengths_js_1.BIGDIMEN) this.w = 0;\n    if (this.h === -lengths_js_1.BIGDIMEN) this.h = 0;\n    if (this.d === -lengths_js_1.BIGDIMEN) this.d = 0;\n  };\n\n  BBox.prototype.rescale = function (scale) {\n    this.w *= scale;\n    this.h *= scale;\n    this.d *= scale;\n  };\n\n  BBox.prototype.combine = function (cbox, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    var rscale = cbox.rscale;\n    var w = x + rscale * (cbox.w + cbox.L + cbox.R);\n    var h = y + rscale * cbox.h;\n    var d = rscale * cbox.d - y;\n    if (w > this.w) this.w = w;\n    if (h > this.h) this.h = h;\n    if (d > this.d) this.d = d;\n  };\n\n  BBox.prototype.append = function (cbox) {\n    var scale = cbox.rscale;\n    this.w += scale * (cbox.w + cbox.L + cbox.R);\n\n    if (scale * cbox.h > this.h) {\n      this.h = scale * cbox.h;\n    }\n\n    if (scale * cbox.d > this.d) {\n      this.d = scale * cbox.d;\n    }\n  };\n\n  BBox.prototype.updateFrom = function (cbox) {\n    this.h = cbox.h;\n    this.d = cbox.d;\n    this.w = cbox.w;\n\n    if (cbox.pwidth) {\n      this.pwidth = cbox.pwidth;\n    }\n  };\n\n  BBox.fullWidth = '100%';\n  return BBox;\n}();\n\nexports.BBox = BBox;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/util/BBox.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements a bounding-box object and operations on it\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {BIGDIMEN} from './lengths.js';\n\n/**\n *  CSS styles that affect BBoxes\n */\nexport const BBoxStyleAdjust = [\n  ['borderTopWidth', 'h'],\n  ['borderRightWidth', 'w'],\n  ['borderBottomWidth', 'd'],\n  ['borderLeftWidth', 'w', 0],\n  ['paddingTop', 'h'],\n  ['paddingRight', 'w'],\n  ['paddingBottom', 'd'],\n  ['paddingLeft', 'w', 0]\n];\n\n/**\n *  The data used to initialize a BBox\n */\nexport type BBoxData = {\n  w?: number,\n  h?: number,\n  d?: number\n};\n\n/*****************************************************************/\n/**\n *  The BBox class\n */\n\nexport class BBox {\n  /**\n   * Constant for pwidth of full width box\n   */\n  public static fullWidth = '100%';\n\n  /**\n   *  These are the data stored for a bounding box\n   */\n  /* tslint:disable:jsdoc-require */\n  public w: number;\n  public h: number;\n  public d: number;\n  public scale: number;\n  public rscale: number; // scale relative to the parent's scale\n  public L: number;      // extra space on the left\n  public R: number;      // extra space on the right\n  public pwidth: string; // percentage width (for tables)\n  public ic: number;     // italic correction\n  public sk: number;     // skew\n  public dx: number;     // offset for combining characters as accents\n  /* tslint:enable */\n\n  /**\n   * @return {BBox}  A BBox initialized to zeros\n   */\n  public static zero(): BBox {\n    return new BBox({h: 0, d: 0, w: 0});\n  }\n\n  /**\n   * @return {BBox}  A BBox with height and depth not set\n   */\n  public static empty(): BBox {\n    return new BBox();\n  }\n\n  /**\n   * @param {BBoxData} def  The data with which to initialize the BBox\n   *\n   * @constructor\n   */\n  constructor(def: BBoxData = {w: 0, h: -BIGDIMEN, d: -BIGDIMEN}) {\n    this.w = def.w || 0;\n    this.h = ('h' in def ? def.h : -BIGDIMEN);\n    this.d = ('d' in def ? def.d : -BIGDIMEN);\n    this.L = this.R = this.ic = this.sk = this.dx = 0;\n    this.scale = this.rscale = 1;\n    this.pwidth = '';\n  }\n\n  /**\n   * Set up a bbox for append() and combine() operations\n   * @return {BBox}  the boox itself (for chaining calls)\n   */\n  public empty(): BBox {\n    this.w = 0;\n    this.h = this.d = -BIGDIMEN;\n    return this;\n  }\n\n  /**\n   * Convert any unspecified values into zeros\n   */\n  public clean () {\n    if (this.w === -BIGDIMEN) this.w = 0;\n    if (this.h === -BIGDIMEN) this.h = 0;\n    if (this.d === -BIGDIMEN) this.d = 0;\n  }\n\n  /**\n   * @param {number} scale  The scale to use to modify the bounding box size\n   */\n  public rescale(scale: number) {\n    this.w *= scale;\n    this.h *= scale;\n    this.d *= scale;\n  }\n\n  /**\n   * @param {BBox} cbox  A bounding to combine with this one\n   * @param {number} x   An x-offest for the child bounding box\n   * @param {number} y   A y-offset for the child bounding box\n   */\n  public combine(cbox: BBox, x: number = 0, y: number = 0) {\n    let rscale = cbox.rscale;\n    let w = x + rscale * (cbox.w + cbox.L + cbox.R);\n    let h = y + rscale * cbox.h;\n    let d = rscale * cbox.d - y;\n    if (w > this.w) this.w = w;\n    if (h > this.h) this.h = h;\n    if (d > this.d) this.d = d;\n  }\n\n  /**\n   * @param {BBox} cbox  A bounding box to be added to the right of this one\n   */\n  public append(cbox: BBox) {\n    let scale = cbox.rscale;\n    this.w += scale * (cbox.w + cbox.L + cbox.R);\n    if (scale * cbox.h > this.h) {\n      this.h = scale * cbox.h;\n    }\n    if (scale * cbox.d > this.d) {\n      this.d = scale * cbox.d;\n    }\n  }\n\n  /**\n   * @param {BBox} cbox  The bounding box to use to overwrite this one\n   */\n  public updateFrom(cbox: BBox) {\n    this.h = cbox.h;\n    this.d = cbox.d;\n    this.w = cbox.w;\n    if (cbox.pwidth) {\n      this.pwidth = cbox.pwidth;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}