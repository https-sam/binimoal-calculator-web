{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTMLHandler = void 0;\n\nvar Handler_js_1 = require(\"../../core/Handler.js\");\n\nvar HTMLDocument_js_1 = require(\"./HTMLDocument.js\");\n\nvar HTMLHandler = function (_super) {\n  __extends(HTMLHandler, _super);\n\n  function HTMLHandler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.documentClass = HTMLDocument_js_1.HTMLDocument;\n    return _this;\n  }\n\n  HTMLHandler.prototype.handlesDocument = function (document) {\n    var adaptor = this.adaptor;\n\n    if (typeof document === 'string') {\n      try {\n        document = adaptor.parse(document, 'text/html');\n      } catch (err) {}\n    }\n\n    if (document instanceof adaptor.window.Document || document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {\n      return true;\n    }\n\n    return false;\n  };\n\n  HTMLHandler.prototype.create = function (document, options) {\n    var adaptor = this.adaptor;\n\n    if (typeof document === 'string') {\n      document = adaptor.parse(document, 'text/html');\n    } else if (document instanceof adaptor.window.HTMLElement || document instanceof adaptor.window.DocumentFragment) {\n      var child = document;\n      document = adaptor.parse('', 'text/html');\n      adaptor.append(adaptor.body(document), child);\n    }\n\n    return _super.prototype.create.call(this, document, options);\n  };\n\n  return HTMLHandler;\n}(Handler_js_1.AbstractHandler);\n\nexports.HTMLHandler = HTMLHandler;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/handlers/html/HTMLHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,YAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAWA,IAAA,WAAA,GAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAA1C,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAUS,IAAA,KAAA,CAAA,aAAA,GAAgB,iBAAA,CAAA,YAAhB;;AAuCR;;AAlCQ,EAAA,WAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,QAAvB,EAAoC;AAClC,QAAM,OAAO,GAAG,KAAK,OAArB;;AACA,QAAI,OAAO,QAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAI;AACF,QAAA,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,QAAd,EAAwB,WAAxB,CAAX;AACD,OAFD,CAEE,OAAO,GAAP,EAAY,CAAE;AACjB;;AACD,QAAI,QAAQ,YAAY,OAAO,CAAC,MAAR,CAAe,QAAnC,IACA,QAAQ,YAAY,OAAO,CAAC,MAAR,CAAe,WADnC,IAEA,QAAQ,YAAY,OAAO,CAAC,MAAR,CAAe,gBAFvC,EAEyD;AACvD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAbM;;AAqBA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,QAAd,EAA6B,OAA7B,EAAgD;AAC9C,QAAM,OAAO,GAAG,KAAK,OAArB;;AACA,QAAI,OAAO,QAAP,KAAqB,QAAzB,EAAmC;AACjC,MAAA,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,QAAd,EAAwB,WAAxB,CAAX;AACD,KAFD,MAEO,IAAI,QAAQ,YAAY,OAAO,CAAC,MAAR,CAAe,WAAnC,IACA,QAAQ,YAAY,OAAO,CAAC,MAAR,CAAe,gBADvC,EACyD;AAC9D,UAAI,KAAK,GAAG,QAAZ;AACA,MAAA,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,EAAd,EAAkB,WAAlB,CAAX;AACA,MAAA,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,IAAR,CAAa,QAAb,CAAf,EAAuC,KAAvC;AACD;;AACD,WAAO,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,QAAb,EAAuB,OAAvB,CAAP;AACD,GAXM;;AAaT,SAAA,WAAA;AAAC,CAjDD,CAA0C,YAAA,CAAA,eAA1C,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the HTMLHandler class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractHandler} from '../../core/Handler.js';\nimport {MinHTMLAdaptor} from '../../adaptors/HTMLAdaptor.js';\nimport {HTMLDocument} from './HTMLDocument.js';\nimport {OptionList} from '../../util/Options.js';\n\n/*****************************************************************/\n/**\n *  Implements the HTMLHandler class (extends AbstractHandler)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class HTMLHandler<N, T, D> extends AbstractHandler<N, T, D> {\n\n  /**\n   * The DOMAdaptor for the document being handled\n   */\n  public adaptor: MinHTMLAdaptor<N, T, D>;  // declare a more specific adaptor type\n\n  /**\n   * @override\n   */\n  public documentClass = HTMLDocument;\n\n  /**\n   * @override\n   */\n  public handlesDocument(document: any) {\n    const adaptor = this.adaptor;\n    if (typeof(document) === 'string') {\n      try {\n        document = adaptor.parse(document, 'text/html');\n      } catch (err) {}\n    }\n    if (document instanceof adaptor.window.Document ||\n        document instanceof adaptor.window.HTMLElement ||\n        document instanceof adaptor.window.DocumentFragment) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * If the document isn't already a Document object, create one\n   * using the given data\n   *\n   * @override\n   */\n  public create(document: any, options: OptionList) {\n    const adaptor = this.adaptor;\n    if (typeof(document) === 'string') {\n      document = adaptor.parse(document, 'text/html');\n    } else if (document instanceof adaptor.window.HTMLElement ||\n               document instanceof adaptor.window.DocumentFragment) {\n      let child = document as N;\n      document = adaptor.parse('', 'text/html');\n      adaptor.append(adaptor.body(document), child);\n    }\n    return super.create(document, options) as HTMLDocument<N, T, D>;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}