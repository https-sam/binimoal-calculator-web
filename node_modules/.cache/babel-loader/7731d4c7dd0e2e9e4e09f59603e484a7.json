{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMtable = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar string_js_1 = require(\"../../../util/string.js\");\n\nvar MmlMtable = function (_super) {\n  __extends(MmlMtable, _super);\n\n  function MmlMtable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.properties = {\n      useHeight: true\n    };\n    _this.texclass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n\n  Object.defineProperty(MmlMtable.prototype, \"kind\", {\n    get: function () {\n      return 'mtable';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMtable.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n    var e_1, _a;\n\n    try {\n      for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {\n        var name_1 = indentAttributes_1_1.value;\n\n        if (attributes[name_1]) {\n          this.attributes.setInherited(name_1, attributes[name_1][1]);\n        }\n\n        if (this.attributes.getExplicit(name_1) !== undefined) {\n          delete this.attributes.getAllAttributes()[name_1];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n  };\n\n  MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {\n    var e_2, _a, e_3, _b;\n\n    try {\n      for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var child = _d.value;\n\n        if (!child.isKind('mtr')) {\n          this.replaceChild(this.factory.create('mtr'), child).appendChild(child);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    level = this.getProperty('scriptlevel') || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    var cramped = this.attributes.getExplicit('data-cramped');\n    var ralign = string_js_1.split(this.attributes.get('rowalign'));\n\n    try {\n      for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var child = _f.value;\n        attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n        child.setInheritedAttributes(attributes, display, level, !!cramped);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  MmlMtable.prototype.verifyChildren = function (options) {\n    var e_4, _a;\n\n    if (!options['fixMtables']) {\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (!child.isKind('mtr')) {\n            this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);\n          }\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    }\n\n    _super.prototype.verifyChildren.call(this, options);\n  };\n\n  MmlMtable.prototype.setTeXclass = function (prev) {\n    var e_5, _a;\n\n    this.getPrevClass(prev);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        child.setTeXclass(null);\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return this;\n  };\n\n  MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  });\n  return MmlMtable;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMtable = MmlMtable;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtable.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtable node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS, indentAttributes} from '../MmlNode.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtable node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtable extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    useHeight: true\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtable';\n  }\n\n  /**\n   * Linebreaks are allowed in tables\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    //\n    // Force inheritance of shift and align values (since they are needed to output tables with labels)\n    //   but make sure they are not given explicitly on the <mtable> tag.\n    //\n    for (const name of indentAttributes) {\n      if (attributes[name]) {\n        this.attributes.setInherited(name, attributes[name][1]);\n      }\n      if (this.attributes.getExplicit(name) !== undefined) {\n        delete (this.attributes.getAllAttributes())[name];\n      }\n    }\n    super.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n  /**\n   * Make sure all children are mtr or mlabeledtr nodes\n   * Inherit the table attributes, and set the display attribute based on the table's displaystyle attribute\n   * Reset the prime value to false\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, _prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtr')) {\n        this.replaceChild(this.factory.create('mtr'), child)\n          .appendChild(child);\n      }\n    }\n    level = this.getProperty('scriptlevel') as number || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;\n    const ralign = split(this.attributes.get('rowalign') as string);\n    for (const child of this.childNodes) {\n      attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n      child.setInheritedAttributes(attributes, display, level, !!cramped);\n    }\n  }\n\n  /**\n   * Check that children are mtr or mlabeledtr\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    if (!options['fixMtables']) {\n      for (const child of this.childNodes) {\n        if (!child.isKind('mtr')) {\n          this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}