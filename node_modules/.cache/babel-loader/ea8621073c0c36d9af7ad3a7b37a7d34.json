{"ast":null,"code":"function factrial(n) {\n  if (n === 0 || n === 1) return 1;else return n * factrial(n - 1);\n}\n\nfunction combination(n, r) {\n  return factrial(n) / (factrial(r) * factrial(n - r));\n}\n\nfunction coefficient(x, y, n, r) {\n  let ret = x * y * combination(n, r);\n  if (ret === 1) return ''; // if coefficient is 1 return nothing because we dont usually put 1 as coeffocient\n  else return ret;\n}\n\nexport function Binomial_Sigma(x, y, n) {\n  let x_co;\n  let y_co;\n  let x_coeffcient = [];\n  let y_coeffcient = [];\n  let coefficients = [];\n  let result = [];\n  let x_power = [];\n  let y_power = [];\n  let ans = '';\n  n = Number(n); // converts n to an integer\n\n  if (x === 0) {\n    y_co = Math.pow(y, n);\n    let yPower = 'y^{' + n + '}';\n    return y_co + yPower;\n  } else if (y === 0) {\n    x_co = Math.pow(x, n);\n    let xPower = 'x^{' + n + '}';\n    return x_co + xPower;\n  }\n\n  for (let j = 0; j < n + 1; j++) {\n    if (x !== 1) {\n      // x is not 1\n      x_co = Math.pow(x, n - j);\n      x_coeffcient.push(x_co);\n    } else {\n      x_coeffcient.push(1);\n    }\n\n    if (y !== 1) {\n      // y is not 1\n      y_co = Math.pow(y, j);\n      y_coeffcient.push(y_co);\n    } else {\n      y_coeffcient.push(1);\n    }\n\n    x_power.push(n - j);\n    y_power.push(j);\n    coefficients.push(coefficient(x_coeffcient[j], y_coeffcient[j], n, j));\n  }\n\n  for (let i = 0; i < y_power.length; i++) {\n    // convert it to latex syntax\n    let term, x, y;\n    if (x_power[i] === 0) x = \"\";else if (x_power[i] === 1) x = \"x\";else x = \"x^\" + '{' + x_power[i] + '}';\n    if (y_power[i] === 0) y = \"\";else if (y_power[i] === 1) y = \"y\";else y = \"y^\" + '{' + y_power[i] + '}';\n    let Coefficient = coefficient(x_coeffcient[i], y_coeffcient[i], n, i); // caluclates coefficient. Could use toFixed(0) but need to consoder a case where coefficient is ''\n\n    let operator = '';\n    if (Coefficient > 1) operator = '+'; // for positive values, use +\n\n    if (i === 0) {\n      // first term \n      if (operator === '+') operator = '';\n      result.push(operator + Coefficient + x);\n    } else if (i === y_power.length - 1) {\n      // last term\n      result.push(operator + Coefficient + y);\n    } else {\n      // terms in the middle\n      result.push(operator + Coefficient + x + y);\n    }\n\n    ans += result[i];\n  }\n\n  return ans;\n}\n_c = Binomial_Sigma;\n\nvar _c;\n\n$RefreshReg$(_c, \"Binomial_Sigma\");","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/Calculate.js"],"names":["factrial","n","combination","r","coefficient","x","y","ret","Binomial_Sigma","x_co","y_co","x_coeffcient","y_coeffcient","coefficients","result","x_power","y_power","ans","Number","Math","pow","yPower","xPower","j","push","i","length","term","Coefficient","operator"],"mappings":"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","sourcesContent":["\n\nfunction factrial(n) {\n\n    if (n === 0 || n === 1)\n         return 1;\n    else\n        return n * factrial(n - 1);\n }\n \n \n function combination(n, r) {\n     return factrial(n) / (factrial(r) * factrial(n-r));\n }\n \nfunction coefficient(x, y, n, r) {\n    let ret = x * y * combination(n, r);\n\n    if(ret === 1) return ''; // if coefficient is 1 return nothing because we dont usually put 1 as coeffocient\n\n    else\n    return ret;\n }\n \n \n export function Binomial_Sigma(x, y, n) {\n     let x_co;\n     let y_co;\n     let x_coeffcient = [];\n     let y_coeffcient = [];\n     let coefficients = [];\n     let result = [];\n     let x_power = [];\n     let y_power = [];\n     let ans = '';\n\n\n     n = Number(n); // converts n to an integer\n\n     if(x === 0) {\n        y_co = Math.pow(y, n);\n        let yPower = 'y^{' + n + '}';\n        return y_co + yPower;\n     }\n\n     else if(y === 0) {\n        x_co = Math.pow(x, n);\n        let xPower = 'x^{' + n + '}';\n        return x_co + xPower;\n     }\n    \n     for (let j = 0; j < n+1; j++) \n     {\n         if(x !== 1) { // x is not 1\n             x_co = Math.pow(x, n-j);\n             x_coeffcient.push(x_co);\n         }\n         else {\n             x_coeffcient.push(1);\n         }\n         if(y !== 1) { // y is not 1\n             y_co = Math.pow(y, j);\n             y_coeffcient.push(y_co);\n         }\n         else {\n             y_coeffcient.push(1);\n         }\n         x_power.push(n-j);\n         y_power.push(j);\n         coefficients.push(coefficient(x_coeffcient[j], y_coeffcient[j], n, j));\n     }\n\n\n     for (let i = 0; i < y_power.length; i++) { // convert it to latex syntax\n        let term, x, y;\n        if(x_power[i] === 0) x = \"\";\n        else if(x_power[i] === 1) x = \"x\";\n        else x = \"x^\" + '{' + x_power[i] + '}';\n        if(y_power[i] === 0) y = \"\";\n        else if(y_power[i] === 1) y = \"y\";\n        else y = \"y^\"+ '{' + y_power[i] + '}';\n        let Coefficient = coefficient(x_coeffcient[i], y_coeffcient[i], n, i); // caluclates coefficient. Could use toFixed(0) but need to consoder a case where coefficient is ''\n        let operator = '';\n        if(Coefficient > 1) operator = '+'; // for positive values, use +\n\n\n        if(i === 0) { // first term \n            if(operator === '+') operator = '';\n            result.push(operator + Coefficient + x);\n        }\n\n        else if(i === y_power.length-1) { // last term\n            result.push(operator + Coefficient + y);\n        }\n        else { // terms in the middle\n            result.push(operator + Coefficient + x + y);\n        }\n        ans += result[i];\n    }\n    return ans;\n }\n "]},"metadata":{},"sourceType":"module"}