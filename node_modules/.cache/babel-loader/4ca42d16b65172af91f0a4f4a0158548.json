{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMtdMixin = void 0;\n\nfunction CommonMtdMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Object.defineProperty(class_1.prototype, \"fixesPWidth\", {\n      get: function () {\n        return false;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    class_1.prototype.invalidateBBox = function () {\n      this.bboxComputed = false;\n    };\n\n    class_1.prototype.getWrapWidth = function (_j) {\n      var table = this.parent.parent;\n      var row = this.parent;\n      var i = this.node.childPosition() - (row.labeled ? 1 : 0);\n      return typeof table.cWidths[i] === 'number' ? table.cWidths[i] : table.getTableData().W[i];\n    };\n\n    class_1.prototype.getChildAlign = function (_i) {\n      return this.node.attributes.get('columnalign');\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMtdMixin = CommonMtdMixin;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/output/common/Wrappers/mtd.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SAAgB,cAAhB,CAA6D,IAA7D,EAAoE;AAElE,SAAA,UAAA,MAAA,EAAA;AAAqB,IAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAd,aAAA,OAAA,GAAA;;AAiCN;;AA5BC,IAAA,MAAA,CAAA,cAAA,CAAI,OAAA,CAAA,SAAJ,EAAI,aAAJ,EAAe;WAAf,YAAA;AACE,eAAO,KAAP;AACD,OAFc;uBAAA;;AAAA,KAAf;;AAOO,IAAA,OAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;AACE,WAAK,YAAL,GAAoB,KAApB;AACD,KAFM;;AAOA,IAAA,OAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,EAApB,EAA8B;AAC5B,UAAM,KAAK,GAAG,KAAK,MAAL,CAAY,MAA1B;AACA,UAAM,GAAG,GAAG,KAAK,MAAjB;AACA,UAAM,CAAC,GAAG,KAAK,IAAL,CAAU,aAAV,MAA6B,GAAG,CAAC,OAAJ,GAAc,CAAd,GAAkB,CAA/C,CAAV;AACA,aAAQ,OAAO,KAAK,CAAC,OAAN,CAAc,CAAd,CAAP,KAA6B,QAA7B,GAAwC,KAAK,CAAC,OAAN,CAAc,CAAd,CAAxC,GAA2D,KAAK,CAAC,YAAN,GAAqB,CAArB,CAAuB,CAAvB,CAAnE;AACD,KALM;;AAUA,IAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,EAArB,EAA+B;AAC7B,aAAO,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,aAAzB,CAAP;AACD,KAFM;;AAIT,WAAA,OAAA;AAAC,GAjCD,CAAqB,IAArB,CAAA;AAmCD;;AArCD,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the CommonMtd wrapper mixin for the MmlMtd object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AnyWrapper, WrapperConstructor, Constructor} from '../Wrapper.js';\nimport {CommonMtable} from '../../common/Wrappers/mtable.js';\nimport {CommonMtr} from '../../common/Wrappers/mtr.js';\n\n/*****************************************************************/\n/**\n * The CommonMtd interface\n */\nexport interface CommonMtd extends AnyWrapper {\n}\n\n/**\n * Shorthand for the CommonMtd constructor\n */\nexport type MtdConstructor = Constructor<CommonMtd>;\n\n/*****************************************************************/\n/**\n *  The CommonMtd wrapper mixin for the MmlMtd object\n *\n * @template T  The Wrapper class constructor type\n */\nexport function CommonMtdMixin<T extends WrapperConstructor>(Base: T): MtdConstructor & T {\n\n  return class extends Base {\n\n    /**\n     * @override\n     */\n    get fixesPWidth() {\n      return false;\n    }\n\n    /**\n     * @override\n     */\n    public invalidateBBox() {\n      this.bboxComputed = false;\n    }\n\n    /**\n     * @override\n     */\n    public getWrapWidth(_j: number) {\n      const table = this.parent.parent as any as CommonMtable<AnyWrapper, CommonMtr<AnyWrapper>>;\n      const row = this.parent as CommonMtr<AnyWrapper>;\n      const i = this.node.childPosition() - (row.labeled ? 1 : 0);\n      return (typeof(table.cWidths[i]) === 'number' ? table.cWidths[i] : table.getTableData().W[i]) as number;\n    }\n\n    /**\n     * @override\n     */\n    public getChildAlign(_i: number) {\n      return this.node.attributes.get('columnalign') as string;\n    }\n\n  };\n\n}\n"]},"metadata":{},"sourceType":"script"}