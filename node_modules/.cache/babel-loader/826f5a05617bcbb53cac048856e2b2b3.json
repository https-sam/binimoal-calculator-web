{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmenclose = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar menclose_js_1 = require(\"../../common/Wrappers/menclose.js\");\n\nvar Notation = require(\"../Notation.js\");\n\nvar menclose_js_2 = require(\"../../../core/MmlTree/MmlNodes/menclose.js\");\n\nvar SVGmenclose = function (_super) {\n  __extends(SVGmenclose, _super);\n\n  function SVGmenclose() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGmenclose.prototype.toSVG = function (parent) {\n    var e_1, _a;\n\n    var svg = this.standardSVGnode(parent);\n    var left = this.getBBoxExtenders()[3];\n    var def = {};\n\n    if (left > 0) {\n      def.transform = 'translate(' + this.fixed(left) + ', 0)';\n    }\n\n    var block = this.adaptor.append(svg, this.svg('g', def));\n\n    if (this.renderChild) {\n      this.renderChild(this, block);\n    } else {\n      this.childNodes[0].toSVG(block);\n    }\n\n    try {\n      for (var _b = __values(Object.keys(this.notations)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        var notation = this.notations[name_1];\n        !notation.renderChild && notation.renderer(this, svg);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  SVGmenclose.prototype.arrow = function (W, a, double, offset, dist) {\n    if (offset === void 0) {\n      offset = '';\n    }\n\n    if (dist === void 0) {\n      dist = 0;\n    }\n\n    var _a = this.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n\n    var dw = (W - w) / 2;\n    var m = (h - d) / 2;\n    var t = this.thickness;\n    var t2 = t / 2;\n\n    var _b = __read([t * this.arrowhead.x, t * this.arrowhead.y, t * this.arrowhead.dx], 3),\n        x = _b[0],\n        y = _b[1],\n        dx = _b[2];\n\n    var arrow = double ? this.fill('M', w + dw, m, 'l', -(x + dx), y, 'l', dx, t2 - y, 'L', x - dw, m + t2, 'l', dx, y - t2, 'l', -(x + dx), -y, 'l', x + dx, -y, 'l', -dx, y - t2, 'L', w + dw - x, m - t2, 'l', -dx, t2 - y, 'Z') : this.fill('M', w + dw, m, 'l', -(x + dx), y, 'l', dx, t2 - y, 'L', -dw, m + t2, 'l', 0, -t, 'L', w + dw - x, m - t2, 'l', -dx, t2 - y, 'Z');\n    var transform = [];\n\n    if (dist) {\n      transform.push(offset === 'X' ? \"translate(\" + this.fixed(-dist) + \" 0)\" : \"translate(0 \" + this.fixed(dist) + \")\");\n    }\n\n    if (a) {\n      var A = this.jax.fixed(-a * 180 / Math.PI);\n      transform.push(\"rotate(\" + A + \" \" + this.fixed(w / 2) + \" \" + this.fixed(m) + \")\");\n    }\n\n    if (transform.length) {\n      this.adaptor.setAttribute(arrow, 'transform', transform.join(' '));\n    }\n\n    return arrow;\n  };\n\n  SVGmenclose.prototype.line = function (pq) {\n    var _a = __read(pq, 4),\n        x1 = _a[0],\n        y1 = _a[1],\n        x2 = _a[2],\n        y2 = _a[3];\n\n    return this.svg('line', {\n      x1: this.fixed(x1),\n      y1: this.fixed(y1),\n      x2: this.fixed(x2),\n      y2: this.fixed(y2),\n      'stroke-width': this.fixed(this.thickness)\n    });\n  };\n\n  SVGmenclose.prototype.box = function (w, h, d, r) {\n    if (r === void 0) {\n      r = 0;\n    }\n\n    var t = this.thickness;\n    var def = {\n      x: this.fixed(t / 2),\n      y: this.fixed(t / 2 - d),\n      width: this.fixed(w - t),\n      height: this.fixed(h + d - t),\n      fill: 'none',\n      'stroke-width': this.fixed(t)\n    };\n\n    if (r) {\n      def.rx = this.fixed(r);\n    }\n\n    return this.svg('rect', def);\n  };\n\n  SVGmenclose.prototype.ellipse = function (w, h, d) {\n    var t = this.thickness;\n    return this.svg('ellipse', {\n      rx: this.fixed((w - t) / 2),\n      ry: this.fixed((h + d - t) / 2),\n      cx: this.fixed(w / 2),\n      cy: this.fixed((h - d) / 2),\n      'fill': 'none',\n      'stroke-width': this.fixed(t)\n    });\n  };\n\n  SVGmenclose.prototype.path = function (join) {\n    var _this = this;\n\n    var P = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      P[_i - 1] = arguments[_i];\n    }\n\n    return this.svg('path', {\n      d: P.map(function (x) {\n        return typeof x === 'string' ? x : _this.fixed(x);\n      }).join(' '),\n      style: {\n        'stroke-width': this.fixed(this.thickness)\n      },\n      'stroke-linecap': 'round',\n      'stroke-linejoin': join,\n      fill: 'none'\n    });\n  };\n\n  SVGmenclose.prototype.fill = function () {\n    var _this = this;\n\n    var P = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      P[_i] = arguments[_i];\n    }\n\n    return this.svg('path', {\n      d: P.map(function (x) {\n        return typeof x === 'string' ? x : _this.fixed(x);\n      }).join(' ')\n    });\n  };\n\n  SVGmenclose.kind = menclose_js_2.MmlMenclose.prototype.kind;\n  SVGmenclose.notations = new Map([Notation.Border('top'), Notation.Border('right'), Notation.Border('bottom'), Notation.Border('left'), Notation.Border2('actuarial', 'top', 'right'), Notation.Border2('madruwb', 'bottom', 'right'), Notation.DiagonalStrike('up'), Notation.DiagonalStrike('down'), ['horizontalstrike', {\n    renderer: Notation.RenderLine('horizontal', 'Y'),\n    bbox: function (node) {\n      return [0, node.padding, 0, node.padding];\n    }\n  }], ['verticalstrike', {\n    renderer: Notation.RenderLine('vertical', 'X'),\n    bbox: function (node) {\n      return [node.padding, 0, node.padding, 0];\n    }\n  }], ['box', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n          w = _a.w,\n          h = _a.h,\n          d = _a.d;\n\n      node.adaptor.append(node.element, node.box(w, h, d));\n    },\n    bbox: Notation.fullBBox,\n    border: Notation.fullBorder,\n    remove: 'left right top bottom'\n  }], ['roundedbox', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n          w = _a.w,\n          h = _a.h,\n          d = _a.d;\n\n      var r = node.thickness + node.padding;\n      node.adaptor.append(node.element, node.box(w, h, d, r));\n    },\n    bbox: Notation.fullBBox\n  }], ['circle', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n          w = _a.w,\n          h = _a.h,\n          d = _a.d;\n\n      node.adaptor.append(node.element, node.ellipse(w, h, d));\n    },\n    bbox: Notation.fullBBox\n  }], ['phasorangle', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n          w = _a.w,\n          h = _a.h,\n          d = _a.d;\n\n      var a = node.getArgMod(1.75 * node.padding, h + d)[0];\n      var t = node.thickness / 2;\n      var HD = h + d;\n      var cos = Math.cos(a);\n      node.adaptor.append(node.element, node.path('mitre', 'M', w, t - d, 'L', t + cos * t, t - d, 'L', cos * HD + t, HD - d - t));\n    },\n    bbox: function (node) {\n      var p = node.padding / 2;\n      var t = node.thickness;\n      return [2 * p, p, p + t, 3 * p + t];\n    },\n    border: function (node) {\n      return [0, 0, node.thickness, 0];\n    },\n    remove: 'bottom'\n  }], Notation.Arrow('up'), Notation.Arrow('down'), Notation.Arrow('left'), Notation.Arrow('right'), Notation.Arrow('updown'), Notation.Arrow('leftright'), Notation.DiagonalArrow('updiagonal'), Notation.DiagonalArrow('northeast'), Notation.DiagonalArrow('southeast'), Notation.DiagonalArrow('northwest'), Notation.DiagonalArrow('southwest'), Notation.DiagonalArrow('northeastsouthwest'), Notation.DiagonalArrow('northwestsoutheast'), ['longdiv', {\n    renderer: function (node, _child) {\n      var _a = node.getBBox(),\n          w = _a.w,\n          h = _a.h,\n          d = _a.d;\n\n      var t = node.thickness / 2;\n      var p = node.padding;\n      node.adaptor.append(node.element, node.path('round', 'M', t, t - d, 'a', p - t / 2, (h + d) / 2 - 4 * t, 0, '0,1', 0, h + d - 2 * t, 'L', w - t, h - t));\n    },\n    bbox: function (node) {\n      var p = node.padding;\n      var t = node.thickness;\n      return [p + t, p, p, 2 * p + t / 2];\n    }\n  }], ['radical', {\n    renderer: function (node, child) {\n      node.msqrt.toSVG(child);\n      var left = node.sqrtTRBL()[3];\n      node.place(-left, 0, child);\n    },\n    init: function (node) {\n      node.msqrt = node.createMsqrt(node.childNodes[0]);\n    },\n    bbox: function (node) {\n      return node.sqrtTRBL();\n    },\n    renderChild: true\n  }]]);\n  return SVGmenclose;\n}(menclose_js_1.CommonMencloseMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmenclose = SVGmenclose;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/output/svg/Wrappers/menclose.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmenclose wrapper for the MmlMenclose object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonMencloseMixin} from '../../common/Wrappers/menclose.js';\nimport {SVGmsqrt} from './msqrt.js';\nimport * as Notation from '../Notation.js';\nimport {MmlMenclose} from '../../../core/MmlTree/MmlNodes/menclose.js';\nimport {OptionList} from '../../../util/Options.js';\n\n/*****************************************************************/\n/**\n * The SVGmenclose wrapper for the MmlMenclose object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGmenclose<N, T, D> extends CommonMencloseMixin<\n  SVGWrapper<any, any, any>,\n  SVGmsqrt<any, any, any>,\n  any,\n  SVGConstructor<any, any, any>\n>(SVGWrapper) {\n\n  /**\n   * The menclose wrapper\n   */\n  public static kind = MmlMenclose.prototype.kind;\n\n  /**\n   *  The definitions of the various notations\n   */\n  public static notations: Notation.DefList<SVGmenclose<any, any, any>, any> = new Map([\n\n    Notation.Border('top'),\n    Notation.Border('right'),\n    Notation.Border('bottom'),\n    Notation.Border('left'),\n\n    Notation.Border2('actuarial', 'top', 'right'),\n    Notation.Border2('madruwb', 'bottom', 'right'),\n\n    Notation.DiagonalStrike('up'),\n    Notation.DiagonalStrike('down'),\n\n    ['horizontalstrike', {\n      renderer: Notation.RenderLine('horizontal', 'Y'),\n      bbox: (node) => [0, node.padding, 0, node.padding]\n    }],\n\n    ['verticalstrike', {\n      renderer: Notation.RenderLine('vertical', 'X'),\n      bbox: (node) => [node.padding, 0, node.padding, 0]\n    }],\n\n    ['box', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        node.adaptor.append(node.element, node.box(w, h, d));\n      },\n      bbox: Notation.fullBBox,\n      border: Notation.fullBorder,\n      remove: 'left right top bottom'\n    }],\n\n    ['roundedbox', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const r = node.thickness + node.padding;\n        node.adaptor.append(node.element, node.box(w, h, d, r));\n      },\n      bbox: Notation.fullBBox\n    }],\n\n    ['circle', {\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        node.adaptor.append(node.element, node.ellipse(w, h, d));\n      },\n      bbox: Notation.fullBBox\n    }],\n\n    ['phasorangle', {\n      //\n      // Use a bottom border and an upward strike properly angled\n      //\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const a = node.getArgMod(1.75 * node.padding, h + d)[0];\n        const t = node.thickness / 2;\n        const HD = h + d;\n        const cos = Math.cos(a);\n        node.adaptor.append(\n          node.element,\n          node.path('mitre', 'M', w, t - d,  'L', t + cos * t, t - d,  'L' , cos * HD + t, HD - d - t)\n        );\n      },\n      bbox: (node) => {\n        const p = node.padding / 2;\n        const t = node.thickness;\n        return [2 * p, p, p + t, 3 * p + t];\n      },\n      border: (node) => [0, 0, node.thickness, 0],\n      remove: 'bottom'\n    }],\n\n    Notation.Arrow('up'),\n    Notation.Arrow('down'),\n    Notation.Arrow('left'),\n    Notation.Arrow('right'),\n\n    Notation.Arrow('updown'),\n    Notation.Arrow('leftright'),\n\n    Notation.DiagonalArrow('updiagonal'),  // backward compatibility\n    Notation.DiagonalArrow('northeast'),\n    Notation.DiagonalArrow('southeast'),\n    Notation.DiagonalArrow('northwest'),\n    Notation.DiagonalArrow('southwest'),\n\n    Notation.DiagonalArrow('northeastsouthwest'),\n    Notation.DiagonalArrow('northwestsoutheast'),\n\n    ['longdiv', {\n      //\n      // Use a line along the top followed by a half ellipse at the left\n      //\n      renderer: (node, _child) => {\n        const {w, h, d} = node.getBBox();\n        const t = node.thickness / 2;\n        const p = node.padding;\n        node.adaptor.append(\n          node.element,\n          node.path('round',\n                    'M', t, t - d,\n                    'a', p - t / 2, (h + d) / 2 - 4 * t,  0,  '0,1',  0, h + d - 2 * t,\n                    'L', w - t, h - t\n                   )\n        );\n      },\n      bbox: (node) => {\n        const p = node.padding;\n        const t = node.thickness;\n        return [p + t, p, p, 2 * p + t / 2];\n      }\n    }],\n\n    ['radical', {\n      //\n      //  Use the msqrt rendering, but remove the extra space due to the radical\n      //    (it is added in at the end, so other notations overlap the root)\n      //\n      renderer: (node, child) => {\n        node.msqrt.toSVG(child);\n        const left = node.sqrtTRBL()[3];\n        node.place(-left, 0, child);\n      },\n      //\n      //  Create the needed msqrt wrapper\n      //\n      init: (node) => {\n        node.msqrt = node.createMsqrt(node.childNodes[0]);\n      },\n      //\n      //  Add back in the padding for the square root\n      //\n      bbox: (node) => node.sqrtTRBL(),\n      //\n      //  This notation replaces the child\n      //\n      renderChild: true\n    }]\n\n  ] as Notation.DefPair<SVGmenclose<any, any, any>, any>[]);\n\n  /********************************************************/\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    //\n    //  Create a box at the correct position and add the children\n    //\n    const left = this.getBBoxExtenders()[3];\n    const def: OptionList = {};\n    if (left > 0) {\n      def.transform = 'translate(' + this.fixed(left) + ', 0)';\n    }\n    const block = this.adaptor.append(svg, this.svg('g', def));\n    if (this.renderChild) {\n      this.renderChild(this, block);\n    } else {\n      this.childNodes[0].toSVG(block);\n    }\n    //\n    //  Render all the notations for this menclose element\n    //\n    for (const name of Object.keys(this.notations)) {\n      const notation = this.notations[name];\n      !notation.renderChild && notation.renderer(this, svg);\n    }\n  }\n\n  /********************************************************/\n\n  /**\n   * Create an arrow using SVG elements\n   *\n   * @param {number} W        The length of the arrow\n   * @param {number} a        The angle for the arrow\n   * @param {boolean} double  True if this is a double-headed arrow\n   * @param {string} offset   'X' for vertical arrow, 'Y' for horizontal\n   * @param {number} dist     Distance to translate in the offset direction\n   * @return {N}              The newly created arrow\n   */\n  public arrow(W: number, a: number, double: boolean, offset: string = '', dist: number = 0): N {\n    const {w, h, d} = this.getBBox();\n    const dw = (W - w) / 2;\n    const m = (h - d) / 2;\n    const t = this.thickness;\n    const t2 = t / 2;\n    const [x, y, dx] = [t * this.arrowhead.x, t * this.arrowhead.y, t * this.arrowhead.dx];\n    const arrow =\n      (double ?\n       this.fill(\n         'M', w + dw, m,                            // point of arrow\n         'l', -(x + dx), y,  'l', dx, t2 - y,       // upper right head\n         'L', x - dw, m + t2,                       // upper side of shaft\n         'l', dx, y - t2, 'l', -(x + dx), - y,      // left point\n         'l', x + dx, -y,    'l', -dx, y - t2,      // lower left head\n         'L', w + dw - x, m - t2,                   // lower side of shaft\n         'l', -dx, t2 - y, 'Z'                      // lower head\n       ) :\n       this.fill(\n         'M', w + dw, m,                            // point of arrow\n         'l', -(x + dx), y,  'l', dx, t2 - y,       // upper head\n         'L', -dw, m + t2, 'l', 0, -t,              // upper side of shaft\n         'L', w + dw - x, m - t2,                   // lower side of shaft\n         'l', -dx, t2 - y, 'Z'                      // lower head\n       ));\n    const transform = [];\n    if (dist) {\n      transform.push(offset === 'X' ? `translate(${this.fixed(-dist)} 0)` : `translate(0 ${this.fixed(dist)})`);\n    }\n    if (a) {\n      const A = this.jax.fixed(-a * 180 / Math.PI);\n      transform.push(`rotate(${A} ${this.fixed(w / 2)} ${this.fixed(m)})`);\n    }\n    if (transform.length) {\n      this.adaptor.setAttribute(arrow, 'transform', transform.join(' '));\n    }\n    return arrow as N;\n  }\n\n  /********************************************************/\n\n  /**\n   * Create a line element\n   *\n   * @param {number[]} pq   The coordinates of the endpoints, [x1, y1, x2, y2]\n   * @return {N}            The newly created line element\n   */\n  public line(pq: [number, number, number, number]): N {\n    const [x1, y1, x2, y2] = pq;\n    return this.svg('line', {\n      x1: this.fixed(x1), y1: this.fixed(y1),\n      x2: this.fixed(x2), y2: this.fixed(y2),\n      'stroke-width': this.fixed(this.thickness)\n    });\n  }\n\n  /**\n   * Create a rectangle element\n   *\n   * @param {number} w    The width of the rectangle\n   * @param {number} h    The height of the rectangle\n   * @param {number} d    The depth of the rectangle\n   * @param {number=} r   The corner radius for a rounded rectangle\n   * @return {N}          The newly created line element\n   */\n  public box(w: number, h: number, d: number, r: number = 0): N {\n    const t = this.thickness;\n    const def: OptionList = {\n      x: this.fixed(t / 2), y: this.fixed(t / 2 - d),\n      width: this.fixed(w - t), height: this.fixed(h + d - t),\n      fill: 'none', 'stroke-width': this.fixed(t)\n    };\n    if (r) {\n      def.rx = this.fixed(r);\n    }\n    return this.svg('rect', def);\n  }\n\n  /**\n   * Create an ellipse element\n   *\n   * @param {number} w  The width of the ellipse\n   * @param {number} h  The height of the ellipse\n   * @param {number} d  The depth of the ellipse\n   * @return {N}        The newly created ellipse node\n   */\n  public ellipse(w: number, h: number, d: number): N {\n    const t = this.thickness;\n    return this.svg('ellipse', {\n      rx: this.fixed((w - t) / 2), ry: this.fixed((h + d - t) / 2),\n      cx: this.fixed(w / 2), cy: this.fixed((h - d) / 2),\n      'fill': 'none', 'stroke-width': this.fixed(t)\n    });\n  }\n\n  /**\n   * Create a path element from the commands that specify it\n   *\n   * @param {string} join           The join style for the path\n   * @param {(string|number)[]} P   The list of commands and coordinates for the path\n   * @return {N}                    The newly created path\n   */\n  public path(join: string, ...P: (string | number)[]): N {\n    return this.svg('path', {\n      d: P.map(x => (typeof x === 'string' ? x : this.fixed(x))).join(' '),\n      style: {'stroke-width': this.fixed(this.thickness)},\n      'stroke-linecap': 'round', 'stroke-linejoin': join,\n      fill: 'none'\n    });\n  }\n\n  /**\n   * Create a filled path element from the commands the specify it\n   *   (same as path above, but no thickness adjustments)\n   *\n   * @param {(string|number)[]} P   The list of commands and coordinates for the path\n   * @return {N}                    The newly created path\n   */\n  public fill(...P: (string | number)[]): N {\n    return this.svg('path', {\n      d: P.map(x => (typeof x === 'string' ? x : this.fixed(x))).join(' ')\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}