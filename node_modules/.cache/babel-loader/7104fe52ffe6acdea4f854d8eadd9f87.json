{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGmtable = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar mtable_js_1 = require(\"../../common/Wrappers/mtable.js\");\n\nvar mtable_js_2 = require(\"../../../core/MmlTree/MmlNodes/mtable.js\");\n\nvar CLASSPREFIX = 'mjx-';\n\nvar SVGmtable = function (_super) {\n  __extends(SVGmtable, _super);\n\n  function SVGmtable(factory, node, parent) {\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    var _this = _super.call(this, factory, node, parent) || this;\n\n    var def = {\n      'data-labels': true\n    };\n\n    if (_this.isTop) {\n      def.transform = 'matrix(1 0 0 -1 0 0)';\n    }\n\n    _this.labels = _this.svg('g', def);\n    return _this;\n  }\n\n  SVGmtable.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n    this.placeRows(svg);\n    this.handleColumnLines(svg);\n    this.handleRowLines(svg);\n    this.handleFrame(svg);\n    var dx = this.handlePWidth(svg);\n    this.handleLabels(svg, parent, dx);\n  };\n\n  SVGmtable.prototype.placeRows = function (svg) {\n    var _a, _b, _c;\n\n    var equal = this.node.attributes.get('equalrows');\n\n    var _d = this.getTableData(),\n        H = _d.H,\n        D = _d.D;\n\n    var HD = this.getEqualRowHeight();\n    var rSpace = this.getRowHalfSpacing();\n\n    var rLines = __spreadArray(__spreadArray([this.fLine], __read(this.rLines)), [this.fLine]);\n\n    var y = this.getBBox().h - rLines[0];\n\n    for (var i = 0; i < this.numRows; i++) {\n      var row = this.childNodes[i];\n      _a = __read(this.getRowHD(equal, HD, H[i], D[i]), 2), row.H = _a[0], row.D = _a[1];\n      _b = __read([rSpace[i], rSpace[i + 1]], 2), row.tSpace = _b[0], row.bSpace = _b[1];\n      _c = __read([rLines[i], rLines[i + 1]], 2), row.tLine = _c[0], row.bLine = _c[1];\n      row.toSVG(svg);\n      row.place(0, y - rSpace[i] - row.H);\n      y -= rSpace[i] + row.H + row.D + rSpace[i + 1] + rLines[i + 1];\n    }\n  };\n\n  SVGmtable.prototype.getRowHD = function (equal, HD, H, D) {\n    return equal ? [(HD + H - D) / 2, (HD - H + D) / 2] : [H, D];\n  };\n\n  SVGmtable.prototype.handleColor = function () {\n    _super.prototype.handleColor.call(this);\n\n    var rect = this.firstChild();\n\n    if (rect) {\n      this.adaptor.setAttribute(rect, 'width', this.fixed(this.getWidth()));\n    }\n  };\n\n  SVGmtable.prototype.handleColumnLines = function (svg) {\n    if (this.node.attributes.get('columnlines') === 'none') return;\n    var lines = this.getColumnAttributes('columnlines');\n    if (!lines) return;\n    var cSpace = this.getColumnHalfSpacing();\n    var cLines = this.cLines;\n    var cWidth = this.getComputedWidths();\n    var x = this.fLine;\n\n    for (var i = 0; i < lines.length; i++) {\n      x += cSpace[i] + cWidth[i] + cSpace[i + 1];\n\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeVLine(x, lines[i], cLines[i]));\n      }\n\n      x += cLines[i];\n    }\n  };\n\n  SVGmtable.prototype.handleRowLines = function (svg) {\n    if (this.node.attributes.get('rowlines') === 'none') return;\n    var lines = this.getRowAttributes('rowlines');\n    if (!lines) return;\n    var equal = this.node.attributes.get('equalrows');\n\n    var _a = this.getTableData(),\n        H = _a.H,\n        D = _a.D;\n\n    var HD = this.getEqualRowHeight();\n    var rSpace = this.getRowHalfSpacing();\n    var rLines = this.rLines;\n    var y = this.getBBox().h - this.fLine;\n\n    for (var i = 0; i < lines.length; i++) {\n      var _b = __read(this.getRowHD(equal, HD, H[i], D[i]), 2),\n          rH = _b[0],\n          rD = _b[1];\n\n      y -= rSpace[i] + rH + rD + rSpace[i + 1];\n\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeHLine(y, lines[i], rLines[i]));\n      }\n\n      y -= rLines[i];\n    }\n  };\n\n  SVGmtable.prototype.handleFrame = function (svg) {\n    if (this.frame && this.fLine) {\n      var _a = this.getBBox(),\n          h = _a.h,\n          d = _a.d,\n          w = _a.w;\n\n      var style = this.node.attributes.get('frame');\n      this.adaptor.append(svg, this.makeFrame(w, h, d, style));\n    }\n  };\n\n  SVGmtable.prototype.handlePWidth = function (svg) {\n    if (!this.pWidth) {\n      return 0;\n    }\n\n    var _a = this.getBBox(),\n        w = _a.w,\n        L = _a.L,\n        R = _a.R;\n\n    var W = L + this.pWidth + R;\n    var align = this.getAlignShift()[0];\n    var CW = Math.max(this.isTop ? W : 0, this.container.getWrapWidth(this.containerI)) - L - R;\n    var dw = w - (this.pWidth > CW ? CW : this.pWidth);\n    var dx = align === 'left' ? 0 : align === 'right' ? dw : dw / 2;\n\n    if (dx) {\n      var table = this.svg('g', {}, this.adaptor.childNodes(svg));\n      this.place(dx, 0, table);\n      this.adaptor.append(svg, table);\n    }\n\n    return dx;\n  };\n\n  SVGmtable.prototype.lineClass = function (style) {\n    return CLASSPREFIX + style;\n  };\n\n  SVGmtable.prototype.makeFrame = function (w, h, d, style) {\n    var t = this.fLine;\n    return this.svg('rect', this.setLineThickness(t, style, {\n      'data-frame': true,\n      'class': this.lineClass(style),\n      width: this.fixed(w - t),\n      height: this.fixed(h + d - t),\n      x: this.fixed(t / 2),\n      y: this.fixed(t / 2 - d)\n    }));\n  };\n\n  SVGmtable.prototype.makeVLine = function (x, style, t) {\n    var _a = this.getBBox(),\n        h = _a.h,\n        d = _a.d;\n\n    var dt = style === 'dotted' ? t / 2 : 0;\n    var X = this.fixed(x + t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'v',\n      'class': this.lineClass(style),\n      x1: X,\n      y1: this.fixed(dt - d),\n      x2: X,\n      y2: this.fixed(h - dt)\n    }));\n  };\n\n  SVGmtable.prototype.makeHLine = function (y, style, t) {\n    var w = this.getBBox().w;\n    var dt = style === 'dotted' ? t / 2 : 0;\n    var Y = this.fixed(y - t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'h',\n      'class': this.lineClass(style),\n      x1: this.fixed(dt),\n      y1: Y,\n      x2: this.fixed(w - dt),\n      y2: Y\n    }));\n  };\n\n  SVGmtable.prototype.setLineThickness = function (t, style, properties) {\n    if (t !== .07) {\n      properties['stroke-thickness'] = this.fixed(t);\n\n      if (style !== 'solid') {\n        properties['stroke-dasharray'] = (style === 'dotted' ? '0,' : '') + this.fixed(2 * t);\n      }\n    }\n\n    return properties;\n  };\n\n  SVGmtable.prototype.handleLabels = function (svg, _parent, dx) {\n    if (!this.hasLabels) return;\n    var labels = this.labels;\n    var attributes = this.node.attributes;\n    var side = attributes.get('side');\n    this.spaceLabels();\n    this.isTop ? this.topTable(svg, labels, side) : this.subTable(svg, labels, side, dx);\n  };\n\n  SVGmtable.prototype.spaceLabels = function () {\n    var adaptor = this.adaptor;\n    var h = this.getBBox().h;\n    var L = this.getTableData().L;\n    var space = this.getRowHalfSpacing();\n    var y = h - this.fLine;\n    var current = adaptor.firstChild(this.labels);\n\n    for (var i = 0; i < this.numRows; i++) {\n      var row = this.childNodes[i];\n\n      if (row.node.isKind('mlabeledtr')) {\n        var cell = row.childNodes[0];\n        y -= space[i] + row.H;\n        row.placeCell(cell, {\n          x: 0,\n          y: y,\n          w: L,\n          lSpace: 0,\n          rSpace: 0,\n          lLine: 0,\n          rLine: 0\n        });\n        y -= row.D + space[i + 1] + this.rLines[i];\n        current = adaptor.next(current);\n      } else {\n        y -= space[i] + row.H + row.D + space[i + 1] + this.rLines[i];\n      }\n    }\n  };\n\n  SVGmtable.prototype.topTable = function (svg, labels, side) {\n    var adaptor = this.adaptor;\n\n    var _a = this.getBBox(),\n        h = _a.h,\n        d = _a.d,\n        w = _a.w,\n        L = _a.L,\n        R = _a.R;\n\n    var W = L + (this.pWidth || w) + R;\n    var LW = this.getTableData().L;\n\n    var _b = __read(this.getPadAlignShift(side), 3),\n        align = _b[1],\n        shift = _b[2];\n\n    var dx = shift + (align === 'right' ? -W : align === 'center' ? -W / 2 : 0) + L;\n    var matrix = 'matrix(1 0 0 -1 0 0)';\n    var scale = \"scale(\" + this.jax.fixed(this.font.params.x_height * 1000 / this.metrics.ex, 2) + \")\";\n    var transform = \"translate(0 \" + this.fixed(h) + \") \" + matrix + \" \" + scale;\n    var table = this.svg('svg', {\n      'data-table': true,\n      preserveAspectRatio: align === 'left' ? 'xMinYMid' : align === 'right' ? 'xMaxYMid' : 'xMidYMid',\n      viewBox: [this.fixed(-dx), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [this.svg('g', {\n      transform: matrix\n    }, adaptor.childNodes(svg))]);\n    labels = this.svg('svg', {\n      'data-labels': true,\n      preserveAspectRatio: side === 'left' ? 'xMinYMid' : 'xMaxYMid',\n      viewBox: [side === 'left' ? 0 : this.fixed(LW), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [labels]);\n    adaptor.append(svg, this.svg('g', {\n      transform: transform\n    }, [table, labels]));\n    this.place(-L, 0, svg);\n  };\n\n  SVGmtable.prototype.subTable = function (svg, labels, side, dx) {\n    var adaptor = this.adaptor;\n\n    var _a = this.getBBox(),\n        w = _a.w,\n        L = _a.L,\n        R = _a.R;\n\n    var W = L + (this.pWidth || w) + R;\n    var labelW = this.getTableData().L;\n    var align = this.getAlignShift()[0];\n    var CW = Math.max(W, this.container.getWrapWidth(this.containerI));\n    this.place(side === 'left' ? (align === 'left' ? 0 : align === 'right' ? W - CW + dx : (W - CW) / 2 + dx) - L : (align === 'left' ? CW : align === 'right' ? W + dx : (CW + W) / 2 + dx) - L - labelW, 0, labels);\n    adaptor.append(svg, labels);\n  };\n\n  SVGmtable.kind = mtable_js_2.MmlMtable.prototype.kind;\n  SVGmtable.styles = {\n    'g[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed': {\n      'stroke-dasharray': '140'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted': {\n      'stroke-linecap': 'round',\n      'stroke-dasharray': '0,140'\n    },\n    'g[data-mml-node=\"mtable\"] > g > svg': {\n      overflow: 'visible'\n    }\n  };\n  return SVGmtable;\n}(mtable_js_1.CommonMtableMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGmtable = SVGmtable;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/output/svg/Wrappers/mtable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAGA,IAAA,WAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AAKA,IAAM,WAAW,GAAG,MAApB;;AAUA,IAAA,SAAA,GAAA,UAAA,MAAA,EAAA;AACA,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAyCE,WAAA,SAAA,CAAY,OAAZ,EAAiD,IAAjD,EAAgE,MAAhE,EAAkG;AAAlC,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,IAAA;AAAkC;;AAAlG,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,EAAe,IAAf,EAAqB,MAArB,KAA4B,IAD9B;;AAEE,QAAM,GAAG,GAAe;AAAC,qBAAe;AAAhB,KAAxB;;AACA,QAAI,KAAI,CAAC,KAAT,EAAgB;AACd,MAAA,GAAG,CAAC,SAAJ,GAAgB,sBAAhB;AACD;;AACD,IAAA,KAAI,CAAC,MAAL,GAAc,KAAI,CAAC,GAAL,CAAS,GAAT,EAAc,GAAd,CAAd;;AACD;;AAKM,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,MAAb,EAAsB;AACpB,QAAM,GAAG,GAAG,KAAK,eAAL,CAAqB,MAArB,CAAZ;AACA,SAAK,SAAL,CAAe,GAAf;AACA,SAAK,iBAAL,CAAuB,GAAvB;AACA,SAAK,cAAL,CAAoB,GAApB;AACA,SAAK,WAAL,CAAiB,GAAjB;AACA,QAAM,EAAE,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAAX;AACA,SAAK,YAAL,CAAkB,GAAlB,EAAuB,MAAvB,EAA+B,EAA/B;AACD,GARM;;AAaG,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAoB,GAApB,EAA0B;;;AACxB,QAAM,KAAK,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,WAAzB,CAAd;;AACM,QAAA,EAAA,GAAS,KAAK,YAAL,EAAT;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;;AACN,QAAM,EAAE,GAAG,KAAK,iBAAL,EAAX;AACA,QAAM,MAAM,GAAG,KAAK,iBAAL,EAAf;;AACA,QAAM,MAAM,GAAA,aAAA,CAAA,aAAA,CAAA,CAAI,KAAK,KAAT,CAAA,EAAc,MAAA,CAAK,KAAK,MAAV,CAAd,CAAA,EAA8B,CAAE,KAAK,KAAP,CAA9B,CAAZ;;AACA,QAAI,CAAC,GAAG,KAAK,OAAL,GAAe,CAAf,GAAmB,MAAM,CAAC,CAAD,CAAjC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAzB,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,GAAG,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAZ;AACA,MAAA,EAAA,GAAA,MAAA,CAAiB,KAAK,QAAL,CAAc,KAAd,EAAqB,EAArB,EAAyB,CAAC,CAAC,CAAD,CAA1B,EAA+B,CAAC,CAAC,CAAD,CAAhC,CAAjB,EAAqD,CAArD,CAAA,EAAC,GAAG,CAAC,CAAJ,GAAK,EAAA,CAAA,CAAA,CAAN,EAAQ,GAAG,CAAC,CAAJ,GAAK,EAAA,CAAA,CAAA,CAAb;AACA,MAAA,EAAA,GAAA,MAAA,CAA2B,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAM,CAAC,CAAC,GAAG,CAAL,CAAlB,CAA3B,EAAqD,CAArD,CAAA,EAAC,GAAG,CAAC,MAAJ,GAAU,EAAA,CAAA,CAAA,CAAX,EAAa,GAAG,CAAC,MAAJ,GAAU,EAAA,CAAA,CAAA,CAAvB;AACA,MAAA,EAAA,GAAA,MAAA,CAAyB,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAM,CAAC,CAAC,GAAG,CAAL,CAAlB,CAAzB,EAAmD,CAAnD,CAAA,EAAC,GAAG,CAAC,KAAJ,GAAS,EAAA,CAAA,CAAA,CAAV,EAAY,GAAG,CAAC,KAAJ,GAAS,EAAA,CAAA,CAAA,CAArB;AACA,MAAA,GAAG,CAAC,KAAJ,CAAU,GAAV;AACA,MAAA,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,CAAC,GAAG,MAAM,CAAC,CAAD,CAAV,GAAgB,GAAG,CAAC,CAAjC;AACA,MAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAN,GAAY,GAAG,CAAC,CAAhB,GAAoB,GAAG,CAAC,CAAxB,GAA4B,MAAM,CAAC,CAAC,GAAG,CAAL,CAAlC,GAA4C,MAAM,CAAC,CAAC,GAAG,CAAL,CAAvD;AACD;AACF,GAhBS;;AAyBA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,KAAnB,EAAmC,EAAnC,EAA+C,CAA/C,EAA0D,CAA1D,EAAmE;AACjE,WAAQ,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAL,GAAS,CAAV,IAAe,CAAhB,EAAmB,CAAC,EAAE,GAAG,CAAL,GAAS,CAAV,IAAe,CAAlC,CAAH,GAA0C,CAAC,CAAD,EAAI,CAAJ,CAAvD;AACD,GAFS;;AASH,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACE,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB;;AACA,QAAM,IAAI,GAAG,KAAK,UAAL,EAAb;;AACA,QAAI,IAAJ,EAAU;AACR,WAAK,OAAL,CAAa,YAAb,CAA0B,IAA1B,EAAgC,OAAhC,EAAyC,KAAK,KAAL,CAAW,KAAK,QAAL,EAAX,CAAzC;AACD;AACF,GANM;;AAaG,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,UAA4B,GAA5B,EAAkC;AAChC,QAAI,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,aAAzB,MAA4C,MAAhD,EAAwD;AACxD,QAAM,KAAK,GAAG,KAAK,mBAAL,CAAyB,aAAzB,CAAd;AACA,QAAI,CAAC,KAAL,EAAY;AACZ,QAAM,MAAM,GAAG,KAAK,oBAAL,EAAf;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,MAAM,GAAG,KAAK,iBAAL,EAAf;AACA,QAAI,CAAC,GAAG,KAAK,KAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,MAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,CAAD,CAAlB,GAAwB,MAAM,CAAC,CAAC,GAAG,CAAL,CAAnC;;AACA,UAAI,KAAK,CAAC,CAAD,CAAL,KAAa,MAAjB,EAAyB;AACvB,aAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,KAAK,SAAL,CAAe,CAAf,EAAkB,KAAK,CAAC,CAAD,CAAvB,EAA4B,MAAM,CAAC,CAAD,CAAlC,CAAzB;AACD;;AACD,MAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAX;AACD;AACF,GAfS;;AAsBA,EAAA,SAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,GAAzB,EAA+B;AAC7B,QAAI,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,UAAzB,MAAyC,MAA7C,EAAqD;AACrD,QAAM,KAAK,GAAG,KAAK,gBAAL,CAAsB,UAAtB,CAAd;AACA,QAAI,CAAC,KAAL,EAAY;AACZ,QAAM,KAAK,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,WAAzB,CAAd;;AACM,QAAA,EAAA,GAAS,KAAK,YAAL,EAAT;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;;AACN,QAAM,EAAE,GAAG,KAAK,iBAAL,EAAX;AACA,QAAM,MAAM,GAAG,KAAK,iBAAL,EAAf;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAI,CAAC,GAAG,KAAK,OAAL,GAAe,CAAf,GAAmB,KAAK,KAAhC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AAC/B,UAAA,EAAA,GAAA,MAAA,CAAW,KAAK,QAAL,CAAc,KAAd,EAAqB,EAArB,EAAyB,CAAC,CAAC,CAAD,CAA1B,EAA+B,CAAC,CAAC,CAAD,CAAhC,CAAX,EAA+C,CAA/C,CAAA;AAAA,UAAC,EAAE,GAAA,EAAA,CAAA,CAAA,CAAH;AAAA,UAAK,EAAE,GAAA,EAAA,CAAA,CAAA,CAAP;;AACN,MAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAN,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,MAAM,CAAC,CAAC,GAAG,CAAL,CAAjC;;AACA,UAAI,KAAK,CAAC,CAAD,CAAL,KAAa,MAAjB,EAAyB;AACvB,aAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,KAAK,SAAL,CAAe,CAAf,EAAkB,KAAK,CAAC,CAAD,CAAvB,EAA4B,MAAM,CAAC,CAAD,CAAlC,CAAzB;AACD;;AACD,MAAA,CAAC,IAAI,MAAM,CAAC,CAAD,CAAX;AACD;AAEF,GAnBS;;AA0BA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,GAAtB,EAA4B;AAC1B,QAAI,KAAK,KAAL,IAAc,KAAK,KAAvB,EAA8B;AACtB,UAAA,EAAA,GAAY,KAAK,OAAL,EAAZ;AAAA,UAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,UAAI,CAAC,GAAA,EAAA,CAAA,CAAL;AAAA,UAAO,CAAC,GAAA,EAAA,CAAA,CAAR;;AACN,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,OAAzB,CAAd;AACA,WAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,KAAK,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAxB,CAAzB;AACD;AACF,GANS;;AAWA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,GAAvB,EAA6B;AAC3B,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,aAAO,CAAP;AACD;;AACK,QAAA,EAAA,GAAY,KAAK,OAAL,EAAZ;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;AAAA,QAAO,CAAC,GAAA,EAAA,CAAA,CAAR;;AACN,QAAM,CAAC,GAAG,CAAC,GAAG,KAAK,MAAT,GAAkB,CAA5B;AACA,QAAM,KAAK,GAAG,KAAK,aAAL,GAAqB,CAArB,CAAd;AACA,QAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,KAAL,GAAa,CAAb,GAAiB,CAA1B,EAA6B,KAAK,SAAL,CAAe,YAAf,CAA4B,KAAK,UAAjC,CAA7B,IAA6E,CAA7E,GAAiF,CAA5F;AACA,QAAM,EAAE,GAAG,CAAC,IAAI,KAAK,MAAL,GAAc,EAAd,GAAmB,EAAnB,GAAwB,KAAK,MAAjC,CAAZ;AACA,QAAM,EAAE,GAAI,KAAK,KAAK,MAAV,GAAmB,CAAnB,GAAuB,KAAK,KAAK,OAAV,GAAoB,EAApB,GAAyB,EAAE,GAAG,CAAjE;;AACA,QAAI,EAAJ,EAAQ;AACN,UAAM,KAAK,GAAG,KAAK,GAAL,CAAS,GAAT,EAAc,EAAd,EAAkB,KAAK,OAAL,CAAa,UAAb,CAAwB,GAAxB,CAAlB,CAAd;AACA,WAAK,KAAL,CAAW,EAAX,EAAe,CAAf,EAAkB,KAAlB;AACA,WAAK,OAAL,CAAa,MAAb,CAAoB,GAApB,EAAyB,KAAzB;AACD;;AACD,WAAO,EAAP;AACD,GAhBS;;AAwBA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAoB,KAApB,EAAiC;AAC/B,WAAO,WAAW,GAAG,KAArB;AACD,GAFS;;AAWA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAoB,CAApB,EAA+B,CAA/B,EAA0C,CAA1C,EAAqD,KAArD,EAAkE;AAChE,QAAM,CAAC,GAAG,KAAK,KAAf;AACA,WAAO,KAAK,GAAL,CAAS,MAAT,EAAiB,KAAK,gBAAL,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC;AACtD,oBAAc,IADwC;AAClC,eAAS,KAAK,SAAL,CAAe,KAAf,CADyB;AAEtD,MAAA,KAAK,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,CAAf,CAF+C;AAE5B,MAAA,MAAM,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,CAAJ,GAAQ,CAAnB,CAFoB;AAGtD,MAAA,CAAC,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,CAAf,CAHmD;AAGhC,MAAA,CAAC,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,CAAJ,GAAQ,CAAnB;AAH6B,KAAhC,CAAjB,CAAP;AAKD,GAPS;;AAeA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAoB,CAApB,EAA+B,KAA/B,EAA8C,CAA9C,EAAuD;AAC/C,QAAA,EAAA,GAAS,KAAK,OAAL,EAAT;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;;AACN,QAAM,EAAE,GAAI,KAAK,KAAK,QAAV,GAAqB,CAAC,GAAG,CAAzB,GAA6B,CAAzC;AACA,QAAM,CAAC,GAAG,KAAK,KAAL,CAAW,CAAC,GAAG,CAAC,GAAG,CAAnB,CAAV;AACA,WAAO,KAAK,GAAL,CAAS,MAAT,EAAiB,KAAK,gBAAL,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC;AACtD,mBAAa,GADyC;AACpC,eAAS,KAAK,SAAL,CAAe,KAAf,CAD2B;AAEtD,MAAA,EAAE,EAAE,CAFkD;AAE/C,MAAA,EAAE,EAAE,KAAK,KAAL,CAAW,EAAE,GAAG,CAAhB,CAF2C;AAEvB,MAAA,EAAE,EAAE,CAFmB;AAEhB,MAAA,EAAE,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,EAAf;AAFY,KAAhC,CAAjB,CAAP;AAID,GARS;;AAgBA,EAAA,SAAA,CAAA,SAAA,CAAA,SAAA,GAAV,UAAoB,CAApB,EAA+B,KAA/B,EAA8C,CAA9C,EAAuD;AACrD,QAAM,CAAC,GAAG,KAAK,OAAL,GAAe,CAAzB;AACA,QAAM,EAAE,GAAI,KAAK,KAAK,QAAV,GAAqB,CAAC,GAAG,CAAzB,GAA6B,CAAzC;AACA,QAAM,CAAC,GAAG,KAAK,KAAL,CAAW,CAAC,GAAG,CAAC,GAAG,CAAnB,CAAV;AACA,WAAO,KAAK,GAAL,CAAS,MAAT,EAAiB,KAAK,gBAAL,CAAsB,CAAtB,EAAyB,KAAzB,EAAgC;AACtD,mBAAa,GADyC;AACpC,eAAS,KAAK,SAAL,CAAe,KAAf,CAD2B;AAEtD,MAAA,EAAE,EAAE,KAAK,KAAL,CAAW,EAAX,CAFkD;AAElC,MAAA,EAAE,EAAE,CAF8B;AAE3B,MAAA,EAAE,EAAE,KAAK,KAAL,CAAW,CAAC,GAAG,EAAf,CAFuB;AAEH,MAAA,EAAE,EAAE;AAFD,KAAhC,CAAjB,CAAP;AAID,GARS;;AAgBA,EAAA,SAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,CAA3B,EAAsC,KAAtC,EAAqD,UAArD,EAA2E;AACzE,QAAI,CAAC,KAAK,GAAV,EAAe;AACb,MAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,KAAK,KAAL,CAAW,CAAX,CAAjC;;AACA,UAAI,KAAK,KAAK,OAAd,EAAuB;AACrB,QAAA,UAAU,CAAC,kBAAD,CAAV,GAAiC,CAAC,KAAK,KAAK,QAAV,GAAqB,IAArB,GAA4B,EAA7B,IAAmC,KAAK,KAAL,CAAW,IAAI,CAAf,CAApE;AACD;AACF;;AACD,WAAO,UAAP;AACD,GARS;;AAmBA,EAAA,SAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,GAAvB,EAA+B,OAA/B,EAA2C,EAA3C,EAAqD;AACnD,QAAI,CAAC,KAAK,SAAV,EAAqB;AACrB,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,UAAU,GAAG,KAAK,IAAL,CAAU,UAA7B;AAIA,QAAM,IAAI,GAAG,UAAU,CAAC,GAAX,CAAe,MAAf,CAAb;AAIA,SAAK,WAAL;AAKA,SAAK,KAAL,GAAa,KAAK,QAAL,CAAc,GAAd,EAAmB,MAAnB,EAA2B,IAA3B,CAAb,GAAgD,KAAK,QAAL,CAAc,GAAd,EAAmB,MAAnB,EAA2B,IAA3B,EAAiC,EAAjC,CAAhD;AACD,GAjBS;;AAsBA,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AACE,QAAM,OAAO,GAAG,KAAK,OAArB;AACA,QAAM,CAAC,GAAG,KAAK,OAAL,GAAe,CAAzB;AACA,QAAM,CAAC,GAAG,KAAK,YAAL,GAAoB,CAA9B;AACA,QAAM,KAAK,GAAG,KAAK,iBAAL,EAAd;AAKA,QAAI,CAAC,GAAG,CAAC,GAAG,KAAK,KAAjB;AACA,QAAI,OAAO,GAAG,OAAO,CAAC,UAAR,CAAmB,KAAK,MAAxB,CAAd;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,OAAzB,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,GAAG,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAZ;;AACA,UAAI,GAAG,CAAC,IAAJ,CAAS,MAAT,CAAgB,YAAhB,CAAJ,EAAmC;AACjC,YAAM,IAAI,GAAG,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAb;AACA,QAAA,CAAC,IAAI,KAAK,CAAC,CAAD,CAAL,GAAW,GAAG,CAAC,CAApB;AACA,QAAA,GAAG,CAAC,SAAJ,CAAc,IAAd,EAAoB;AAAC,UAAA,CAAC,EAAE,CAAJ;AAAO,UAAA,CAAC,EAAE,CAAV;AAAa,UAAA,CAAC,EAAE,CAAhB;AAAmB,UAAA,MAAM,EAAE,CAA3B;AAA8B,UAAA,MAAM,EAAE,CAAtC;AAAyC,UAAA,KAAK,EAAE,CAAhD;AAAmD,UAAA,KAAK,EAAE;AAA1D,SAApB;AACA,QAAA,CAAC,IAAI,GAAG,CAAC,CAAJ,GAAQ,KAAK,CAAC,CAAC,GAAG,CAAL,CAAb,GAAuB,KAAK,MAAL,CAAY,CAAZ,CAA5B;AACA,QAAA,OAAO,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAV;AACD,OAND,MAMO;AACL,QAAA,CAAC,IAAI,KAAK,CAAC,CAAD,CAAL,GAAW,GAAG,CAAC,CAAf,GAAmB,GAAG,CAAC,CAAvB,GAA2B,KAAK,CAAC,CAAC,GAAG,CAAL,CAAhC,GAA0C,KAAK,MAAL,CAAY,CAAZ,CAA/C;AACD;AACF;AACF,GAvBS;;AAgCA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,GAAnB,EAA2B,MAA3B,EAAsC,IAAtC,EAAkD;AAChD,QAAM,OAAO,GAAG,KAAK,OAArB;;AACM,QAAA,EAAA,GAAkB,KAAK,OAAL,EAAlB;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;AAAA,QAAO,CAAC,GAAA,EAAA,CAAA,CAAR;AAAA,QAAU,CAAC,GAAA,EAAA,CAAA,CAAX;AAAA,QAAa,CAAC,GAAA,EAAA,CAAA,CAAd;;AACN,QAAM,CAAC,GAAG,CAAC,IAAI,KAAK,MAAL,IAAe,CAAnB,CAAD,GAAyB,CAAnC;AACA,QAAM,EAAE,GAAG,KAAK,YAAL,GAAoB,CAA/B;;AACM,QAAA,EAAA,GAAA,MAAA,CAAoB,KAAK,gBAAL,CAAsB,IAAtB,CAApB,EAA+C,CAA/C,CAAA;AAAA,QAAI,KAAK,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,QAAW,KAAK,GAAA,EAAA,CAAA,CAAA,CAAhB;;AACN,QAAM,EAAE,GAAG,KAAK,IAAI,KAAK,KAAK,OAAV,GAAoB,CAAC,CAArB,GAAyB,KAAK,KAAK,QAAV,GAAqB,CAAC,CAAD,GAAK,CAA1B,GAA8B,CAA3D,CAAL,GAAqE,CAAhF;AACA,QAAM,MAAM,GAAG,sBAAf;AACA,QAAM,KAAK,GAAG,WAAS,KAAK,GAAL,CAAS,KAAT,CAAgB,KAAK,IAAL,CAAU,MAAV,CAAiB,QAAjB,GAA4B,IAA7B,GAAqC,KAAK,OAAL,CAAa,EAAjE,EAAqE,CAArE,CAAT,GAAgF,GAA9F;AACA,QAAM,SAAS,GAAG,iBAAe,KAAK,KAAL,CAAW,CAAX,CAAf,GAA4B,IAA5B,GAAiC,MAAjC,GAAuC,GAAvC,GAA2C,KAA7D;AACA,QAAI,KAAK,GAAG,KAAK,GAAL,CAAS,KAAT,EAAgB;AAC1B,oBAAc,IADY;AAE1B,MAAA,mBAAmB,EAAG,KAAK,KAAK,MAAV,GAAmB,UAAnB,GAAgC,KAAK,KAAK,OAAV,GAAoB,UAApB,GAAiC,UAF7D;AAG1B,MAAA,OAAO,EAAE,CAAC,KAAK,KAAL,CAAW,CAAC,EAAZ,CAAD,EAAkB,KAAK,KAAL,CAAW,CAAC,CAAZ,CAAlB,EAAkC,CAAlC,EAAqC,KAAK,KAAL,CAAW,CAAC,GAAG,CAAf,CAArC,EAAwD,IAAxD,CAA6D,GAA7D;AAHiB,KAAhB,EAIT,CACD,KAAK,GAAL,CAAS,GAAT,EAAc;AAAC,MAAA,SAAS,EAAE;AAAZ,KAAd,EAAmC,OAAO,CAAC,UAAR,CAAmB,GAAnB,CAAnC,CADC,CAJS,CAAZ;AAOA,IAAA,MAAM,GAAG,KAAK,GAAL,CAAS,KAAT,EAAgB;AACvB,qBAAe,IADQ;AAEvB,MAAA,mBAAmB,EAAG,IAAI,KAAK,MAAT,GAAkB,UAAlB,GAA+B,UAF9B;AAGvB,MAAA,OAAO,EAAE,CAAC,IAAI,KAAK,MAAT,GAAkB,CAAlB,GAAsB,KAAK,KAAL,CAAW,EAAX,CAAvB,EAAuC,KAAK,KAAL,CAAW,CAAC,CAAZ,CAAvC,EAAuD,CAAvD,EAA0D,KAAK,KAAL,CAAW,CAAC,GAAG,CAAf,CAA1D,EAA6E,IAA7E,CAAkF,GAAlF;AAHc,KAAhB,EAIN,CAAC,MAAD,CAJM,CAAT;AAKA,IAAA,OAAO,CAAC,MAAR,CAAe,GAAf,EAAoB,KAAK,GAAL,CAAS,GAAT,EAAc;AAAC,MAAA,SAAS,EAAE;AAAZ,KAAd,EAAsC,CAAC,KAAD,EAAQ,MAAR,CAAtC,CAApB;AACA,SAAK,KAAL,CAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,GAAlB;AACD,GAxBS;;AAgCA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,GAAV,UAAmB,GAAnB,EAA2B,MAA3B,EAAsC,IAAtC,EAAoD,EAApD,EAA8D;AAC5D,QAAM,OAAO,GAAG,KAAK,OAArB;;AACM,QAAA,EAAA,GAAY,KAAK,OAAL,EAAZ;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAL;AAAA,QAAO,CAAC,GAAA,EAAA,CAAA,CAAR;;AACN,QAAM,CAAC,GAAG,CAAC,IAAI,KAAK,MAAL,IAAe,CAAnB,CAAD,GAAyB,CAAnC;AACA,QAAM,MAAM,GAAG,KAAK,YAAL,GAAoB,CAAnC;AACA,QAAM,KAAK,GAAG,KAAK,aAAL,GAAqB,CAArB,CAAd;AACA,QAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,SAAL,CAAe,YAAf,CAA4B,KAAK,UAAjC,CAAZ,CAAX;AACA,SAAK,KAAL,CAAW,IAAI,KAAK,MAAT,GACA,CAAC,KAAK,KAAK,MAAV,GAAmB,CAAnB,GAAuB,KAAK,KAAK,OAAV,GAAoB,CAAC,GAAG,EAAJ,GAAS,EAA7B,GAAkC,CAAC,CAAC,GAAG,EAAL,IAAW,CAAX,GAAe,EAAzE,IAA+E,CAD/E,GAEA,CAAC,KAAK,KAAK,MAAV,GAAmB,EAAnB,GAAwB,KAAK,KAAK,OAAV,GAAoB,CAAC,GAAG,EAAxB,GAA6B,CAAC,EAAE,GAAG,CAAN,IAAW,CAAX,GAAe,EAArE,IAA2E,CAA3E,GAA+E,MAF1F,EAGW,CAHX,EAGc,MAHd;AAIA,IAAA,OAAO,CAAC,MAAR,CAAe,GAAf,EAAoB,MAApB;AACD,GAZS;;AAlWI,EAAA,SAAA,CAAA,IAAA,GAAO,WAAA,CAAA,SAAA,CAAU,SAAV,CAAoB,IAA3B;AAKA,EAAA,SAAA,CAAA,MAAA,GAAoB;AAChC,0FAAsF;AACpF,sBAAgB,MADoE;AAEpF,MAAA,IAAI,EAAE;AAF8E,KADtD;AAKhC,4FAAwF;AACtF,sBAAgB,MADsE;AAEtF,MAAA,IAAI,EAAE;AAFgF,KALxD;AAShC,kFAA8E;AAC5E,0BAAoB;AADwD,KAT9C;AAYhC,kFAA8E;AAC5E,wBAAkB,OAD0D;AAE5E,0BAAoB;AAFwD,KAZ9C;AAgBhC,2CAAuC;AACrC,MAAA,QAAQ,EAAE;AAD2B;AAhBP,GAApB;AA2WhB,SAAA,SAAA;AAAC,CAtXD,CACA,WAAA,CAAA,iBAAA,CAA+F,YAAA,CAAA,UAA/F,CADA,CAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGmtable wrapper for the MmlMtable object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {SVGWrapperFactory} from '../WrapperFactory.js';\nimport {CommonMtableMixin} from '../../common/Wrappers/mtable.js';\nimport {SVGmtr} from './mtr.js';\nimport {SVGmtd} from './mtd.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {OptionList} from '../../../util/Options.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\nconst CLASSPREFIX = 'mjx-';\n\n/*****************************************************************/\n/**\n * The SVGmtable wrapper for the MmlMtable object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGmtable<N, T, D> extends\nCommonMtableMixin<SVGmtd<any, any, any>, SVGmtr<any, any, any>, SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The mtable wrapper\n   */\n  public static kind = MmlMtable.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'g[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame]': {\n      'stroke-width': '70px',\n      fill: 'none'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed': {\n      'stroke-dasharray': '140'\n    },\n    'g[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted': {\n      'stroke-linecap': 'round',\n      'stroke-dasharray': '0,140'\n    },\n    'g[data-mml-node=\"mtable\"] > g > svg': {\n      overflow: 'visible'\n    }\n  };\n\n  /**\n   * The column for labels\n   */\n  public labels: N;\n\n  /******************************************************************/\n\n  /**\n   * @override\n   */\n  constructor(factory: SVGWrapperFactory<N, T, D>, node: MmlNode, parent: SVGWrapper<N, T, D> = null) {\n    super(factory, node, parent);\n    const def: OptionList = {'data-labels': true};\n    if (this.isTop) {\n      def.transform = 'matrix(1 0 0 -1 0 0)';\n    }\n    this.labels = this.svg('g', def);\n  }\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    this.placeRows(svg);\n    this.handleColumnLines(svg);\n    this.handleRowLines(svg);\n    this.handleFrame(svg);\n    const dx = this.handlePWidth(svg);\n    this.handleLabels(svg, parent, dx);\n  }\n\n  /**\n   * @param {N} svg  The container in which to place the rows\n   */\n  protected placeRows(svg: N) {\n    const equal = this.node.attributes.get('equalrows') as boolean;\n    const {H, D} = this.getTableData();\n    const HD = this.getEqualRowHeight();\n    const rSpace = this.getRowHalfSpacing();\n    const rLines = [this.fLine, ...this.rLines, this.fLine];\n    let y = this.getBBox().h - rLines[0];\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i];\n      [row.H, row.D] = this.getRowHD(equal, HD, H[i], D[i]);\n      [row.tSpace, row.bSpace] = [rSpace[i], rSpace[i + 1]];\n      [row.tLine, row.bLine] = [rLines[i], rLines[i + 1]];\n      row.toSVG(svg);\n      row.place(0, y - rSpace[i] - row.H);\n      y -= rSpace[i] + row.H + row.D + rSpace[i + 1] + rLines[i + 1];\n    }\n  }\n\n  /**\n   * @param {boolean} equal   True for equal-height rows\n   * @param {number} HD       The height of equal-height rows\n   * @param {number} H        The natural height of the row\n   * @param {number} D        The natural depth of the row\n   * @returns {number[]}      The (possibly scaled) height and depth to use\n   */\n  protected getRowHD(equal: boolean, HD: number, H: number, D: number): [number, number] {\n    return (equal ? [(HD + H - D) / 2, (HD - H + D) / 2] : [H, D]);\n  }\n\n  /******************************************************************/\n\n  /**\n   * @override\n   */\n  public handleColor() {\n    super.handleColor();\n    const rect = this.firstChild();\n    if (rect) {\n      this.adaptor.setAttribute(rect, 'width', this.fixed(this.getWidth()));\n    }\n  }\n\n  /**\n   * Add vertical lines between columns\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleColumnLines(svg: N) {\n    if (this.node.attributes.get('columnlines') === 'none') return;\n    const lines = this.getColumnAttributes('columnlines');\n    if (!lines) return;\n    const cSpace = this.getColumnHalfSpacing();\n    const cLines = this.cLines;\n    const cWidth = this.getComputedWidths();\n    let x = this.fLine;\n    for (let i = 0; i < lines.length; i++) {\n      x += cSpace[i] + cWidth[i] + cSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeVLine(x, lines[i], cLines[i]));\n      }\n      x += cLines[i];\n    }\n  }\n\n  /**\n   * Add horizontal lines between rows\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleRowLines(svg: N) {\n    if (this.node.attributes.get('rowlines') === 'none') return;\n    const lines = this.getRowAttributes('rowlines');\n    if (!lines) return;\n    const equal = this.node.attributes.get('equalrows') as boolean;\n    const {H, D} = this.getTableData();\n    const HD = this.getEqualRowHeight();\n    const rSpace = this.getRowHalfSpacing();\n    const rLines = this.rLines;\n    let y = this.getBBox().h - this.fLine;\n    for (let i = 0; i < lines.length; i++) {\n      const [rH, rD] = this.getRowHD(equal, HD, H[i], D[i]);\n      y -= rSpace[i] + rH + rD + rSpace[i + 1];\n      if (lines[i] !== 'none') {\n        this.adaptor.append(svg, this.makeHLine(y, lines[i], rLines[i]));\n      }\n      y -= rLines[i];\n    }\n\n  }\n\n  /**\n   * Add a frame to the mtable, if needed\n   *\n   * @param {N} svg   The container for the table\n   */\n  protected handleFrame(svg: N) {\n    if (this.frame && this.fLine) {\n      const {h, d, w} = this.getBBox();\n      const style = this.node.attributes.get('frame') as string;\n      this.adaptor.append(svg, this.makeFrame(w, h, d, style));\n    }\n  }\n\n  /**\n   * @returns {number}   The x-adjustement needed to handle the true size of percentage-width tables\n   */\n  protected handlePWidth(svg: N): number {\n    if (!this.pWidth) {\n      return 0;\n    }\n    const {w, L, R} = this.getBBox();\n    const W = L + this.pWidth + R;\n    const align = this.getAlignShift()[0];\n    const CW = Math.max(this.isTop ? W : 0, this.container.getWrapWidth(this.containerI)) - L - R;\n    const dw = w - (this.pWidth > CW ? CW : this.pWidth);\n    const dx = (align === 'left' ? 0 : align === 'right' ? dw : dw / 2);\n    if (dx) {\n      const table = this.svg('g', {}, this.adaptor.childNodes(svg));\n      this.place(dx, 0, table);\n      this.adaptor.append(svg, table);\n    }\n    return dx;\n  }\n\n  /******************************************************************/\n\n  /**\n   * @param {string} style   The line style whose class is to be obtained\n   * @returns {string}       The class name for the style\n   */\n  protected lineClass(style: string): string {\n    return CLASSPREFIX + style;\n  }\n\n  /**\n   * @param {number} w       The width of the frame\n   * @param {number} h       The height of the frame\n   * @param {number} d       The depth of the frame\n   * @param {string} style   The border style for the frame\n   * @returns {N}            The SVG element for the frame\n   */\n  protected makeFrame(w: number, h: number, d: number, style: string): N {\n    const t = this.fLine;\n    return this.svg('rect', this.setLineThickness(t, style, {\n      'data-frame': true, 'class': this.lineClass(style),\n      width: this.fixed(w - t), height: this.fixed(h + d - t),\n      x: this.fixed(t / 2), y: this.fixed(t / 2 - d)\n    }));\n  }\n\n  /**\n   * @param {number} x       The x location of the line\n   * @param {string} style   The border style for the line\n   * @param {number} t       The line thickness\n   * @returns {N}            The SVG element for the line\n   */\n  protected makeVLine(x: number, style: string, t: number): N {\n    const {h, d} = this.getBBox();\n    const dt = (style === 'dotted' ? t / 2 : 0);\n    const X = this.fixed(x + t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'v', 'class': this.lineClass(style),\n      x1: X, y1: this.fixed(dt - d), x2: X, y2: this.fixed(h - dt)\n    }));\n  }\n\n  /**\n   * @param {number} y       The y location of the line\n   * @param {string} style   The border style for the line\n   * @param {number} t       The line thickness\n   * @returns {N}            The SVG element for the line\n   */\n  protected makeHLine(y: number, style: string, t: number): N {\n    const w = this.getBBox().w;\n    const dt = (style === 'dotted' ? t / 2 : 0);\n    const Y = this.fixed(y - t / 2);\n    return this.svg('line', this.setLineThickness(t, style, {\n      'data-line': 'h', 'class': this.lineClass(style),\n      x1: this.fixed(dt), y1: Y, x2: this.fixed(w - dt), y2: Y\n    }));\n  }\n\n  /**\n   * @param {number} t                The thickness of the line\n   * @param {string} style            The border style for the line\n   * @param {OptionList} properties   The list of properties to modify\n   * @param {OptionList}              The modified properties\n   */\n  protected setLineThickness(t: number, style: string, properties: OptionList) {\n    if (t !== .07) {\n      properties['stroke-thickness'] = this.fixed(t);\n      if (style !== 'solid') {\n        properties['stroke-dasharray'] = (style === 'dotted' ? '0,' : '') + this.fixed(2 * t);\n      }\n    }\n    return properties;\n  }\n\n  /******************************************************************/\n\n  /**\n   * Handle addition of labels to the table\n   *\n   * @param {N} svg       The container for the table contents\n   * @param {N} parent    The parent containing the the table\n   * @param {number} dx   The adjustement for percentage width tables\n   */\n  protected handleLabels(svg: N, _parent: N, dx: number) {\n    if (!this.hasLabels) return;\n    const labels = this.labels;\n    const attributes = this.node.attributes;\n    //\n    //  Set the side for the labels\n    //\n    const side = attributes.get('side') as string;\n    //\n    // Add the labels to the table\n    //\n    this.spaceLabels();\n    //\n    // Handle top-level table to make it adapt to container size\n    //   but place subtables explicitly\n    //\n    this.isTop ? this.topTable(svg, labels, side) : this.subTable(svg, labels, side, dx);\n  }\n\n  /**\n   * Add spacing elements between the label rows to align them with the rest of the table\n   */\n  protected spaceLabels() {\n    const adaptor = this.adaptor;\n    const h = this.getBBox().h;\n    const L = this.getTableData().L;\n    const space = this.getRowHalfSpacing();\n    //\n    //  Start with frame size and add in spacing, height and depth,\n    //    and line thickness for each non-labeled row.\n    //\n    let y = h - this.fLine;\n    let current = adaptor.firstChild(this.labels) as N;\n    for (let i = 0; i < this.numRows; i++) {\n      const row = this.childNodes[i] as SVGmtr<N, T, D>;\n      if (row.node.isKind('mlabeledtr')) {\n        const cell = row.childNodes[0];\n        y -= space[i] + row.H;\n        row.placeCell(cell, {x: 0, y: y, w: L, lSpace: 0, rSpace: 0, lLine: 0, rLine: 0});\n        y -= row.D + space[i + 1] + this.rLines[i];\n        current = adaptor.next(current) as N;\n      } else {\n        y -= space[i] + row.H + row.D + space[i + 1] + this.rLines[i];\n      }\n    }\n  }\n\n  /**\n   * Handles tables with labels so that the label will move with the size of the container\n   *\n   * @param {N} svg         The SVG container for the table\n   * @param {N} labels      The group of labels\n   * @param {string} side   The side alignment (left or right)\n   */\n  protected topTable(svg: N, labels: N, side: string) {\n    const adaptor = this.adaptor;\n    const {h, d, w, L, R} = this.getBBox();\n    const W = L + (this.pWidth || w) + R;\n    const LW = this.getTableData().L;\n    const [ , align, shift] = this.getPadAlignShift(side);\n    const dx = shift + (align === 'right' ? -W : align === 'center' ? -W / 2 : 0) + L;\n    const matrix = 'matrix(1 0 0 -1 0 0)';\n    const scale = `scale(${this.jax.fixed((this.font.params.x_height * 1000) / this.metrics.ex, 2)})`;\n    const transform = `translate(0 ${this.fixed(h)}) ${matrix} ${scale}`;\n    let table = this.svg('svg', {\n      'data-table': true,\n      preserveAspectRatio: (align === 'left' ? 'xMinYMid' : align === 'right' ? 'xMaxYMid' : 'xMidYMid'),\n      viewBox: [this.fixed(-dx), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [\n      this.svg('g', {transform: matrix}, adaptor.childNodes(svg))\n    ]);\n    labels = this.svg('svg', {\n      'data-labels': true,\n      preserveAspectRatio: (side === 'left' ? 'xMinYMid' : 'xMaxYMid'),\n      viewBox: [side === 'left' ? 0 : this.fixed(LW), this.fixed(-h), 1, this.fixed(h + d)].join(' ')\n    }, [labels]);\n    adaptor.append(svg, this.svg('g', {transform: transform}, [table, labels]));\n    this.place(-L, 0, svg);  // remove spacing for L, which is added by the parent during appending\n  }\n\n  /**\n   * @param {N} svg         The SVG container for the table\n   * @param {N} labels      The group of labels\n   * @param {string} side   The side alignment (left or right)\n   * @param {number} dx     The adjustement for percentage width tables\n   */\n  protected subTable(svg: N, labels: N, side: string, dx: number) {\n    const adaptor = this.adaptor;\n    const {w, L, R} = this.getBBox();\n    const W = L + (this.pWidth || w) + R;\n    const labelW = this.getTableData().L;\n    const align = this.getAlignShift()[0];\n    const CW = Math.max(W, this.container.getWrapWidth(this.containerI));\n    this.place(side === 'left' ?\n               (align === 'left' ? 0 : align === 'right' ? W - CW + dx : (W - CW) / 2 + dx) - L :\n               (align === 'left' ? CW : align === 'right' ? W + dx : (CW + W) / 2 + dx) - L - labelW,\n               0, labels);\n    adaptor.append(svg, labels);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}