{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlAnnotation = exports.MmlAnnotationXML = exports.MmlSemantics = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlSemantics = function (_super) {\n  __extends(MmlSemantics, _super);\n\n  function MmlSemantics() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlSemantics.prototype, \"kind\", {\n    get: function () {\n      return 'semantics';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlSemantics.prototype, \"arity\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlSemantics.prototype, \"notParent\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlSemantics.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {\n    definitionUrl: null,\n    encoding: null\n  });\n  return MmlSemantics;\n}(MmlNode_js_1.AbstractMmlBaseNode);\n\nexports.MmlSemantics = MmlSemantics;\n\nvar MmlAnnotationXML = function (_super) {\n  __extends(MmlAnnotationXML, _super);\n\n  function MmlAnnotationXML() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlAnnotationXML.prototype, \"kind\", {\n    get: function () {\n      return 'annotation-xml';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlAnnotationXML.prototype.setChildInheritedAttributes = function () {};\n\n  MmlAnnotationXML.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    definitionUrl: null,\n    encoding: null,\n    cd: 'mathmlkeys',\n    name: '',\n    src: null\n  });\n  return MmlAnnotationXML;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlAnnotationXML = MmlAnnotationXML;\n\nvar MmlAnnotation = function (_super) {\n  __extends(MmlAnnotation, _super);\n\n  function MmlAnnotation() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.properties = {\n      isChars: true\n    };\n    return _this;\n  }\n\n  Object.defineProperty(MmlAnnotation.prototype, \"kind\", {\n    get: function () {\n      return 'annotation';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlAnnotation.defaults = __assign({}, MmlAnnotationXML.defaults);\n  return MmlAnnotation;\n}(MmlAnnotationXML);\n\nexports.MmlAnnotation = MmlAnnotation;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/semantics.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAOA,IAAA,YAAA,GAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,YAAA,GAAA;;AAkCC;;AApBC,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,WAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAQA,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,aAAO,CAAP;AACD,KAFe;qBAAA;;AAAA,GAAhB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;SAApB,YAAA;AACE,aAAO,IAAP;AACD,KAFmB;qBAAA;;AAAA,GAApB;AAzBc,EAAA,YAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,mBAAA,CAAoB,QADH,CAAA,EACW;AAC/B,IAAA,aAAa,EAAE,IADgB;AAE/B,IAAA,QAAQ,EAAE;AAFqB,GADX,CAAR;AA6BhB,SAAA,YAAA;AAAC,CAlCD,CAAkC,YAAA,CAAA,mBAAlC,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA;;AAyCb,IAAA,gBAAA,GAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,gBAAA,GAAA;;AA2BC;;AAVC,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,gBAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;;AAQU,EAAA,gBAAA,CAAA,SAAA,CAAA,2BAAA,GAAV,YAAA,CAA0C,CAAhC;;AApBI,EAAA,gBAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,eAAA,CAAgB,QADC,CAAA,EACO;AAC3B,IAAA,aAAa,EAAE,IADY;AAE3B,IAAA,QAAQ,EAAE,IAFiB;AAG3B,IAAA,EAAE,EAAE,YAHuB;AAI3B,IAAA,IAAI,EAAE,EAJqB;AAK3B,IAAA,GAAG,EAAE;AALsB,GADP,CAAR;AAsBhB,SAAA,gBAAA;AAAC,CA3BD,CAAsC,YAAA,CAAA,eAAtC,CAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAkCb,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAnC,WAAA,aAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAYS,IAAA,KAAA,CAAA,UAAA,GAAa;AAClB,MAAA,OAAO,EAAE;AADS,KAAb;;AAWR;;AAJC,EAAA,MAAA,CAAA,cAAA,CAAW,aAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,YAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAdc,EAAA,aAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,EAAA,EACjB,gBAAgB,CAAC,QADA,CAAR;AAkBhB,SAAA,aAAA;AAAC,CAvBD,CAAmC,gBAAnC,CAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlSemantics, MmlAnnotation, and MmlAnnotationXML nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, AbstractMmlBaseNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class MmlSemantics extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    definitionUrl: null,\n    encoding: null\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'semantics';\n  }\n\n  /**\n   * <semantics> requires at least one node\n   * @override\n   */\n  public get arity() {\n    return 1;\n  }\n\n  /**\n   * Ignore <semantics> when looking for partent node\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlAnnotationXML extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    definitionUrl: null,\n    encoding: null,\n    cd: 'mathmlkeys',\n    name: '',\n    src: null\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'annotation-xml';\n  }\n\n  /**\n   * Children are XMLNodes, so don't bother inheritting to them\n   * @override\n   */\n  protected setChildInheritedAttributes() {}\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of MmlAnnotationXML)\n */\n\nexport class MmlAnnotation extends MmlAnnotationXML {\n\n  /**\n   * @override\n   */\n  public static defaults = {\n    ...MmlAnnotationXML.defaults\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    isChars: true\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'annotation';\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}