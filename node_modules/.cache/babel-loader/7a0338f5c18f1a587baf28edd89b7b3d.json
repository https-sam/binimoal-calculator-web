{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TeX = void 0;\n\nvar InputJax_js_1 = require(\"../core/InputJax.js\");\n\nvar Options_js_1 = require(\"../util/Options.js\");\n\nvar FindTeX_js_1 = require(\"./tex/FindTeX.js\");\n\nvar FilterUtil_js_1 = require(\"./tex/FilterUtil.js\");\n\nvar NodeUtil_js_1 = require(\"./tex/NodeUtil.js\");\n\nvar TexParser_js_1 = require(\"./tex/TexParser.js\");\n\nvar TexError_js_1 = require(\"./tex/TexError.js\");\n\nvar ParseOptions_js_1 = require(\"./tex/ParseOptions.js\");\n\nvar Tags_js_1 = require(\"./tex/Tags.js\");\n\nvar Configuration_js_1 = require(\"./tex/Configuration.js\");\n\nrequire(\"./tex/base/BaseConfiguration.js\");\n\nvar TeX = function (_super) {\n  __extends(TeX, _super);\n\n  function TeX(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = this;\n\n    var _a = __read(Options_js_1.separateOptions(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3),\n        rest = _a[0],\n        tex = _a[1],\n        find = _a[2];\n\n    _this = _super.call(this, tex) || this;\n    _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);\n    var packages = _this.options.packages;\n    var configuration = _this.configuration = TeX.configure(packages);\n    var parseOptions = _this._parseOptions = new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);\n    Options_js_1.userOptions(parseOptions.options, rest);\n    configuration.config(_this);\n    TeX.tags(parseOptions, configuration);\n\n    _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);\n\n    _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);\n\n    _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);\n\n    _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);\n\n    _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);\n\n    _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);\n\n    return _this;\n  }\n\n  TeX.configure = function (packages) {\n    var configuration = new Configuration_js_1.ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  };\n\n  TeX.tags = function (options, configuration) {\n    Tags_js_1.TagsFactory.addTags(configuration.tags);\n    Tags_js_1.TagsFactory.setDefault(options.options.tags);\n    options.tags = Tags_js_1.TagsFactory.getDefault();\n    options.tags.configuration = options;\n  };\n\n  TeX.prototype.setMmlFactory = function (mmlFactory) {\n    _super.prototype.setMmlFactory.call(this, mmlFactory);\n\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  };\n\n  Object.defineProperty(TeX.prototype, \"parseOptions\", {\n    get: function () {\n      return this._parseOptions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TeX.prototype.reset = function (tag) {\n    if (tag === void 0) {\n      tag = 0;\n    }\n\n    this.parseOptions.tags.reset(tag);\n  };\n\n  TeX.prototype.compile = function (math, document) {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    var display = math.display;\n    this.latex = math.math;\n    var node;\n    this.parseOptions.tags.startEquation(math);\n    var globalEnv;\n\n    try {\n      var parser = new TexParser_js_1.default(this.latex, {\n        display: display,\n        isInner: false\n      }, this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError_js_1.default)) {\n        throw err;\n      }\n\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n\n    if (globalEnv === null || globalEnv === void 0 ? void 0 : globalEnv.indentalign) {\n      NodeUtil_js_1.default.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n\n    if (display) {\n      NodeUtil_js_1.default.setAttribute(node, 'display', 'block');\n    }\n\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  };\n\n  TeX.prototype.findMath = function (strings) {\n    return this.findTeX.findMath(strings);\n  };\n\n  TeX.prototype.formatError = function (err) {\n    var message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);\n  };\n\n  TeX.NAME = 'TeX';\n  TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), {\n    FindTeX: null,\n    packages: ['base'],\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    maxBuffer: 5 * 1024,\n    formatError: function (jax, err) {\n      return jax.formatError(err);\n    }\n  });\n  return TeX;\n}(InputJax_js_1.AbstractInputJax);\n\nexports.TeX = TeX;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/node_modules/mathjax-full/ts/input/tex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,aAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAMA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,OAAA,CAAA,iCAAA,CAAA;;AAaA,IAAA,GAAA,GAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AA6EhC,WAAA,GAAA,CAAY,OAAZ,EAAoC;AAAxB,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAwB;;AAApC,QAAA,KAAA,GAAA,IAAA;;AACQ,QAAA,EAAA,GAAA,MAAA,CAAoB,YAAA,CAAA,eAAA,CAAgB,OAAhB,EAAyB,GAAG,CAAC,OAA7B,EAAsC,YAAA,CAAA,OAAA,CAAQ,OAA9C,CAApB,EAA0E,CAA1E,CAAA;AAAA,QAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL;AAAA,QAAO,GAAG,GAAA,EAAA,CAAA,CAAA,CAAV;AAAA,QAAY,IAAI,GAAA,EAAA,CAAA,CAAA,CAAhB;;AACN,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAN,KAAU,IAAV;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,OAAL,CAAa,SAAb,KAA2B,IAAI,YAAA,CAAA,OAAJ,CAAY,IAAZ,CAA1C;AACA,QAAM,QAAQ,GAAG,KAAI,CAAC,OAAL,CAAa,QAA9B;AACA,QAAM,aAAa,GAAG,KAAI,CAAC,aAAL,GAAqB,GAAG,CAAC,SAAJ,CAAc,QAAd,CAA3C;AACA,QAAM,YAAY,GAAG,KAAI,CAAC,aAAL,GACnB,IAAI,iBAAA,CAAA,OAAJ,CAAiB,aAAjB,EAAgC,CAAC,KAAI,CAAC,OAAN,EAAe,SAAA,CAAA,WAAA,CAAY,OAA3B,CAAhC,CADF;AAEA,IAAA,YAAA,CAAA,WAAA,CAAY,YAAY,CAAC,OAAzB,EAAkC,IAAlC;AACA,IAAA,aAAa,CAAC,MAAd,CAAqB,KAArB;AACA,IAAA,GAAG,CAAC,IAAJ,CAAS,YAAT,EAAuB,aAAvB;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,WAAhC,EAA6C,CAAC,CAA9C;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,YAAhC,EAA8C,CAAC,CAA/C;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,UAAhC,EAA4C,CAAC,CAA7C;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,aAAhC,EAA+C,CAAC,CAAhD;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,eAAhC,EAAiD,CAAC,CAAlD;;AACA,IAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,eAAA,CAAA,OAAA,CAAW,gBAAhC,EAAkD,CAAC,CAAnD;;;AACD;;AAzCgB,EAAA,GAAA,CAAA,SAAA,GAAjB,UAA2B,QAA3B,EAAkE;AAChE,QAAI,aAAa,GAAG,IAAI,kBAAA,CAAA,mBAAJ,CAAwB,QAAxB,EAAkC,CAAC,KAAD,CAAlC,CAApB;AACA,IAAA,aAAa,CAAC,IAAd;AACA,WAAO,aAAP;AACD,GAJgB;;AAaA,EAAA,GAAA,CAAA,IAAA,GAAjB,UAAsB,OAAtB,EAA6C,aAA7C,EAA+E;AAC7E,IAAA,SAAA,CAAA,WAAA,CAAY,OAAZ,CAAoB,aAAa,CAAC,IAAlC;AACA,IAAA,SAAA,CAAA,WAAA,CAAY,UAAZ,CAAuB,OAAO,CAAC,OAAR,CAAgB,IAAvC;AACA,IAAA,OAAO,CAAC,IAAR,GAAe,SAAA,CAAA,WAAA,CAAY,UAAZ,EAAf;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,aAAb,GAA6B,OAA7B;AACD,GALgB;;AAiCV,EAAA,GAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,UAArB,EAA2C;AACzC,IAAA,MAAA,CAAA,SAAA,CAAM,aAAN,CAAmB,IAAnB,CAAmB,IAAnB,EAAoB,UAApB;;AACA,SAAK,aAAL,CAAmB,WAAnB,CAA+B,aAA/B,CAA6C,UAA7C;AACD,GAHM;;AASP,EAAA,MAAA,CAAA,cAAA,CAAW,GAAA,CAAA,SAAX,EAAW,cAAX,EAAuB;SAAvB,YAAA;AACE,aAAO,KAAK,aAAZ;AACD,KAFsB;qBAAA;;AAAA,GAAvB;;AAOO,EAAA,GAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,GAAb,EAA4B;AAAf,QAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,GAAA,GAAA,CAAA;AAAe;;AAC1B,SAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB,CAA6B,GAA7B;AACD,GAFM;;AAQA,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,IAAf,EAAwC,QAAxC,EAAuE;AACrE,SAAK,YAAL,CAAkB,KAAlB;AACA,SAAK,cAAL,CAAoB,KAAK,UAAzB,EAAqC,IAArC,EAA2C,QAA3C,EAAqD,KAAK,YAA1D;AACA,QAAI,OAAO,GAAG,IAAI,CAAC,OAAnB;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,IAAlB;AACA,QAAI,IAAJ;AACA,SAAK,YAAL,CAAkB,IAAlB,CAAuB,aAAvB,CAAqC,IAArC;AACA,QAAI,SAAJ;;AACA,QAAI;AACF,UAAI,MAAM,GAAG,IAAI,cAAA,CAAA,OAAJ,CAAc,KAAK,KAAnB,EACc;AAAC,QAAA,OAAO,EAAE,OAAV;AAAmB,QAAA,OAAO,EAAE;AAA5B,OADd,EAEc,KAAK,YAFnB,CAAb;AAGA,MAAA,IAAI,GAAG,MAAM,CAAC,GAAP,EAAP;AACA,MAAA,SAAS,GAAG,MAAM,CAAC,KAAP,CAAa,MAAzB;AACD,KAND,CAME,OAAO,GAAP,EAAY;AACZ,UAAI,EAAE,GAAG,YAAY,aAAA,CAAA,OAAjB,CAAJ,EAAgC;AAC9B,cAAM,GAAN;AACD;;AACD,WAAK,YAAL,CAAkB,KAAlB,GAA0B,IAA1B;AACA,MAAA,IAAI,GAAG,KAAK,OAAL,CAAa,WAAb,CAAyB,IAAzB,EAA+B,GAA/B,CAAP;AACD;;AACD,IAAA,IAAI,GAAG,KAAK,YAAL,CAAkB,WAAlB,CAA8B,MAA9B,CAAqC,MAArC,EAA6C,MAA7C,EAAqD,CAAC,IAAD,CAArD,CAAP;;AACA,QAAI,SAAS,KAAA,IAAT,IAAA,SAAS,KAAA,KAAA,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,WAAf,EAA4B;AAC1B,MAAA,aAAA,CAAA,OAAA,CAAS,YAAT,CAAsB,IAAtB,EAA4B,aAA5B,EAA2C,SAAS,CAAC,WAArD;AACD;;AACD,QAAI,OAAJ,EAAa;AACX,MAAA,aAAA,CAAA,OAAA,CAAS,YAAT,CAAsB,IAAtB,EAA4B,SAA5B,EAAuC,OAAvC;AACD;;AACD,SAAK,YAAL,CAAkB,IAAlB,CAAuB,cAAvB,CAAsC,IAAtC;AACA,SAAK,YAAL,CAAkB,IAAlB,GAAyB,IAAzB;AACA,SAAK,cAAL,CAAoB,KAAK,WAAzB,EAAsC,IAAtC,EAA4C,QAA5C,EAAsD,KAAK,YAA3D;AACA,SAAK,QAAL,GAAgB,KAAK,YAAL,CAAkB,IAAlC;AACA,WAAO,KAAK,QAAZ;AACD,GAjCM;;AAuCA,EAAA,GAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,OAAhB,EAAiC;AAC/B,WAAO,KAAK,OAAL,CAAa,QAAb,CAAsB,OAAtB,CAAP;AACD,GAFM;;AAUA,EAAA,GAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,GAAnB,EAAgC;AAC9B,QAAI,OAAO,GAAG,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAoB,MAApB,EAA4B,EAA5B,CAAd;AACA,WAAO,KAAK,YAAL,CAAkB,WAAlB,CAA8B,MAA9B,CACL,OADK,EACI,OADJ,EACa,GAAG,CAAC,EADjB,EACqB,KAAK,KAD1B,CAAP;AAED,GAJM;;AAtKO,EAAA,GAAA,CAAA,IAAA,GAAe,KAAf;AAMA,EAAA,GAAA,CAAA,OAAA,GAAO,QAAA,CAAA,QAAA,CAAA,EAAA,EAChB,aAAA,CAAA,gBAAA,CAAiB,OADD,CAAA,EACQ;AAC3B,IAAA,OAAO,EAAE,IADkB;AAE3B,IAAA,QAAQ,EAAE,CAAC,MAAD,CAFiB;AAI3B,IAAA,MAAM,EAAE,qDAJmB;AAM3B,IAAA,SAAS,EAAE,IAAI,IANY;AAO3B,IAAA,WAAW,EAAE,UAAC,GAAD,EAA0B,GAA1B,EAAuC;AAAK,aAAA,GAAG,CAAC,WAAJ,CAAA,GAAA,CAAA;AAAoB;AAPlD,GADR,CAAP;AAsKhB,SAAA,GAAA;AAAC,CAlLD,CAAkC,aAAA,CAAA,gBAAlC,CAAA;;AAAa,OAAA,CAAA,GAAA,GAAA,GAAA","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX InputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractInputJax} from '../core/InputJax.js';\nimport {userOptions, separateOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../core/MmlTree/MmlFactory.js';\n\nimport {FindTeX} from './tex/FindTeX.js';\n\nimport FilterUtil from './tex/FilterUtil.js';\nimport NodeUtil from './tex/NodeUtil.js';\nimport TexParser from './tex/TexParser.js';\nimport TexError from './tex/TexError.js';\nimport ParseOptions from './tex/ParseOptions.js';\nimport {TagsFactory} from './tex/Tags.js';\nimport {ParserConfiguration} from './tex/Configuration.js';\n// Import base as it is the default package loaded.\nimport './tex/base/BaseConfiguration.js';\n\n\n/*****************************************************************/\n/*\n *  Implements the TeX class (extends AbstractInputJax)\n */\n\n/**\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class TeX<N, T, D> extends AbstractInputJax<N, T, D> {\n\n  /**\n   * Name of input jax.\n   * @type {string}\n   */\n  public static NAME: string = 'TeX';\n\n  /**\n   * Default options for the jax.\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    ...AbstractInputJax.OPTIONS,\n    FindTeX: null,\n    packages: ['base'],\n    // Digit pattern to match numbers.\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    // Maximum size of TeX string to process.\n    maxBuffer: 5 * 1024,\n    formatError: (jax: TeX<any, any, any>, err: TexError) => jax.formatError(err)\n  };\n\n  /**\n   * The FindTeX instance used for locating TeX in strings\n   */\n  protected findTeX: FindTeX<N, T, D>;\n\n  /**\n   * The configuration of the TeX jax.\n   * @type {ParserConfiguration}\n   */\n  protected configuration: ParserConfiguration;\n\n  /**\n   * The LaTeX code that is parsed.\n   * @type {string}\n   */\n  protected latex: string;\n\n  /**\n   * The Math node that results from parsing.\n   * @type {MmlNode}\n   */\n  protected mathNode: MmlNode;\n\n  private _parseOptions: ParseOptions;\n\n  /**\n   * Initialises the configurations.\n   * @param {string[]} packages Names of packages.\n   * @return {Configuration} The configuration object.\n   */\n  protected static configure(packages: (string | [string, number])[]): ParserConfiguration {\n    let configuration = new ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  }\n\n\n  /**\n   * Initialises the Tags factory. Add tagging structures from packages and set\n   * tagging to given default.\n   * @param {ParseOptions} options The parse options.\n   * @param {Configuration} configuration The configuration.\n   */\n  protected static tags(options: ParseOptions, configuration: ParserConfiguration) {\n    TagsFactory.addTags(configuration.tags);\n    TagsFactory.setDefault(options.options.tags);\n    options.tags = TagsFactory.getDefault();\n    options.tags.configuration = options;\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList = {}) {\n    const [rest, tex, find] = separateOptions(options, TeX.OPTIONS, FindTeX.OPTIONS);\n    super(tex);\n    this.findTeX = this.options['FindTeX'] || new FindTeX(find);\n    const packages = this.options.packages;\n    const configuration = this.configuration = TeX.configure(packages);\n    const parseOptions = this._parseOptions =\n      new ParseOptions(configuration, [this.options, TagsFactory.OPTIONS]);\n    userOptions(parseOptions.options, rest);\n    configuration.config(this);\n    TeX.tags(parseOptions, configuration);\n    this.postFilters.add(FilterUtil.cleanSubSup, -6);\n    this.postFilters.add(FilterUtil.setInherited, -5);\n    this.postFilters.add(FilterUtil.moveLimits, -4);\n    this.postFilters.add(FilterUtil.cleanStretchy, -3);\n    this.postFilters.add(FilterUtil.cleanAttributes, -2);\n    this.postFilters.add(FilterUtil.combineRelations, -1);\n  }\n\n  /**\n   * @override\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    super.setMmlFactory(mmlFactory);\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  }\n\n\n  /**\n   * @return {ParseOptions} The parse options that configure this JaX instance.\n   */\n  public get parseOptions(): ParseOptions {\n    return this._parseOptions;\n  }\n\n  /**\n   * @override\n   */\n  public reset(tag: number = 0) {\n    this.parseOptions.tags.reset(tag);\n  }\n\n\n  /**\n   * @override\n   */\n  public compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    let display = math.display;\n    this.latex = math.math;\n    let node: MmlNode;\n    this.parseOptions.tags.startEquation(math);\n    let globalEnv;\n    try {\n      let parser = new TexParser(this.latex,\n                                 {display: display, isInner: false},\n                                 this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError)) {\n        throw err;\n      }\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n    if (globalEnv?.indentalign) {\n      NodeUtil.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n    if (display) {\n      NodeUtil.setAttribute(node, 'display', 'block');\n    }\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  }\n\n\n  /**\n   * @override\n   */\n  public findMath(strings: string[]) {\n    return this.findTeX.findMath(strings);\n  }\n\n  /**\n   * Default formatter for error messages:\n   *   wrap an error into a node for output.\n   * @param {TeXError} err The TexError.\n   * @return {Node} The merror node.\n   */\n  public formatError(err: TexError): MmlNode {\n    let message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create(\n      'error', message, err.id, this.latex);\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}