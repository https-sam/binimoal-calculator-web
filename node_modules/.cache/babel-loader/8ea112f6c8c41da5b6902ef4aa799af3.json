{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMover = exports.MmlMunder = exports.MmlMunderover = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMunderover = function (_super) {\n  __extends(MmlMunderover, _super);\n\n  function MmlMunderover() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMunderover.prototype, \"kind\", {\n    get: function () {\n      return 'munderover';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"arity\", {\n    get: function () {\n      return 3;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"base\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"under\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"over\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunderover.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMunderover.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    var nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);\n    var force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));\n    var ACCENTS = this.constructor.ACCENTS;\n    nodes[1].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[1], force, level), prime || this.under === 1);\n    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);\n\n    if (!nodes[2]) {\n      return;\n    }\n\n    nodes[2].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[2], force, level), prime || this.under === 2);\n    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);\n  };\n\n  MmlMunderover.prototype.getScriptlevel = function (accent, force, level) {\n    if (force || !this.attributes.get(accent)) {\n      level++;\n    }\n\n    return level;\n  };\n\n  MmlMunderover.prototype.setInheritedAccent = function (n, accent, display, level, prime, force) {\n    var node = this.childNodes[n];\n\n    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {\n      var value = node.coreMO().attributes.get('accent');\n      this.attributes.setInherited(accent, value);\n\n      if (value !== this.attributes.getDefault(accent)) {\n        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);\n      }\n    }\n  };\n\n  MmlMunderover.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), {\n    accent: false,\n    accentunder: false,\n    align: 'center'\n  });\n  MmlMunderover.ACCENTS = ['', 'accentunder', 'accent'];\n  return MmlMunderover;\n}(MmlNode_js_1.AbstractMmlBaseNode);\n\nexports.MmlMunderover = MmlMunderover;\n\nvar MmlMunder = function (_super) {\n  __extends(MmlMunder, _super);\n\n  function MmlMunder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMunder.prototype, \"kind\", {\n    get: function () {\n      return 'munder';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMunder.prototype, \"arity\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMunder.defaults = __assign({}, MmlMunderover.defaults);\n  return MmlMunder;\n}(MmlMunderover);\n\nexports.MmlMunder = MmlMunder;\n\nvar MmlMover = function (_super) {\n  __extends(MmlMover, _super);\n\n  function MmlMover() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMover.prototype, \"kind\", {\n    get: function () {\n      return 'mover';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"arity\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"over\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMover.prototype, \"under\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MmlMover.defaults = __assign({}, MmlMunderover.defaults);\n  MmlMover.ACCENTS = ['', 'accent', 'accentunder'];\n  return MmlMover;\n}(MmlMunderover);\n\nexports.MmlMover = MmlMover;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/munderover.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMunderover node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunderover node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMunderover extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    accent: false,\n    accentunder: false,\n    align: 'center'\n  };\n\n  /**\n   * The names of attributes controling accents for each child node (reversed for mover below)\n   */\n  protected static ACCENTS = ['', 'accentunder', 'accent'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munderover';\n  }\n\n  /**\n   * <munderover> requires three children\n   * @override\n   */\n  public get arity() {\n    return 3;\n  }\n\n  /**\n   * @return {number}  The base is child 0\n   */\n  public get base(): number {\n    return 0;\n  }\n\n  /**\n   * @return {number}  Child 1 goes under (overridden by mover below)\n   */\n  public get under(): number {\n    return 1;\n  }\n\n  /**\n   * @return {number}  Child 2 goes over (overridden by mover below)\n   */\n  public get over(): number {\n    return 2;\n  }\n\n  /**\n   * <munderover> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Base is in prime style if there is an over node\n   * Force scriptlevel change if converted to sub-sup by movablelimits on the base in non-display mode\n   * Adjust displaystyle, scriptlevel, and primestyle for the under/over nodes and check if accent\n   *   values have changed due to the inheritance (e.g., settings in operator dictionary)\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);\n    let force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));\n    let ACCENTS = (this.constructor as typeof MmlMunderover).ACCENTS;\n    nodes[1].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[1], force, level),\n                                    prime || this.under === 1);\n    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);\n    if (!nodes[2]) {\n      return;\n    }\n    nodes[2].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[2], force, level),\n                                    prime || this.under === 2);\n    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);\n  }\n\n  /**\n   * @param {string} accent  The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} force  True if the scriptlevel change is to be forced to occur\n   * @param {number} level   The current scriptlevel\n   * @return {number}        The new script level based on the accent attribute\n   */\n  protected getScriptlevel(accent: string, force: boolean, level: number): number {\n    if (force || !this.attributes.get(accent)) {\n      level++;\n    }\n    return level;\n  }\n\n  /**\n   * Check if an under or over accent should cause the appropriate accent attribute to be inherited\n   *   on the munderover node, and if it is not the default, re-inherit the scriptlevel, since that\n   *   is affected by the accent attribute\n   *\n   * @param {number} n         The index of the node to check\n   * @param {string} accent    The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} display  The displaystyle\n   * @param {number} level     The scriptlevel\n   * @param {number} prime     The TeX prime style\n   * @param {boolean} force    Whether to force the scriptlevel change\n   */\n  protected setInheritedAccent(n: number, accent: string, display: boolean, level: number,\n                               prime: boolean, force: boolean) {\n    let node = this.childNodes[n];\n    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {\n      let value = node.coreMO().attributes.get('accent');\n      this.attributes.setInherited(accent, value);\n      if (value !== this.attributes.getDefault(accent)) {\n        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);\n      }\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunder node class (subclass of MmlMunderover)\n */\n\nexport class MmlMunder extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munder';\n  }\n\n  /**\n   * <munder> has only two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMover node class (subclass of MmlMunderover)\n */\n\nexport class MmlMover extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n  /**\n   *  The first child is the over accent (second never occurs)\n   */\n  protected static ACCENTS = ['', 'accent', 'accentunder'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mover';\n  }\n\n  /**\n   * <mover> has only two children\n   * @override\n   */\n  get arity() {\n    return 2;\n  }\n\n  /**\n   * Child 1 is the over node\n   * @override\n   */\n  public get over() {\n    return 1;\n  }\n\n  /**\n   * Child 2 is the null (the under node)\n   * @override\n   */\n  public get under() {\n    return 2;\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}