{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGxml = exports.SVGannotationXML = exports.SVGannotation = exports.SVGsemantics = void 0;\n\nvar Wrapper_js_1 = require(\"../Wrapper.js\");\n\nvar semantics_js_1 = require(\"../../common/Wrappers/semantics.js\");\n\nvar semantics_js_2 = require(\"../../../core/MmlTree/MmlNodes/semantics.js\");\n\nvar MmlNode_js_1 = require(\"../../../core/MmlTree/MmlNode.js\");\n\nvar SVGsemantics = function (_super) {\n  __extends(SVGsemantics, _super);\n\n  function SVGsemantics() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGsemantics.prototype.toSVG = function (parent) {\n    var svg = this.standardSVGnode(parent);\n\n    if (this.childNodes.length) {\n      this.childNodes[0].toSVG(svg);\n    }\n  };\n\n  SVGsemantics.kind = semantics_js_2.MmlSemantics.prototype.kind;\n  return SVGsemantics;\n}(semantics_js_1.CommonSemanticsMixin(Wrapper_js_1.SVGWrapper));\n\nexports.SVGsemantics = SVGsemantics;\n\nvar SVGannotation = function (_super) {\n  __extends(SVGannotation, _super);\n\n  function SVGannotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGannotation.prototype.toSVG = function (parent) {\n    _super.prototype.toSVG.call(this, parent);\n  };\n\n  SVGannotation.prototype.computeBBox = function () {\n    return this.bbox;\n  };\n\n  SVGannotation.kind = semantics_js_2.MmlAnnotation.prototype.kind;\n  return SVGannotation;\n}(Wrapper_js_1.SVGWrapper);\n\nexports.SVGannotation = SVGannotation;\n\nvar SVGannotationXML = function (_super) {\n  __extends(SVGannotationXML, _super);\n\n  function SVGannotationXML() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGannotationXML.kind = semantics_js_2.MmlAnnotationXML.prototype.kind;\n  SVGannotationXML.styles = {\n    'foreignObject[data-mjx-xml]': {\n      'font-family': 'initial',\n      'line-height': 'normal',\n      overflow: 'visible'\n    }\n  };\n  return SVGannotationXML;\n}(Wrapper_js_1.SVGWrapper);\n\nexports.SVGannotationXML = SVGannotationXML;\n\nvar SVGxml = function (_super) {\n  __extends(SVGxml, _super);\n\n  function SVGxml() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SVGxml.prototype.toSVG = function (parent) {\n    var xml = this.adaptor.clone(this.node.getXML());\n    var em = this.jax.math.metrics.em * this.jax.math.metrics.scale;\n    var scale = this.fixed(1 / em);\n\n    var _a = this.getBBox(),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n\n    this.element = this.adaptor.append(parent, this.svg('foreignObject', {\n      'data-mjx-xml': true,\n      y: this.jax.fixed(-h * em) + 'px',\n      width: this.jax.fixed(w * em) + 'px',\n      height: this.jax.fixed((h + d) * em) + 'px',\n      transform: \"scale(\" + scale + \") matrix(1 0 0 -1 0 0)\"\n    }, [xml]));\n  };\n\n  SVGxml.prototype.computeBBox = function (bbox, _recompute) {\n    if (_recompute === void 0) {\n      _recompute = false;\n    }\n\n    var _a = this.jax.measureXMLnode(this.node.getXML()),\n        w = _a.w,\n        h = _a.h,\n        d = _a.d;\n\n    bbox.w = w;\n    bbox.h = h;\n    bbox.d = d;\n  };\n\n  SVGxml.prototype.getStyles = function () {};\n\n  SVGxml.prototype.getScale = function () {};\n\n  SVGxml.prototype.getVariant = function () {};\n\n  SVGxml.kind = MmlNode_js_1.XMLNode.prototype.kind;\n  SVGxml.autoStyle = false;\n  return SVGxml;\n}(Wrapper_js_1.SVGWrapper);\n\nexports.SVGxml = SVGxml;","map":{"version":3,"sources":["/Users/sam/Desktop/projects/binimoal-calculator-web/node_modules/mathjax-full/ts/output/svg/Wrappers/semantics.ts"],"names":[],"mappings":"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","sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2021 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGsemantics wrapper for the MmlSemantics object\n *                and the associated wrappers for annotations\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGWrapper, SVGConstructor} from '../Wrapper.js';\nimport {CommonSemanticsMixin} from '../../common/Wrappers/semantics.js';\nimport {BBox} from '../../../util/BBox.js';\nimport {MmlSemantics, MmlAnnotation, MmlAnnotationXML} from '../../../core/MmlTree/MmlNodes/semantics.js';\nimport {XMLNode} from '../../../core/MmlTree/MmlNode.js';\nimport {StyleList} from '../../../util/StyleList.js';\n\n/*****************************************************************/\n/**\n * The SVGsemantics wrapper for the MmlSemantics object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\n// @ts-ignore\nexport class SVGsemantics<N, T, D> extends\nCommonSemanticsMixin<SVGConstructor<any, any, any>>(SVGWrapper) {\n\n  /**\n   * The semantics wrapper\n   */\n  public static kind = MmlSemantics.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const svg = this.standardSVGnode(parent);\n    if (this.childNodes.length) {\n      this.childNodes[0].toSVG(svg);\n    }\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n * The SVGannotation wrapper for the MmlAnnotation object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGannotation<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The annotation wrapper\n   */\n  public static kind = MmlAnnotation.prototype.kind;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    // FIXME:  output as plain text\n    super.toSVG(parent);\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox() {\n    // FIXME:  compute using the DOM, if possible\n    return this.bbox;\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The SVGannotationXML wrapper for the MmlAnnotationXML object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGannotationXML<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The annotation-xml wrapper\n   */\n  public static kind = MmlAnnotationXML.prototype.kind;\n\n  /**\n   * @override\n   */\n  public static styles: StyleList = {\n    'foreignObject[data-mjx-xml]': {\n      'font-family': 'initial',\n      'line-height': 'normal',\n      overflow: 'visible'\n    }\n  };\n\n}\n\n/*****************************************************************/\n/**\n * The SVGxml wrapper for the XMLNode object\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGxml<N, T, D> extends SVGWrapper<N, T, D> {\n\n  /**\n   * The XMLNode wrapper\n   */\n  public static kind = XMLNode.prototype.kind;\n\n  /**\n   * Don't include inline-block CSS for this element\n   */\n  public static autoStyle = false;\n\n  /**\n   * @override\n   */\n  public toSVG(parent: N) {\n    const xml = this.adaptor.clone((this.node as XMLNode).getXML() as N);\n    const em = this.jax.math.metrics.em * this.jax.math.metrics.scale;\n    const scale = this.fixed(1 / em);\n    const {w, h, d} = this.getBBox();\n    this.element = this.adaptor.append(parent, this.svg('foreignObject', {\n      'data-mjx-xml': true,\n      y: this.jax.fixed(-h * em) + 'px',\n      width: this.jax.fixed(w * em) + 'px',\n      height: this.jax.fixed((h + d) * em) + 'px',\n      transform: `scale(${scale}) matrix(1 0 0 -1 0 0)`\n    }, [xml]));\n  }\n\n  /**\n   * @override\n   */\n  public computeBBox(bbox: BBox, _recompute: boolean = false) {\n    const {w, h, d} = this.jax.measureXMLnode((this.node as XMLNode).getXML() as N);\n    bbox.w = w;\n    bbox.h = h;\n    bbox.d = d;\n  }\n\n  /**\n   * @override\n   */\n  protected getStyles() {}\n\n  /**\n   * @override\n   */\n  protected getScale() {}\n\n  /**\n   * @override\n   */\n  protected getVariant() {}\n}\n"]},"metadata":{},"sourceType":"script"}