[{"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/index.js":"1","/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/App.js":"2","/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/reportWebVitals.js":"3","/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/DisplayAns.js":"4","/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/Input.js":"5","/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/Calculate.js":"6","/Users/sam/Desktop/projects/binimoal-calculator-web/src/index.js":"7","/Users/sam/Desktop/projects/binimoal-calculator-web/src/App.js":"8","/Users/sam/Desktop/projects/binimoal-calculator-web/src/reportWebVitals.js":"9","/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/Calculate.js":"10","/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/Input.js":"11","/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/DisplayAns.js":"12"},{"size":288,"mtime":1641229745562,"results":"13","hashOfConfig":"14"},{"size":620,"mtime":1641268559706,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1641194431423,"results":"16","hashOfConfig":"14"},{"size":585,"mtime":1643837406446,"results":"17","hashOfConfig":"14"},{"size":2133,"mtime":1641271823809,"results":"18","hashOfConfig":"14"},{"size":2615,"mtime":1643836534757,"results":"19","hashOfConfig":"14"},{"size":288,"mtime":1641229745562,"results":"20","hashOfConfig":"21"},{"size":620,"mtime":1641268559706,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1641194431423,"results":"23","hashOfConfig":"21"},{"size":2615,"mtime":1643836534757,"results":"24","hashOfConfig":"21"},{"size":2133,"mtime":1641271823809,"results":"25","hashOfConfig":"21"},{"size":585,"mtime":1643837406446,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mm5k8k",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"40ly02",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/index.js",[],[],"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/App.js",["66","67"],[],"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/reportWebVitals.js",[],[],"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/DisplayAns.js",[],[],"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/Input.js",["68","69"],[],"/Users/sam/Desktop/projects/Binomial_expansion/Web/binomial/src/components/Calculate.js",["70","71","72"],[],"/Users/sam/Desktop/projects/binimoal-calculator-web/src/index.js",[],[],"/Users/sam/Desktop/projects/binimoal-calculator-web/src/App.js",["73","74"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Input from './components/Input';\nimport { Binomial_Sigma } from './components/Calculate';\nimport { useState } from 'react';\nimport Answer from './components/DisplayAns';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [first, setFirst] = useState(true);\n\n  const dataPass = newData => {\n    setFirst(false);\n    setData(newData);\n  };\n  return (\n    <div>\n      <Input onSubmitData={dataPass} />\n      {!first ? <Answer \n        x = {data.x}\n        y = {data.y}\n        p = {data.p} \n      /> : <p></p>}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sam/Desktop/projects/binimoal-calculator-web/src/reportWebVitals.js",[],[],"/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/Calculate.js",["75","76","77"],[],"\n\nfunction factrial(n) {\n\n    if (n === 0 || n === 1)\n         return 1;\n    else\n        return n * factrial(n - 1);\n }\n \n \n function combination(n, r) {\n     return factrial(n) / (factrial(r) * factrial(n-r));\n }\n \nfunction coefficient(x, y, n, r) {\n    let ret = x * y * combination(n, r);\n\n    if(ret === 1) return ''; // if coefficient is 1 return nothing because we dont usually put 1 as coeffocient\n\n    else\n    return ret;\n }\n \n \n export function Binomial_Sigma(x, y, n) {\n     let x_co;\n     let y_co;\n     let x_coeffcient = [];\n     let y_coeffcient = [];\n     let coefficients = [];\n     let result = [];\n     let x_power = [];\n     let y_power = [];\n     let ans = '';\n\n\n     n = Number(n); // converts n to an integer\n\n     if(x === 0) {\n        y_co = Math.pow(y, n);\n        let yPower = 'y^{' + n + '}';\n        return y_co + yPower;\n     }\n\n     else if(y === 0) {\n        x_co = Math.pow(x, n);\n        let xPower = 'x^{' + n + '}';\n        return x_co + xPower;\n     }\n    \n     for (let j = 0; j < n+1; j++) \n     {\n         if(x !== 1) { // x is not 1\n             x_co = Math.pow(x, n-j);\n             x_coeffcient.push(x_co);\n         }\n         else {\n             x_coeffcient.push(1);\n         }\n         if(y !== 1) { // y is not 1\n             y_co = Math.pow(y, j);\n             y_coeffcient.push(y_co);\n         }\n         else {\n             y_coeffcient.push(1);\n         }\n         x_power.push(n-j);\n         y_power.push(j);\n         coefficients.push(coefficient(x_coeffcient[j], y_coeffcient[j], n, j));\n     }\n\n\n     for (let i = 0; i < y_power.length; i++) { // convert it to latex syntax\n        let term, x, y;\n        if(x_power[i] === 0) x = \"\";\n        else if(x_power[i] === 1) x = \"x\";\n        else x = \"x^\" + '{' + x_power[i] + '}';\n        if(y_power[i] === 0) y = \"\";\n        else if(y_power[i] === 1) y = \"y\";\n        else y = \"y^\"+ '{' + y_power[i] + '}';\n        let Coefficient = coefficient(x_coeffcient[i], y_coeffcient[i], n, i); // caluclates coefficient. Could use toFixed(0) but need to consoder a case where coefficient is ''\n        let operator = '';\n        if(Coefficient > 1) operator = '+'; // for positive values, use +\n\n\n        if(i === 0) { // first term \n            if(operator === '+') operator = '';\n            result.push(operator + Coefficient + x);\n        }\n\n        else if(i === y_power.length-1) { // last term\n            result.push(operator + Coefficient + y);\n        }\n        else { // terms in the middle\n            result.push(operator + Coefficient + x + y);\n        }\n        ans += result[i];\n    }\n    return ans;\n }\n ","/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/Input.js",["78","79"],[],"import react, { useDebugValue, useState } from \"react\";\nimport { MathComponent } from 'mathjax-react';\nimport './input.css';\n\nconst Input = (props) => {\n    const [xValue, setXValue] = useState('');\n    const [yValue, setYValue] = useState('');\n    const [power, setPower] = useState('');\n\n\n\n    const Submit = (e) => {\n        console.log('submitted');\n        e.preventDefault(); // prevents page from reloading\n        const data = {\n            x: xValue,\n            y: yValue,\n            p: power,\n        };\n\n        props.onSubmitData(data);\n        setXValue(''); // 2 way binding\n        setYValue('');\n        setPower('');\n    };\n\n\n\n    const onChangeX = (event) => {\n        setXValue(event.target.value);\n    };\n\n    const onChangeY = (event) => {\n        setYValue(event.target.value);\n    };\n\n    const onChangePower = (event) => {\n        setPower(event.target.value);\n    };\n\n    let operator = '';\n    if(yValue > 0) operator = '+'; \n\n    return <div className=\"InputForm\">\n            <div className=\"form-style-5\">\n                <form onSubmit={Submit}>\n                    <fieldset>\n                        <legend>Binomial Calculator</legend><br/>\n                        <input required type=\"number\" id=\"x-value\" value = {xValue}name=\"x-value\" onChange={onChangeX} placeholder=\"Coefficient of x\" /><br/>\n                        <input required type=\"number\" id=\"y-value\" value={yValue} onChange={onChangeY}placeholder=\"Coefficient of y\" /><br/>\n                        <input required type=\"number\" min={0} id=\"power\" value={power} onChange={onChangePower} placeholder=\"Power\"/>\n                    </fieldset>\n                    <div> \n                        {(xValue && yValue && power) ? <p className=\"preview\">Preview:</p> : <p className=\"preview\">Enter Values</p>}\n                        {(xValue && yValue && power) ? <MathComponent tex={String.raw`\\ (${xValue}x${operator}${yValue}y)^{${power}}`} /> : <p></p>}<br/>\n                    </div>\n                    <input type=\"submit\" id=\"submit\" value=\"Solve\"/>\n                </form>\n            </div>\n    </div>\n}\n\n\n\n\n\nexport default Input;","/Users/sam/Desktop/projects/binimoal-calculator-web/src/components/DisplayAns.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":24},{"ruleId":"80","severity":1,"message":"85","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":30},{"ruleId":"80","severity":1,"message":"87","line":75,"column":13,"nodeType":"82","messageId":"83","endLine":75,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":78,"column":23,"nodeType":"90","messageId":"91","endLine":78,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":81,"column":22,"nodeType":"90","messageId":"91","endLine":81,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":24},{"ruleId":"80","severity":1,"message":"87","line":75,"column":13,"nodeType":"82","messageId":"83","endLine":75,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":78,"column":23,"nodeType":"90","messageId":"91","endLine":78,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":81,"column":22,"nodeType":"90","messageId":"91","endLine":81,"endColumn":23},{"ruleId":"80","severity":1,"message":"85","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Binomial_Sigma' is defined but never used.","'react' is defined but never used.","'useDebugValue' is defined but never used.","'term' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]